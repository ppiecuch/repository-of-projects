【装饰模式】Decorator Mode
应用情形：
1、需要扩展一个类的功能，或给一个类增加责任；
2、需要动态地给一个对象增加功能，这些功能可以再动态撤销；
3、需要增加由一些基本功能的排列组合而产生的非常大量的功能，从而使继承关系变得不现实。

装饰模式的对象图呈链状结构：
new Decorator1(new Decorator2(new Decorator3(new Component())))

通过使用不同的具体装饰类以及这些装饰类的排列组合，设计师可以创造出很多不同行为的组合。

装饰模式与适配器模式的区别：
适配器模式的用意是要改变所考虑的对象的接口而不一定改变对象的性能，而装饰模式的用意是要保持接口，并增强所考虑对象的性能。