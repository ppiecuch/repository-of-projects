java:
private void callbackDestroy(){
		activity.finish();
}

c++:
jboolean Java_xc2d_AndroidGLView_nativeOnBack(JNIEnv *pEnv, jobject obj){
	LOGD(LOG_TAG,"nativeOnBack");
	//SINCE JDK/JRE 1.2:
	//In JDK 1.1, FindClass searched only local classes in CLASSPATH. The resulting classes did not have a class loader.
	//The Java security model has been extended to allow non-system classes to load and call native methods. 
	//In the Java 2 Platform, FindClass locates the class loader associated with the current native method. 
	//If the native code belongs to a system class, no class loader will be involved. Otherwise, 
	//the proper class loader will be invoked to load and link the named class.
	//When FindClass is called through the Invocation Interface, there is no current native method or its associated class loader. 
	//In that case, the result of ClassLoader.getBaseClassLoader is used. 
	//This is the class loader the virtual machine creates for applications, 
	//and is able to locate classes listed in the java.class.path property.
	
	
	const char* className="xc2d/AndroidGLView";
	jclass cls = pEnv->FindClass(className);
	 if (cls == NULL) {
        LOGW(LOG_TAG, "can not find %s",className);
        return true;
    }
     //再找类中的方法
     jmethodID destroy = pEnv->GetMethodID(cls, "callbackDestroy", "()V");
     if (destroy == NULL) 
     {
         LOGW(LOG_TAG,"no callbackDestroy function");
         return true;  
     }
     //回调java中的方法
     LOGI(LOG_TAG,"callbackDestroy function");
     pEnv->CallVoidMethod(obj, destroy);
	 return true;
}