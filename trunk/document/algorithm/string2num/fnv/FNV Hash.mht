From: <Saved by Maxthon>
Subject: FNV Hash
Date: Sat, 8 Mar 2013 21:15:46 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_9021_01614C9B.74ECCE6B"

------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: text/html
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.isthe.com/chongo/tech/comp/fnv/index.html

<html><head><meta charset=3D"UTF-8">
<!-- Stop HTML-Above-1st.html -->
<!-- $Revision: 7.7 $ -->
<!-- $Id: index.html,v 7.7 2012/05/14 08:52:26 chongo Exp $ -->
<!-- Start HTML-Above-2nd.html -->

<link rel=3D"icon" href=3D"http://www.isthe.com/favicon/bat.ico" type=3D"im=
age/x-icon">
<link rel=3D"shortcut icon" href=3D"http://www.isthe.com/favicon/bat.ico" t=
ype=3D"image/x-icon">
<!-- Stop HTML-Above-2nd.html -->

<title>FNV Hash</title>
<meta name=3D"description" content=3D"FNV Hash">
<meta name=3D"keywords" content=3D"FNV, Fowler/Noll/Vo Hash, FNV hash, FNV-=
1 hash, FNV-1a hash, 32 bit hash, 64 bit hash, 128 bit hash, 256 bit hash, =
512 bit hash, 1024 bit hash, hash algorithm, zero hash challenge, zero hash=
 challenges, FNV prime">

<!-- Start Head-CSS.html -->
<style type=3D"text/css">
@import url(http://www.google.com/cse/api/branding.css);
</style>
<!-- Stop Head-CSS.html -->

<!-- Start Head-2-Body.html -->
</head>

<body bgcolor=3D"#98B8D8">
<!-- Stop Head-2-Body.html -->

<!-- Start T-Above.html -->
<table cellpadding=3D"7">

<tbody><tr>
<!-- Stop T-Above.html -->

<!-- Start TL-Blank.html -->
<td valign=3D"BOTTOM" width=3D"162">
</td>
<!-- Stop TL-Blank.html -->

<!-- Start TC-Above.html -->
<td>
<!-- Stop TC-Above.html -->
<!-- Start chongo/FNV.html -->
<!-- XXX - currently just a copy of chongo/Astronomy.html - TODO - Customiz=
e for this Ad Set - TODO - XXX -->
<a href=3D"http://www.isthe.com/chongo/index.html"><img width=3D"150" heigh=
t=3D"106" alt=3D"Landon Noll looking up" src=3D"http://www.isthe.com/chongo=
/jpg/chongo-up.jpg"></a>
<a href=3D"http://www.isthe.com/chongo/index.html"><img width=3D"80" height=
=3D"106" alt=3D"Fremont Peak Observatory 0.8m telescope" src=3D"http://www.=
isthe.com/chongo/jpg/fpo-challenger.jpg"></a>
<a href=3D"http://www.isthe.com/chongo/index.html"><img width=3D"150" heigh=
t=3D"106" alt=3D"Leonid 2001 meteor squall count at Fremont Peak" src=3D"ht=
tp://www.isthe.com/chongo/jpg/leonid2001.jpg"></a>
<!-- Stop chongo/FNV.html -->

<!-- Start TC-Below.html -->
</td>
<!-- Stop TC-Below.html -->

<!-- Start TR-Above.html -->
<td valign=3D"MIDDLE">
<!-- Stop TR-Above.html -->
<!-- Start google/isthe.com-search.html -->

<div class=3D"cse-branding-bottom" style=3D"background-color:#98B8D8;color:=
#000000">
  <div class=3D"cse-branding-form">
    <form action=3D"http://www.google.com/" id=3D"cse-search-box">
      <div>
        <input type=3D"hidden" name=3D"cx" value=3D"partner-pub-47247383615=
90294:9270838634">
        <input type=3D"hidden" name=3D"ie" value=3D"UTF-8">
        <input type=3D"hidden" name=3D"oe" value=3D"UTF-8">
 <input type=3D"hidden" name=3D"safe" value=3D"active">
 <input type=3D"hidden" name=3D"forid" value=3D"1">
 <input type=3D"hidden" name=3D"hl" value=3D"en">
        <input type=3D"submit" name=3D"sa" value=3D"Enter your search below=
:"><br>
        <input type=3D"text" name=3D"q" size=3D"49" maxlength=3D"255" value=
=3D""><br>
 <img src=3D"http://www.google.com/images/poweredby_transparent/poweredby_9=
99999.gif" alt=3D"Google">
 <b>custom search of this site</b>
      </div>
    </form>
  </div>
</div>

<!-- Stop google/isthe.com-search.html -->

<!-- Start TR-Below.html -->
</td>
</tr>
<!-- Stop TR-Below.html -->

<!-- Start TTitle-Above.html -->
<tr>

<td valign=3D"BOTTOM" width=3D"162">
</td>

<td colspan=3D"2">
<center>
<!-- Stop TTitle-Above.html -->
<h2>FNV Hash</h2>

<!-- Start TTitle-Below.html -->
</center>
</td>
</tr>
<!-- Stop TTitle-Below.html -->

<!-- Start TLinks-Above.html -->
<tr>

<td valign=3D"BOTTOM" width=3D"162">
</td>

<td colspan=3D"2">
<!-- Stop TLinks-Above.html -->
<!-- Start links/FNV.html -->
<font size=3D"-1">
[<a href=3D"http://www.isthe.com/chongo/index.html">chongo's home</a>]
[<a href=3D"http://www.isthe.com/chongo/tech/astro/index.html">Astronomy</a=
>]
[<a href=3D"http://www.isthe.com/chongo/tech/math/index.html">Mathematics</=
a>]
[<a href=3D"http://www.isthe.com/chongo/tech/math/prime/index.html">Prime N=
umbers</a>]
[<a href=3D"http://www.isthe.com/chongo/tech/comp/index.html">Programming</=
a>]
[<a href=3D"http://www.isthe.com/chongo/tech/index.html">Technology</a>]
[<a href=3D"http://www.isthe.com/chongo/address.html">contacting Landon</a>=
]
</font>
<!-- Stop links/FNV.html -->

<!-- Start TLinks-Below.html -->
</td>
</tr>
<!-- Stop TLinks-Below.html -->

<!-- Start T-Below.html -->

</tbody></table>

<!-- Stop T-Below.html -->

<!-- Start MainTable-Above.html -->
<table border=3D"1" cellpadding=3D"5">

<tbody><tr>
<!-- Stop MainTable-Above.html -->

<!-- Start Ad-ML-Above.html -->
<td valign=3D"TOP">
<!-- Stop Ad-ML-Above.html -->
<!-- Start google/160x90Link-FNV.html -->


<ins style=3D"display:inline-table;border:none;height:90px;margin:0;padding=
:0;position:relative;visibility:visible;width:160px"><ins id=3D"aswift_0_an=
chor" style=3D"display:block;border:none;height:90px;margin:0;padding:0;pos=
ition:relative;visibility:visible;width:160px"><iframe width=3D"160" height=
=3D"90" frameborder=3D"0" marginwidth=3D"0" marginheight=3D"0" vspace=3D"0"=
 hspace=3D"0" allowtransparency=3D"true" scrolling=3D"no" onload=3D"var i=
=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&amp;&amp;s.handlers,h=3DH&=
amp;&amp;H[i],w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&am=
p;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)=
}else if(h.match){w.location.replace(h)}}" id=3D"aswift_0" name=3D"aswift_0=
" style=3D"left:0;position:absolute;top:0;"></iframe></ins></ins>

<!-- Stop google/160x90Link-FNV.html -->

<!-- Start Ad-ML-Mid.html -->
<br><br>
<!-- Stop Ad-ML-Mid.html -->
<!-- Start google/160x600-FNV.html -->


<ins style=3D"display:inline-table;border:none;height:600px;margin:0;paddin=
g:0;position:relative;visibility:visible;width:160px"><ins id=3D"aswift_1_a=
nchor" style=3D"display:block;border:none;height:600px;margin:0;padding:0;p=
osition:relative;visibility:visible;width:160px"><iframe width=3D"160" heig=
ht=3D"600" frameborder=3D"0" marginwidth=3D"0" marginheight=3D"0" vspace=3D=
"0" hspace=3D"0" allowtransparency=3D"true" scrolling=3D"no" onload=3D"var =
i=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&amp;&amp;s.handlers,h=3DH=
&amp;&amp;H[i],w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&a=
mp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0=
)}else if(h.match){w.location.replace(h)}}" id=3D"aswift_1" name=3D"aswift_=
1" style=3D"left:0;position:absolute;top:0;"></iframe></ins></ins>

<!-- Stop google/160x600-FNV.html -->

<!-- Start Ad-ML-Below.html -->
</td>
<!-- Stop Ad-ML-Below.html -->

<!-- Start Content-Above.html -->
<td valign=3D"TOP">
<!-- Stop Content-Above.html -->

<!-- Start web content -->

<blockquote>
<a name=3D"top">&nbsp;</a>
<center><h3>FNV quick index</h3></center>
<ul>
<li> An external <a href=3D"http://en.wikipedia.org/wiki/Fowler_Noll_Vo_has=
h">FNV
Wikipedia</a> page exists
</li></ul>
<ul>
<li> <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#histor=
y">History and use</a> of the FNV hash
<ul>
<li>FNV is in the <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/inde=
x.html#public_domain">public domain</a>
</li></ul>
</li><li> The FNV-1 hash <a href=3D"http://www.isthe.com/chongo/tech/comp/f=
nv/index.html#FNV-1">in a nutshell</a>
</li><li> The FNV-1a hash <a href=3D"http://www.isthe.com/chongo/tech/comp/=
fnv/index.html#FNV-1a">minor variation</a>
</li></ul>
<ul>
<li> FNV-1/FNV-1a hash <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv=
/index.html#FNV-param">parameters</a>
</li><li> A few remarks on <a href=3D"http://www.isthe.com/chongo/tech/comp=
/fnv/index.html#fnv-prime">FNV primes</a>
</li></ul>
<ul>
<li> Changing the FNV hash size with <a href=3D"http://www.isthe.com/chongo=
/tech/comp/fnv/index.html#xor-fold">xor-folding</a>
</li><li> FNV hash with a <a href=3D"http://www.isthe.com/chongo/tech/comp/=
fnv/index.html#other-folding">non-power of 2</a> size
</li></ul>
<!-- start of deprecated section that was to specific for general inerest
<UL>
<LI> <A HREF=3D"#portable">Portable</A> FNV hashing of numeric values
<LI> Extended FNV <A HREF=3D"#type">type</A> hashing
</UL>
end of deprecated section that was specific for general interest -->
<ul>
<li> <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV-re=
ference-source">FNV reference</a> code
</li><li> Other <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.=
html#alt-FNV-source">FNV source</a> code you might wish to consider
</li><li> A slight <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/ind=
ex.html#gcc-O3">gcc</a> optimization
</li></ul>
<ul>
<li> Can you help solve some of the <a href=3D"http://www.isthe.com/chongo/=
tech/comp/fnv/index.html#zero-hash">zero hash challenges</a>?
</li></ul>
</blockquote>

<br>
<center><hr size=3D"4" width=3D"50%"></center>
<center><a name=3D"history">(</a><font size=3D"1"><a href=3D"http://www.ist=
he.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>FNV hash history</h2></center>

<p>
</p><blockquote>
The basis of the <b>FNV</b> hash algorithm was taken from an idea sent
as reviewer comments to the IEEE POSIX P1003.2 committee by
<a href=3D"http://www.research.att.com/~gsf/">Glenn Fowler</a> and
<a href=3D"http://www.research.att.com/info/kpv/">Phong Vo</a> back in 1991=
.
In a subsequent ballot round:
<a href=3D"http://www.isthe.com/chongo/index.html">Landon Curt Noll</a>
improved on their algorithm.
Some people tried this hash and found that it worked rather well.
In an EMail message
to Landon, they named it the ``<b>Fowler/Noll/Vo</b>'' or <b>FNV</b> hash.

<p>
<a name=3D"about"><b>FNV</b></a> hashes are designed to be fast while maint=
aining
a low collision rate.
The <b>FNV</b> speed allows one to quickly hash lots
of data while maintaining a reasonable collision rate.
The high dispersion of the <b>FNV</b> hashes makes them
well suited for hashing nearly identical strings such as
URLs, hostnames, filenames, text, IP addresses, etc.

</p><p> The IETF has an informational draft on
<a href=3D"http://tools.ietf.org/html/draft-eastlake-fnv-03">The
FNV Non-Cryptographic Hash Algorithm</a>

</p><p>
The <b>FNV</b> hash is in wide spread use:
</p><ul>
<li><a href=3D"http://www.isthe.com/chongo/tech/comp/calc/index.html">calc<=
/a>
</li><li>Domain Name Servers
</li><li>mdbm key/value data lookup functions
</li><li>Database indexing hashes
</li><li>major web search / indexing engines
</li><li>high performance EMail servers
</li><li>Netnews history file Message-ID lookup functions
</li><li>Anti-spam filters
</li><li>NFS implementations (e.g.,
<a href=3D"http://www.freebsd.org/releases/4.3R/notes.html">FreeBSD 4.3</a>=
,
IRIX, Linux (NFS v4))
</li><li><a href=3D"http://www.cohesia.com/">Cohesia MASS project</a>
server collision avoidance
</li><li>spellchecker programmed in Ada 95
</li><li><a href=3D"http://flatassembler.net/">flatassembler</a>'s
open source x86 assembler -
<a href=3D"http://board.flatassembler.net/viewtopic.php?t=3D854">user-defin=
ed
symbol hashtree</a>
</li><li><a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#Po=
werBASIC">PowerBASIC</a> inline assembly routine
</li><li>text based referenced resources for video games on the PS2, Gamecu=
be
and XBOX
</li><li>non-cryptographic file fingerprints
</li><li><a href=3D"http://fret.sourceforge.net/">FRET</a> - a tool
to identify file data structures / helps to understand file formats
</li><li>used to in the process of computing Unique IDs in DASM (DTN Applic=
ations for Symbian Mobile-phones)
</li><li>Used by Microsoft in their hash_map implementation for VC++ 2005
</li><li>Used in an implementation of
<a href=3D"http://www.last.fm/user/RJ/journal/2007/04/10/392555/">libketama=
</a>
for use in items such as
<a href=3D"http://pecl.php.net/package/memcache">memcache</a>.
</li><li>Used in the realpath cache in
<a href=3D"http://www.php.net/">PHP 5.x</a> (php-5.2.3/TSRM/tsrm_virtual_cw=
d.c).
</li><li>Used to
<a href=3D"http://www.slideshare.net/Eweaver/improving-running-components-a=
t-twitter">improve
the fragment cache</a>
at <a href=3D"http://twitter.com/">twitter</a> (see slide 31).
</li><li> Used in the <a href=3D"http://sourceforge.net/projects/fasmlab/">=
BSD
IDE project</a>
</li><li> Used in the <a href=3D"http://www.deliantra.net/">deliantra game =
server</a>
for it's shared string implementation
</li><li> Used to improve
<a href=3D"http://www.sanmayce.com/Downloads/">Leprechaun</a>,
an extremely fast word list creator
</li><li> Favored as a hash for IPv6 Flow Labels in a
<a href=3D"https://researchspace.auckland.ac.nz/bitstream/handle/2292/13240=
/flowhashRep.pdf">University
of Auckland Computer Science Technical Report (2012-002)</a> of March 2012
</li></ul>

<a name=3D"public_domain"></a>
<p>
<b>FNV</b> hash algorithms and
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV-referen=
ce-source">source code</a>
have been released into the public domain.
The authors of the FNV algorithmm look deliberate steps
to disclose the algorhtm in a public forum soon after
it was invented.
More than a year passed after this public disclosure and the
authors deliberatly took no steps to patent the FNV algorithm.
Therefore it is safe to say that the FNV authors have
no patent claims on the FNV algorithm as published.

</p><p>
If you use an <b>FNV</b> function in an application, why not tell
tells us about it by sending EMail to:

</p><blockquote><a name=3D"address"><img src=3D"http://www.isthe.com/chongo=
/jpg/fnv-email.jpg" width=3D"218" height=3D"22" alt=3D"fnv EMail addr"></a>=
</blockquote>

<p>
There is no requirement to tell us.
But if you do, we will be happy to add your application to the above list.

</p><p>
Comments are welcome.
</p></blockquote>

<p>
</p><center><hr size=3D"4" width=3D"50%"></center>
<center><a name=3D"FNV-1">(</a><font size=3D"1"><a href=3D"http://www.isthe=
.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>The core of the FNV hash</h2></center>

<p>
</p><blockquote>
The core of the <b>FNV-1</b> hash algorithm is as follows:

<p>
</p><blockquote><pre><tt><b>hash</b> =3D <b><i>offset_basis</i></b>
for each <i>octet_of_data</i> to be hashed
 <b>hash</b> =3D <b>hash</b> * <b><i>FNV_prime</i></b>
 <b>hash</b> =3D <b>hash</b> xor <i>octet_of_data</i>
return <b>hash</b>
</tt></pre></blockquote>

<p>
The <b><i>offset_basis</i></b> and
<b><i>FNV_prime</i></b> can be found in the
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV-param">=
parameters of the FNV-1/FNV-1a hash</a> section below.
</p></blockquote>

<p>
<b>NOTE:</b> We recommend that you use the <a href=3D"http://www.isthe.com/=
chongo/tech/comp/fnv/index.html#FNV-1a">FNV-1a
alternative algorithm</a> instead of the <b>FNV-1</b> hash where possible.

</p><p>
</p><center><hr size=3D"4" width=3D"25%"></center>
<center><a name=3D"FNV-1a">(</a><font size=3D"1"><a href=3D"http://www.isth=
e.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>FNV-1a alternate algorithm</h2></center>

<p>
</p><blockquote>
There is a minor variation of the <b>FNV</b> hash algorithm known as
<b>FNV-1a</b>:

<p>
</p><blockquote><pre><tt><b>hash</b> =3D <b><i>offset_basis</i></b>
for each <i>octet_of_data</i> to be hashed
 <b>hash</b> =3D <b>hash</b> xor <i>octet_of_data</i>
 <b>hash</b> =3D <b>hash</b> * <b><i>FNV_prime</i></b>
return <b>hash</b>
</tt></pre></blockquote>

<p>
The only difference between the <b>FNV-1a</b> hash and the <b>FNV-1</b> has=
h
is the order of the xor and multiply.
The <b>FNV-1a</b> hash
uses the same <b><i>FNV_prime</i></b> and <b><i>offset_basis</i></b>
as the <b>FNV-1</b> hash of the same <b>n</b>-bit size.

</p><p>
The <b><i>offset_basis</i></b> and
<b><i>FNV_prime</i></b> can be found in the
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV-param">=
parameters of the FNV-1/FNV-1a hash</a> section below.
</p></blockquote>

<p>
Some people use <b>FNV-1a</b> instead of <b>FNV-1</b>
because they see
slightly better dispersion for tiny (&lt;4 octets) chunks of memory.

</p><p>
One person reported that the <b>FNV-1</b> hash was not as good as
the <b>FNV-1a</b> hash, for their purpuses, because the final
octet is not as well dispersed.
They reported that the <b>FNV-1a</b> hash was better for error
detection, for example.

</p><p>
Other people report that either <b>FNV-1</b> or <b>FNV-1a</b> make a fine h=
ash.
<font size=3D"1">(Try it with with
just a dash of Sage and ground Cloves :-))</font>

</p><p>
<b>NOTE:</b> We recommend that you use the <a href=3D"http://www.isthe.com/=
chongo/tech/comp/fnv/index.html#FNV-1a">FNV-1a
alternative algorithm</a> instead of the <b>FNV-1</b> hash where possible.

</p><p>
</p><center><hr size=3D"4" width=3D"50%"></center>
<center><a name=3D"FNV-param">(</a><font size=3D"1"><a href=3D"http://www.i=
sthe.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>Parameters of the FNV-1/FNV-1a hash</h2></center>

The <b>FNV-1</b> hash parameters are as follows:
<p>
</p><ul>
<li><b>hash</b> is an <b>n</b> bit unsigned integer,
where <b>n</b> is the bit length of <b>hash</b>.

<p>
</p></li><li>The multiplication is performed modulo 2<sup><b>n</b></sup>
where <b>n</b> is the bit length of <b>hash</b>.

<p>
</p></li><li>The xor is performed on the low order
octet (8 bits) of <b>hash</b>.

<p>
</p></li><li>The <b><i>FNV_prime</i></b> is dependent on <b>n</b>, the size=
 of the hash:

<p>
</p><blockquote>
32 bit <b><i>FNV_prime</i></b> =3D
2<sup>24</sup> + 2<sup>8</sup> + 0x93 =3D <tt>16777619</tt><br>
<br>
64 bit <b><i>FNV_prime</i></b> =3D 2<sup>40</sup> + 2<sup>8</sup> + 0xb3 =
=3D <tt>1099511628211</tt><br>
<br>
128 bit <b><i>FNV_prime</i></b> =3D 2<sup>88</sup> + 2<sup>8</sup> + 0x3b =
=3D <tt>309485009821345068724781371</tt><br>
<br>
256 bit <b><i>FNV_prime</i></b> =3D 2<sup>168</sup> + 2<sup>8</sup> + 0x63 =
=3D <tt>374144419156711147060143317175368453031918731002211</tt><br>
<br>
512 bit <b><i>FNV_prime</i></b> =3D 2<sup>344</sup> + 2<sup>8</sup> + 0x57 =
=3D <tt><br>
358359158748448673689190764890951084499463279557543925583998256154206699388=
82575<br>
126094039892345713852759</tt><br>
<br>
1024 bit <b><i>FNV_prime</i></b> =3D 2<sup>680</sup> + 2<sup>8</sup> + 0x8d=
 =3D <tt><br>
501645651011311865543459881103527895503076534540479074430301752383111205510=
81474<br>
515091576922202953827161626518785268952493852922918165243750837466913718040=
94271<br>
873160484737966720260389217684476157468082573</tt>
</blockquote>
<p>
Part of the magic of <b>FNV</b> is the selection of the <b><i>FNV_prime</i>=
</b>
for a given sized unsigned integer.
Some primes do hash better than other primes for a given integer size.

</p><p>
</p></li><li>The <b><i>offset_basis</i></b> for <b>FNV-1</b> is dependent o=
n <b>n</b>, the size of the hash:

<p>
</p><blockquote>
32 bit <b><i>offset_basis</i></b> =3D <tt>2166136261</tt><br>
<br>
64 bit <b><i>offset_basis</i></b> =3D <tt>14695981039346656037</tt><br>
<br>
128 bit <b><i>offset_basis</i></b> =3D <tt>14406626329776981559649562966706=
2367629</tt><br>
<br>
256 bit <b><i>offset_basis</i></b> =3D <tt><br>
100029257958052580907070968620625704837092796014241193945225284501741471925=
557</tt><br>
<br>
512 bit <b><i>offset_basis</i></b> =3D <tt><br>
965930312949666949800943540071631046609041874567263789610837432943446265799=
45829<br>
32197716438449813051892206539805784495328239340083876191928701583869517785<=
/tt><br>
<br>
1024 bit <b><i>offset_basis</i></b> =3D <tt><br>
141977950649476210687220706414032183208806227954419339608784749146175827232=
52296<br>
732303717722150864096521202355549365628174669108571814760471015076148029755=
96980<br>
407732015769245856300321530495715015740364446036355050541271128596636161026=
78680<br>
82893823963790439336411086884584107735010676915</tt>
</blockquote>

<p>
NOTE: Older versions of this web page incorretly indicated that the 128 bit
<b><i>FNV_prime</i></b> was 2<sup>168</sup> + 2<sup>8</sup> + 0x59.
This was not correct.
While that satisfied all of the significant <b><i>FNV_prime</i></b> propert=
ies,
it was not the smallest 128 bit <b><i>FNV_prime</i></b>.
The 128 bit <b><i>offset_basis</i></b>
changed from
<tt>275519064689413815358837431229664493455</tt>
to
<tt>144066263297769815596495629667062367629</tt>
was changed as a result of the 128 bit <b><i>FNV_prime</i></b> correction.
(Sorry about that!)

</p><p>
These non-zero integers are the <a href=3D"http://www.isthe.com/chongo/tech=
/comp/fnv/index.html#FNV-0">FNV-0</a> hashes of
the following 32 octets:

</p><p>
</p><blockquote><pre><tt>chongo &lt;Landon Curt Noll&gt; /\../\</tt></pre><=
/blockquote>

<p>
The \'s in the above string are not C-style escape characters.
In C-string notation, these 32 octets are:

</p><p>
</p><blockquote><pre><tt>"chongo &lt;Landon Curt Noll&gt; /\\../\\"</tt></p=
re></blockquote>

<p>
Regarding the offset_basis value:
</p><blockquote>
The switch from FNV-0 to FNV-1 was purely to change the offset_basis to a
non-zero value.
The selection of that non-zero value is arbitrary. The string:

<p>
</p><blockquote><pre><tt>chongo &lt;Landon Curt Noll&gt; /\../\</tt></pre><=
/blockquote>

was used because the tester was looking at an EMail message from
Landon in Landon's standard EMail signature line.

Actually the person who did that did not see very well.
Landon, today, uses ()'s instead of &lt;&gt;'s and his
<a href=3D"http://www.isthe.com/chongo/odd/bat.html">ASCII bats</a>
use "oo" eyes instead of ".." as in:

<p></p><blockquote><tt>chongo (Landon Curt Noll) /\oo/\</tt></blockquote>

We didn't bother correcting her error because it does not matter.
In the general case, almost any offset_basis will serve so long as it
is non-zero.
</blockquote>

<p>
The following
<a href=3D"http://www.isthe.com/chongo/tech/comp/calc/index.html">calc</a>
script was used to compute the <b><i>offset_basis</i></b>
for <b>FNV-1</b> hashes:

</p><p>
</p><blockquote><pre><tt>hash_bits =3D <i>insert_the_hash_size_in_bits_here=
</i>;
FNV_prime =3D <i>insert_the_<b>FNV_prime</b>_here</i>;
offset_basis =3D 0;
offset_str =3D "chongo &lt;Landon Curt Noll&gt; /\\../\\";
hash_mod =3D 2^hash_bits;

str_len =3D strlen(offset_str);
for (i=3D1; i &lt;=3D str_len; ++i) {
    offset_basis =3D (offset_basis * FNV_prime) % hash_mod;
    offset_basis =3D xor(offset_basis, ord(substr(offset_str,i,1)));
}

print hash_bits, "bit offset_basis =3D", offset_basis;
</tt></pre>

<p>
NOTE: The above code fragment example is written in the
<a href=3D"http://www.isthe.com/chongo/tech/comp/calc/index.html">calc</a>
language, not in C.
</p></blockquote>

<p>
<i><a name=3D"FNV-0">FNV-0</a> Historic note:</i>
The <b>FNV-0</b> is the historic <b>FNV</b> algorithm that
is now deprecated.
It has an
<b><i>offset_basis</i></b> of <tt>0</tt>.
Unless the <b>FNV-0</b> hash is required for historical purposes,
the <b>FNV-1</b> or <b>FNV-1a</b>
should be used in place of the <b>FNV-0</b> hash.
Use <b>FNV-1</b> and <b>FNV-1a</b> hashes, with their non-zero
<b><i>offset_basis</i></b> instead.
The <b>FNV-0</b> hashes all buffers that contain only 0 octets to a
hash value of 0.
The <b>FNV-1</b> and <b>FNV-1a</b> hash do not suffer from this minor probl=
em.

</p></li></ul>

<p>
</p><center><hr size=3D"4" width=3D"25%"></center>
<center><a name=3D"fnv-prime">(</a><font size=3D"1"><a href=3D"http://www.i=
sthe.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>A few remarks on FNV primes</h2></center>

<p>
</p><blockquote>

While theory behind <b><i>FNV_prime</i></b>'s
is beyond the scope of this web page,
the following text may suffice to satisfy the curious:

<p>
One of the key properties to look for in an <b><i>FNV_prime</i></b> is how
it impacts dispersion.

</p><p>
When <b>s</b> is an integer and
<b>4 &lt; s &lt; 11</b>, then <b><i>FNV_prime</i></b> is the smallest
prime of the form:

</p><blockquote>
256<sup><sup>int((5 + 2<sup><b><font size=3D"+1">s</font></b></sup>)/12)</s=
up></sup> + 2<sup><sup>8</sup></sup> + <b>b</b>
</blockquote>

such that:

<ul>
<li> 0 &lt; <b>b</b> &lt; 2<sup>8</sup>
</li><li> The number of one-bits in <b>b</b> is 4 or 5
</li></ul>

<p>
An <b><i>FNV_prime</i></b> that matches the above constraints tend to have
better dispersion properties.
They improve the polynomial feedback characteristic when an
<b><i>FNV_prime</i></b> multiplies an intermediate hash value.
The hash values produced are more scattered throughout the <b>n</b>-bit
hash space.

</p><p>
It is a nice side effect that <b><i>FNV_prime</i></b> may be
optimized by <b>some</b> compilers for some <b>hardware</b>.
On some hardware, replacing the <b><i>FNV_prime</i></b> multiply
with a set of shifts and adds will improve performance.
In other cases where multiply may be pipelined (such as in vector mode),
the set of shifts and adds may be sub-optimal.
The <b><i>FNV_prime</i></b> were not selected for compiler optimization,
they were selected for the quality of resulting hash function.

</p><p>
The case where <b>s &lt; 5</b> is not considered because the resulting hash
quality is too low.
Such small hashes can, if desired, be derived
from a 32 bit FNV hash by <a href=3D"http://www.isthe.com/chongo/tech/comp/=
fnv/index.html#xor-fold">xor-folding</a>.

</p><p>
The case where <b>s &gt; 10</b> is considered because the doubtful utility
of such large FNV hashes and because the criteria for such large FNV_Primes
is more complex, due to the sparsity of such large primes, and would
needlessly clutter the criteria given above. The criteria above is
a simplified form that fails to generate 2048-bit <b><i>FNV_prime</i></b>
and a 4096-bit <b><i>FNV_prime</i></b>, for example. For such large
primes we would need to use a more extensive prime selection criteria.

</p></blockquote>

<p>
</p><center><hr size=3D"4" width=3D"25%"></center>
<center><a name=3D"xor-fold">(</a><font size=3D"1"><a href=3D"http://www.is=
the.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>Changing the FNV hash size - xor-folding</h2></center>

<p>
</p><blockquote>
If you need an <b>x</b>-bit hash where <b>x</b> is not a power of 2, then
we recommend that you compute the <b>FNV</b> hash that is just larger
than <b>x</b>-bits and <i>xor-fold</i> the result down to <b>x</b>-bits.
By <i>xor-folding</i> we mean shift the excess high order bits down
and xor them with the lower <b>x</b>-bits.

<p>
For example to produce a 24 bit <b>FNV-1</b> hash in C
we <i>xor-fold</i> fold a 32 bit <b>FNV-1</b> hash:

</p><p>
</p><blockquote><pre><tt>#define MASK_24 (((u_int32_t)1&lt;&lt;24)-1) /* i.=
e., (u_int32_t)0xffffff */
#define FNV1_32_INIT ((u_int32_t)2166136261)
u_int32_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_32_buf(data, data_len, FNV1_32_INIT);
<b>hash</b> =3D (<b>hash</b>&gt;&gt;24) ^ (<b>hash</b> &amp; MASK_24);
</tt></pre></blockquote>

<p>
To produce a 16 bit <b>FNV-1</b> hash in C
we <i>xor-fold</i> fold a 32 bit <b>FNV-1</b> hash:

</p><p>
</p><blockquote><pre><tt>#define MASK_16 (((u_int32_t)1&lt;&lt;16)-1) /* i.=
e., (u_int32_t)0xffff */
#define FNV1_32_INIT ((u_int32_t)2166136261)
u_int32_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_32_buf(data, data_len, FNV1_32_INIT);
<b>hash</b> =3D (<b>hash</b>&gt;&gt;16) ^ (<b>hash</b> &amp; MASK_16);
</tt></pre></blockquote>

<p>
To produce a 56 bit <b>FNV-1</b> hash in C (on a machine
with 64 bit unsigned values)
we <i>xor-fold</i> fold a 64 bit <b>FNV-1</b> hash:

</p><p>
</p><blockquote><pre><tt>#define MASK_56 (((u_int64_t)1&lt;&lt;56)-1) /* i.=
e., (u_int64_t)0xffffffffffffff */
#define FNV1_64_INIT ((u_int64_t)14695981039346656037)
u_int64_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_64_buf(data, data_len, FNV1_64_INIT);
<b>hash</b> =3D (<b>hash</b>&gt;&gt;56) ^ (<b>hash</b> &amp; MASK_56);
</tt></pre></blockquote>

<p>
The above process assumes that you are using an <b>FNV</b> hash
that at most twice as large as the <b>x</b>-bits that you need.
For <b>x</b> &lt; 16, there is no 16 bit (or less) <b>FNV-1</b>
hash to use.

</p><p>
For tiny <b>x</b> &lt; 16 bit values, we recommend using a 32 bit <b>FNV-1<=
/b>
hash as follows:

</p><p>
</p><blockquote><pre><tt>/* <b>NOTE: for 0 &lt; x &lt; 16 ONLY!!!</b> */
#define TINY_MASK(x) (((u_int32_t)1&lt;&lt;(x))-1)
#define FNV1_32_INIT ((u_int32_t)2166136261)
u_int32_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_32_buf(data, data_len, FNV1_32_INIT);
<b>hash</b> =3D (((<b>hash</b>&gt;&gt;x) ^ <b>hash</b>) &amp; TINY_MASK(x))=
;
</tt></pre></blockquote>

<p>
At the expense of CPU performance, one may use a larger
<b>FNV-1</b> hash that is normally required in any of the above
<b>xor-folding</b> examples.
This will not produce the same <i>standard</i> output,
but it may provide slightly better dispersion at the expense of more CPU ti=
me.
All that is needed is to use a larger <b>FNV-1</b> hash
and to move the mask outside of the expression
on the final statement.

</p><p>
For example, to produce a 24 bit <b>FNV-1</b> hash could have used
a 64 bit <b>FNV-1</b> hash, in a <i>non-standard</i> way, as follows:

</p><p>
</p><blockquote><pre><tt>/* <b>NOTE:</b> <i>non-standard</i> use of a large=
r hash */
#define MASK_24 (((u_int64_t)1&lt;&lt;24)-1) /* i.e., (u_int64_t)0xffffff *=
/
#define FNV1_64_INIT ((u_int64_t)14695981039346656037)
u_int64_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_64_buf(data, data_len, FNV1_64_INIT);
<b>hash</b> =3D (((<b>hash</b>&gt;&gt;24) ^ <b>hash</b>) &amp; MASK_24);
</tt></pre></blockquote>

<p>
Replacing a 32 bit <b>FNV-1</b> hash with a 64 bit <b>FNV-1</b> hash
during <b>xor-folding</b> might yield better dispersion at the expense
of CPU time.
However using an even larger <b>FNV-1</b> hash is
almost certainly a waste of CPU time.
If you are going to use this <i>non-standard</i> <b>xor-folding</b>
method, we recommend that you only do it for <b>x</b> &lt; 32 bits, and
only replace the 32 bit <b>FNV-1</b> hash with a 64 bit <b>FNV-1</b> hash.

</p><p>
<b>NOTE:</b> One may substitute the <b>FNV-1a</b> hash for the
<b>FNV-1</b> hash in any of the <b>xor-folding</b> examples.
Some people believe that <b>FNV-1a xor-folding</b> gives then
slightly better dispersion without any impact on CPU performance.
See the <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV=
-1a">FNV-1a</a> hash description for more information.

</p><p>
If you really need an <b>x</b>-bit hash
for <b>x</b> &gt; 1024 bits, send us <a href=3D"http://www.isthe.com/chongo=
/tech/comp/fnv/index.html#address">EMail</a>.

</p></blockquote>

<p>
</p><center><hr size=3D"4" width=3D"25%"></center>
<center><a name=3D"other-folding">(</a><font size=3D"1"><a href=3D"http://w=
ww.isthe.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>Changing the FNV hash size - non-powers of 2</h2></center>

<p>
</p><blockquote>
The FNV hash is designed for hash sizes that are a power of 2.
If you need a hash size that is not a power of two, then you have
two choices.
One method id called the
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#lazy-mod"><=
b><i>lazy mod mapping method</i></b></a>
and the other is called the
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#retry-metho=
d"><b><i>retry method</i></b></a>.
Both involve mapping a range that is a power of 2 onto an
arbitrary range.
</blockquote>

<p>
</p><ul>

<li><font size=3D"+1"><b><i><a name=3D"lazy-mod">Lazy mod mapping method</a=
></i></b></font>:
The <b><i>lazy mod mapping method</i></b>
uses a simple mod on an <b>n</b>-bit hash
to yield an arbitrary range.
To produce a hash range between <b>0</b> and <b>X</b>
use a <b>n</b>-bit FNV hash where <b>n</b> is smallest
FNV hash that will produce values larger than <b>X</b>
without the need for
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#xor-fold">x=
or-folding</a>.

<p>
For example, to produce a value between <b>0</b> and <b>2142779559</b>
using the
<b><i>lazy mod mapping method</i></b>, we select a <b>32</b>-bit FNV
hash because:

</p><p>
</p><blockquote>
2<sup><b>32</b></sup> &gt; <b>2142779559</b>
</blockquote>

<p>
We compute the <b>32</b>-bit FNV hash value and then perform a final mod:

</p><p>
</p><blockquote><pre><tt>#define TRUE_HASH_SIZE ((u_int32_t)<b>2142779560)<=
/b> /* range top plus 1 */
#define FNV1_32_INIT ((u_int32_t)2166136261)
u_int32_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_32_buf(data, data_len, FNV1_32_INIT);
<b>hash</b> %=3D TRUE_HASH_SIZE;
</tt></pre></blockquote>

<p>
An advantage of the <b><i>lazy mod mapping method</i></b>
is that it requires only 1 more operation:
only an additional mod is performed at the end.
The disadvantage of the <b><i>lazy mod mapping method</i></b>
is that there is
a bias against the larger values.

</p><p>
To understand this bias consider the a need
to produce a value between <b>0</b> and <b>999999</b>.
We will compute a <b>32</b>-bit FNV hash value because:

</p><p>
</p><blockquote>
2<sup><b>32</b></sup> &gt; <b>999999</b>
</blockquote>

<p>
We compute the <b>32</b>-bit FNV hash value using the
and then perform the final mod:

</p><p>
</p><blockquote><pre><tt>#define TRUE_HASH_SIZE ((u_int32_t)<b>1000000)</b>=
 /* range top plus 1 */
#define FNV1_32_INIT ((u_int32_t)2166136261)
u_int32_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_32_buf(data, data_len, FNV1_32_INIT);
<b>hash</b> %=3D TRUE_HASH_SIZE;
</tt></pre></blockquote>

<p>
The bias introduced by the final mod is slight.
The values <b>0</b> through <b>967295</b> will be created by
4295 different <b>32</b>-bit FNV hash values whereas
the values <b>967296</b> through <b>999999</b> will be created by
only 4294 different <b>32</b>-bit FNV hash values.
In other words, the values <b>0</b> through <b>967295</b> will
occur ~1.0002328 times as often as the values <b>967296</b>
through <b>999999</b>.

</p><p>
The bias can be larger when the range is nearly as large as the
range of values produced by the FNV hash.
Consider using the <b><i>lazy mod mapping method</i></b>
to produce
values between <b>0</b> and <b>9999999999999999999</b>.
We use a <b>64</b>-bit FNV hash because:

</p><p>
</p><blockquote>
2<sup><b>64</b></sup> &gt; <b>9999999999999999999</b>
</blockquote>

<p>
We compute the <b>64</b>-bit FNV hash value using the
and then perform the final mod:

</p><p>
</p><blockquote><pre><tt>#define TRUE_HASH_SIZE ((u_int64_t)<b>100000000000=
00000000)</b> /* range top plus 1 */
#define FNV1_64_INIT ((u_int64_t)14695981039346656037)
u_int64_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_64_buf(data, data_len, FNV1_64_INIT);
<b>hash</b> %=3D TRUE_HASH_SIZE;
</tt></pre></blockquote>

<p>
Here the bias introduced by the final mod is more noticeable.
The values <b>0</b> through <b>9999999999999999999</b> will be created by
2 different <b>64</b>-bit FNV hash values whereas
the values <b>10000000000000000000</b> through <b>18446744073709551615</b> =
will be created by
only 1 <b>64</b>-bit FNV hash value.

</p><p>
<b>NOTE:</b>
This bias issue may not be of concern to you, but we thought we should
point out this issue just in case you care.
Many applications should / will not care about this bias.
Most applications can use the <b><i>lazy mod mapping method</i></b> without
any problems.
Your application, may vary however.

</p><p>
<b>NOTE:</b> One may substitute the <b>FNV-1a</b> hash for the
<b>FNV-1</b> hash in any of the <b><i>lazy mod mapping method</i></b> examp=
les.
Some people believe that <b>FNV-1a <i>lazy mod mapping method</i></b> gives=
 then
slightly better dispersion without any impact on CPU performance.
See the <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV=
-1a">FNV-1a</a> hash description for more information.

</p><p>
</p></li><li><font size=3D"+1"><b><i><a name=3D"retry-method">Retry method<=
/a></i></b></font>:
The <b><i>retry method</i></b> also performs a final mod in order
to produce a hash range between <b>0</b> and <b>X</b>.
Unlike <b><i>lazy mod mapping method</i></b>,
the <b><i>retry method</i></b> avoids the bias by
additional computation.

<p>
To produce a hash range between <b>0</b> and <b>X</b>
use a <b>n</b>-bit FNV hash where <b>n</b> is smallest
FNV hash that will produce values larger than <b>X</b>
without the need for
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#xor-fold">x=
or-folding</a>.

</p><p>
For example, to produce a value between <b>0</b> and <b>49999</b>
using the
<b><i>retry method</i></b>, we select a <b>32</b>-bit FNV
hash because:

</p><p>
</p><blockquote>
2<sup><b>32</b></sup> &gt; <b>49999</b>
</blockquote>

<p>
Before the final mod <b>50000</b> is performed, we check to
see if the <b>32</b>-bit FNV hash value is one of the upper
biased values.
If it is, we perform additional loop cycles until is below
the bias level.
For example:

</p><p>
</p><blockquote><pre><tt>#define TRUE_HASH_SIZE ((u_int32_t)<b>50000)</b> /=
* range top plus 1 */
#define FNV_32_PRIME ((u_int32_t)16777619)
#define FNV1_32_INIT ((u_int32_t)2166136261)
#define MAX_32BIT ((u_int32_t)0xffffffff) /* largest 32 bit unsigned value =
*/
#define RETRY_LEVEL ((MAX_32BIT / TRUE_HASH_SIZE) * TRUE_HASH_SIZE)
u_int32_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_32_buf(data, data_len, FNV1_32_INIT);
while (<b>hash</b> &gt;=3D <b>RETRY_LEVEL</b>) {
    <b>hash</b> =3D (<b>hash</b> * FNV_32_PRIME) + FNV1_32_INIT;
}
<b>hash</b> %=3D TRUE_HASH_SIZE;
</tt></pre></blockquote>

<p>
The disadvantage of the <b><i>retry method</i></b>
is that it sometimes requires additional calculations.
An advantage of the <b><i>retry method</i></b>
it avoids slightly biased values.

</p><p>
For another example, we will
produce a value between <b>0</b> and <b>999999999999</b>
using the
<b><i>retry method</i></b>, we select a <b>64</b>-bit FNV
hash because:

</p><p>
</p><blockquote>
2<sup><b>64</b></sup> &gt; <b>999999999999</b>
</blockquote>

<p>
Before the final mod <b>1000000000000</b> is performed, we check to
see if the <b>64</b>-bit FNV hash value is one of the upper
biased value.
If it is, we perform additional loop cycles until it is not.

</p><p>
</p><blockquote><pre><tt>#define TRUE_HASH_SIZE ((u_int64_t)<b>100000000000=
0)</b> /* range top plus 1 */
#define FNV_64_PRIME ((u_int64_t)1099511628211)
#define FNV1_64_INIT ((u_int64_t)14695981039346656037)
#define MAX_64BIT ((u_int64_t)0xffffffffffffffff) /* largest 64 bit unsigne=
d value */
#define RETRY_LEVEL ((MAX_64BIT / TRUE_HASH_SIZE) * TRUE_HASH_SIZE)
u_int64_t <b>hash</b>;
void *data;
size_t data_len;

<b>hash</b> =3D fnv_64_buf(data, data_len, FNV1_64_INIT);
while (<b>hash</b> &gt;=3D <b>RETRY_LEVEL</b>) {
    <b>hash</b> =3D (<b>hash</b> * FNV_64_PRIME) + FNV1_64_INIT;
}
<b>hash</b> %=3D TRUE_HASH_SIZE;
</tt></pre></blockquote>

<p>
<b>NOTE:</b> One may substitute the <b>FNV-1a</b> hash for the
<b>FNV-1</b> hash in any of the <b><i>retry method</i></b> examples.
Some people believe that <b>FNV-1a <i>retry method</i></b> gives then
slightly better dispersion without any impact on CPU performance.
See the <a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#FNV=
-1a">FNV-1a</a> hash description for more information.

</p><p>
</p></li><li><font size=3D"+1"><b><i>To summarize</i></b></font>:
When dealing with an application that needs to
generate a hash value over an
arbitrary range, one can do one of the following:

<p>
</p><ol>
<li>Change the application to use hash values that range
between <b>0</b> and <b>2<sup>n</sup>-1</b>.
Use a <b>n</b>-bit FNV hash or
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#xor-fold">x=
or-folding</a> if needed.

<p>
</p><blockquote><b>Pro:</b> Yields the best results in the shortest
amount of CPU time.<br>
<b>Con:</b> Requires source code change to force hash range to be
a power of 2 in size.
</blockquote>

<p>
</p></li><li>Use the
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#lazy-mod"><=
b><i>lazy mod mapping method</i></b></a>
if one does
not care about the slight hash bias and does not want (or cannot change)
the hash range.

<p>
</p><blockquote><b>Pro:</b> Yields the fastest results for a non-power
of 2 range.<br>
<b>Con:</b> Produces a slight bias against larger hash values.
However if one does not care about the slight bias, then there
is no problem using this technique.
</blockquote>

<p>
</p></li><li>Use the
<a href=3D"http://www.isthe.com/chongo/tech/comp/fnv/index.html#retry-metho=
d"><b><i>retry method</i></b></a>
if one wants to avoid the
hash bias and does not want / cannot change
the hash range.

<p>
</p><blockquote><b>Pro:</b> Produces non-biased values for a non-power
of 2 range.<br>
<b>Con:</b> Requires slightly more CPU time in some cases.
</blockquote>

</li></ol>

</li></ul>

<!-- start of deprecated section that was to specific for general inerest
<P>
<CENTER><HR SIZE=3D"4" WIDTH=3D"50%"></CENTER>
<CENTER><A NAME=3D"portable">(</A><FONT SIZE=3D"1"><A HREF=3D"#top">top</A>=
</FONT>)</CENTER>
<CENTER><H2>Portable FNV hashing of numeric values</H2></CENTER>

<P>
<BLOCKQUOTE>
Some people have asked how one might FNV hash objects such as integers,
structures and other non-octet based data.
We recommend that you FNV hash such objects, an octet at a time
in a fixed byte order.
To ensure that the FNV hash values are the same on both Big Endian
and Little Endian CPUs, we recommend that objects you always hash
object such as integers from low to high byte significance order.
To ensure that structures (due to architecture based alignment
differences) are always hashed the same, we recommend that you
FNV hash each element in a structure in order.
<P>
If interoperability is not an issue, you can always FNV hash
objects as if they were just an array of octets:
<BLOCKQUOTE><PRE><TT>/* <B>WARNING: You really do not want hash structures =
this way!!!</B> */
struct stuff {
    int data; /* 32 bits? 64 bits? */
      /* how many octets of padding? */
    char byte;
       /* how many octets of padding? */
    short value; /* 16 bits? */
       /* how many octets of padding? */
} foo;

/* <B>WARNING: This FNV hash value may not be portable!!!</B> */
/* <B>WARNING: This FNV hash value may be wrong due to pad byte values!!!</=
B> */
<B>hash</B> =3D fnv_64a_buf(&amp;foo, sizeof(foo), FNV1_64_INIT);
</TT></PRE></BLOCKQUOTE>

<P>
The hash above may produce different values on Big Endian 32bit,
Big Endian 64bit, Little Endian 32bit, and Little Endian 64bit
architectures just to name a few.
Worse yet, <B>the padding bytes may be non-zero</b> due to the
way the structure was initialized in memory.
The padding bytes may contain whatever malloc might have picked
up from memory, which could have been set to any value.
<B>You should really, really, really sure that FNV value
portability will NEVER be an issue</B>,
and <B>you should really be sure that the padding octets were
set to 0</B> before using the above hack.

<P>
To put the issue into different terms, consider a collection servers
that use FNV to hash SNMP identifiers (collections of integers).
If all that is needed is for a given server to perform a fast table lookup,
then treating SNMP identifiers as just an array of octets (bytes) to
produce a non-portable FNV value will work <B>provided that any
padding octets were initialized to the same (say 0-filled) value</B>.
However, if a server
needs to send an SNMP identifier FNV hash to another server,
then one will need to generate portable FNV hash values.

<P>
Consider two servers use FNV hashing to look up numeric and/or
compound values in a table.
If each server builds their own FNV hash table its own use,
then one does not need to produce portable FNV values.
The simple non-portable method of FNV hashing all of the octets will work f=
ine.
On the other hand, if one server sends a FNV hashes to the other
(instead of sending values to save network bandwidth), then both
servers need to agree on how to they will FNV hash numeric values.
Use of portable FNV values is recommended.
When one of the servers is upgraded from a 32 bit AMD CPU to a
64 bit AMD CPU (potentially changing the memory footprint of values),
you will be glad you used portable FNV values!

<P>
<B>You will be better off if use the portable hash method</B> below.
We recommend that you FNV hash integers an octet (byte) at a time.
You should FNV hash them from low to high significance order.

<P>
Lets give an example of portable hashing,
where any padding octets are ignored,
using the <A HREF=3D"#FNV-1a">FNV-1a</A> hash:

<BLOCKQUOTE><PRE><TT><B>hash</B> =3D <B><I>offset_basis</I></B>
for each <I>octet_of_data</I> to be hashed
 <B>hash</B> =3D <B>hash</B> xor <I>octet_of_data</I>
 <B>hash</B> =3D <B>hash</B> * <B><I>FNV_prime</I></B>
return <B>hash</B>
</TT></PRE></BLOCKQUOTE>

<P>
as a set of C pre-processor macros.
For clarify, we will ignore <A HREF=3D"#gcc-O3">gcc optimization</A>
and other performance issues.

<P>
The 64 bit <A HREF=3D"#FNV-1a">FNV-1a</A> hash can be expressed as a set of
C pre-processor macros:

<BLOCKQUOTE><PRE><TT><I>/*
 * NOTE: This is for illustration purposes.  Optimization,
 *       if needed, is left as an exercise for the reader.  :-)
 */</I>
/* NOTE: u_int64_t is a 64 bit unsigned type */
/* NOTE: u_int32_t is a 32 bit unsigned type */
/* NOTE: u_int16_t is a 16 bit unsigned type */
/* NOTE: u_int8_t is a 8 bit unsigned type */

&#35;define FNV1_64_INIT ((u_int64_t)14695981039346656037)
&#35;define FNV1_64_PRIME ((u_int64_t)1099511628211)

&#35;define FNV_64A_OP(<B>hash</B>, octet) (((u_int64_t)(<B>hash</B>) ^ (u_=
int8_t)(octet)) * FNV1_64_PRIME)

</TT></PRE></BLOCKQUOTE>

<P>
As an example, the 64 bit FNV-1a hash of a C-style string would become:

<BLOCKQUOTE><PRE><TT><I>/*
 * NOTE: This is for illustration purposes.  Optimization,
 *       if needed, is left as an exercise for the reader.  :-)
 */</I>
char *string; /* the string to 64 bit FNV-1a hash */
u_int64_t <B>hash</B>; /* will hold the final value of the hash */
char *p;

<B>hash</B> =3D FNV1_64_INIT;
for (p=3Dstring; *p; ++p) {
    <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, *p);
}
</TT></PRE></BLOCKQUOTE>

<P>
The 64 bit FNV-1a hash of an <B>n</B> octet buffer would become:

<BLOCKQUOTE><PRE><TT><I>/*
 * NOTE: This is for illustration purposes.  Optimization,
 *       if needed, is left as an exercise for the reader.  :-)
 */</I>
u_int8_t *buffer; /* octet data buffer of n octets to hash */
u_int64_t <B>hash</B>; /* will hold the final value of the hash */
int n; /* length of the buffer in octets (bytes) */
int i;

<B>hash</B> =3D FNV1_64_INIT;
for (i=3D0; i &lt; n; ++i) {
    <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, buffer[i]);
}
</TT></PRE></BLOCKQUOTE>

<P>
All of the above operations are the standard, portable ways to hash
a collection of octets.
To hash a 32 bit integer in a portable way, we hash it an octet at a time
from low to high order:

<BLOCKQUOTE><PRE><TT><I>/*
 * NOTE: This is for illustration purposes.  Optimization,
 *       if needed, is left as an exercise for the reader.  :-)
 */</I>
u_int32 value; /* 32 bit integer to hash */
u_int64_t <B>hash</B>; /* will hold the final value of the hash */

<B>hash</B> =3D FNV1_64_INIT;
<B>hash</B> =3D FNV_64A_OP(<B>hash</B>, value);
value &gt;&gt;=3D 8;
<B>hash</B> =3D FNV_64A_OP(<B>hash</B>, value);
value &gt;&gt;=3D 8;
<B>hash</B> =3D FNV_64A_OP(<B>hash</B>, value);
value &gt;&gt;=3D 8;
<B>hash</B> =3D FNV_64A_OP(<B>hash</B>, value);
</TT></PRE></BLOCKQUOTE>

<P>
Note that the <B>FNV_64A_OP</B> macros above only hash the low octet of val=
ue.
By shifting value left 8 bits we effectively hash the value from the
low to high byte significance order.

<P>
We can create a general integer hashing macro (and function) as follows:

<BLOCKQUOTE><PRE><TT><I>/*
 * NOTE: This is for illustration purposes.  Optimization,
 *       if needed, is left as an exercise for the reader.  :-)
 */</I>
&#35;define FNV_64A_INT(<B>hash</B>, integer) fnv_64a_int((u_int64_t)(<B>ha=
sh</B>), (u_int64_t)(integer), sizeof(integer))


/*
 * fnv_64a_int - hash an integer of up to 8 octets in size
 *
 * given:
 *	<B>hash</B>		current 64 bit FNV-1a hash value
 *	integer		integer value to hash
 *	size		size of the integer in octets (bytes)
 *
 * returns:
 *	64 bit FNV-1a hash of the integer in low to high byte order
 */
u_int64_t
fnv_64a_int(u_int64_t <B>hash</B>, u_int64_t integer, size_t size)
{
    switch (size) {
    case 8: <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, integer);
         integer &gt;&gt;=3D 8;
     /*FALLTHRU*/
    case 7: <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, integer);
         integer &gt;&gt;=3D 8;
     /*FALLTHRU*/
    case 6: <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, integer);
         integer &gt;&gt;=3D 8;
     /*FALLTHRU*/
    case 5: <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, integer);
         integer &gt;&gt;=3D 8;
     /*FALLTHRU*/
    case 4: <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, integer);
         integer &gt;&gt;=3D 8;
     /*FALLTHRU*/
    case 3: <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, integer);
         integer &gt;&gt;=3D 8;
     /*FALLTHRU*/
    case 2: <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, integer);
         integer &gt;&gt;=3D 8;
     /*FALLTHRU*/
    case 1: <B>hash</B> =3D FNV_64A_OP(<B>hash</B>, integer);
     break;
    default:
     fprintf(stderr, "fnv_64a_int: BOGUS SIZE: %d\n", size);
 exit(1);
    }
    return <B>hash</B>;
}
</TT></PRE></BLOCKQUOTE>

<P>
Returning to our original <B>struct stuff</B>, we can FNV hash
it in a portable way as follows:

<BLOCKQUOTE><PRE><TT>struct stuff {
    int data; /* 32 bits? 64 bits? */
      /* how many octets of padding? */
    char byte;
       /* how many octets of padding? */
    short value; /* 16 bits? */
       /* how many octets of padding? */
} foo;

<I>/*
 * NOTE: This is for illustration purposes.  Optimization,
 *       if needed, is left as an exercise for the reader.  :-)
 */</I>
<B>hash</B> =3D FNV1_64_INIT;
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, foo.data);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, foo.byte);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, foo.value);
</TT></PRE></BLOCKQUOTE>
</BLOCKQUOTE>

<P>
<CENTER><HR SIZE=3D"4" WIDTH=3D"50%"></CENTER>
<CENTER><A NAME=3D"type">(</A><FONT SIZE=3D"1"><A HREF=3D"#top">top</A></FO=
NT>)</CENTER>
<CENTER><H2>Extended FNV type hashing</H2></CENTER>

<P>
<BLOCKQUOTE>
One can extend the concept of
<A HREF=3D"#portable">Portable</A> FNV hashing of numeric values
to the FNV hashing of data types.
Let us say you wish for the following two values, <B>whey</B> and <B>bar</B=
>
typically hash to different values:

<BLOCKQUOTE><PRE><TT>struct curds {
    u_int16_t left;
    u_int16_t right;
} <B>whey</B> =3D {0x31, 0x31};

u_int32_t <B>bar</B> =3D 0x3131;
</TT></PRE></BLOCKQUOTE>

<P>
Or let us say that you want these to numeric values to
typically hash to different values:

<BLOCKQUOTE><PRE><TT>int32_t value1 =3D 23209;
u_int32_t value2 =3D 23209;
</TT></PRE></BLOCKQUOTE>

<P>
If the <A HREF=3D"#portable">Portable</A> FNV hashing method were used,
both <B>whey</B> and <B>bar</B> would usually FNV hash to the same value.
And <B>value1</B> and <B>value2</B> would certainly hash to the same value.

<P>
Let is say, for some reason, you wanted <B>whey</B> and <B>bar</B>
(and <B>value1</B> and <B>value2</B>)
usually FNV hash different values even though their bit
patterns in memory look the same.
You can accomplish this by hashing in a <I>FNV type value</I> before
hashing its numeric value.

<P>
Consider the following <I>FNV type values</I> enum:
<BLOCKQUOTE><PRE><TT>/*
 * This is an example of how <I>FNV type values</I> could be
 * implemented.  This is not an exhaustive list.
 *
 * The intent of these enum values is that they all bit into a
 * single octet (i.e., &lt; 256).
 */
enum fnv_type {
 /* Common C types */
 FNV_VOID =3D 0,
 FNV_CHAR, FNV_UCHAR, FNV_SHORT, FNV_USHORT, FNV_INT,
 FNV_UINT, FNV_LONG, FNV_ULONG, FNV_FLOAT, FNV_DOUBLE, FNV_LONGDOUBLE,

 /* Common C type extension */
 FNV_LONGLONG, FNV_ULONGLONG,

 /* Explicit intXY_t and u_intXY_t typedefs */
 FNV_INT8_T, FNV_U_INT8_T, FNV_INT16_T, FNV_U_INT16_T,
 FNV_INT32_T, FNV_U_INT32_T, FNV_INT64_T, FNV_U_INT64_T,

 /* bit fields by length,  ctype foo : 7 =3D=3D&gt; BITFLD_7 */
        FNV_BITFLD1, FNV_BITFLD2, FNV_BITFLD3, FNV_BITFLD4,
        FNV_BITFLD5, FNV_BITFLD6, FNV_BITFLD7, FNV_BITFLD8, FNV_BITFLD9,
 FNV_BITFLD10, FNV_BITFLD11, FNV_BITFLD12, FNV_BITFLD13, FNV_BITFLD14,
 FNV_BITFLD15, FNV_BITFLD16, FNV_BITFLD17, FNV_BITFLD18, FNV_BITFLD19,
 FNV_BITFLD20, FNV_BITFLD21, FNV_BITFLD22, FNV_BITFLD23, FNV_BITFLD24,
 FNV_BITFLD25, FNV_BITFLD26, FNV_BITFLD27, FNV_BITFLD28, FNV_BITFLD29,
 FNV_BITFLD30, FNV_BITFLD31, FNV_BITFLD32, FNV_BITFLD33, FNV_BITFLD34,
 FNV_BITFLD35, FNV_BITFLD36, FNV_BITFLD37, FNV_BITFLD38, FNV_BITFLD39,
 FNV_BITFLD40, FNV_BITFLD41, FNV_BITFLD42, FNV_BITFLD43, FNV_BITFLD44,
 FNV_BITFLD45, FNV_BITFLD46, FNV_BITFLD47, FNV_BITFLD48, FNV_BITFLD49,
 FNV_BITFLD50, FNV_BITFLD51, FNV_BITFLD52, FNV_BITFLD53, FNV_BITFLD54,
 FNV_BITFLD55, FNV_BITFLD56, FNV_BITFLD57, FNV_BITFLD58, FNV_BITFLD59,
 FNV_BITFLD60, FNV_BITFLD61, FNV_BITFLD62, FNV_BITFLD63, FNV_BITFLD64,

 /* pointer to some C type */
 FNV_POINTER,

 /* ... */
};

/*
 * FNV macro to hash <I>FNV type values</I>
 *
 * NOTE: Assumes that the <I>FNV type value</I> &lt; 256.
 */
&#35;define FNV_64A_TYPE(hash, type) FNV_64A_OP((<B>hash</B>), (enum fnv_ty=
pe)(type))

</TT></PRE></BLOCKQUOTE>

<P>
If we precede the FNV hashing of each data type with an FNV hash
of the octet that represents the <I>FNV type values</I>, we can
distinguish among different data types, even when their bit pattern
in memory is identical.

<P>
Example:

<BLOCKQUOTE><PRE><TT>struct stuff {
    int data;
    char byte;
    short value;
    unsigned long longvalue;
    int *words;
    void *pointer;
    char **list;
    u_int16_t a : 3;
    u_int16_t b : 2;
    u_int16_t c : 4;
} baz;

<I>/*
 * NOTE: This is for illustration purposes.  Optimization,
 *       if needed, is left as an exercise for the reader.  :-)
 */</I>
<B>hash</B> =3D FNV1_64_INIT;

/* int data */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_INT);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.data);

/* char byte */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_CHAR);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.byte);

/* short value */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_SHORT);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.value);

/* unsigned long longvalue */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_ULONG);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.longvalue);

/* int *words */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_POINTER);
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_INT);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.words);

/* void *pointer */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_POINTER);
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_VOID);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.pointer);

/* char **list */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_POINTER);
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_POINTER);
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_CHAR);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.list);

/* u_int16_t a : 3 */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_U_INT16_T);
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_BITFLD3);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.a);

/* u_int16_t b : 2 */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_U_INT16_T);
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_BITFLD2);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.b);

/* u_int16_t c : 4 */
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_U_INT16_T);
<B>hash</B> =3D FNV_64A_TYPE(<B>hash</B>, FNV_BITFLD4);
<B>hash</B> =3D FNV_64A_INT(<B>hash</B>, baz.c);
</TT></PRE></BLOCKQUOTE>

<P>
Again, if you do <B>NOT</B> care about distinguishing between
different data types even when you have the same numeric values,
you do not need to use something like the method above.
And if you do not need portable FNV files, then:

<BLOCKQUOTE><PRE><TT><B>hash</B> =3D fnv_64a_buf(&amp;baz, sizeof(baz), FNV=
1_64_INIT);
</TT></PRE></BLOCKQUOTE>

<P>
will work just fine.

</BLOCKQUOTE>
end of deprecated section that was specific for general interest -->

<p>
</p><center><hr size=3D"4" width=3D"50%"></center>
<center><a name=3D"FNV-reference-source">(</a><font size=3D"1"><a href=3D"h=
ttp://www.isthe.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</c=
enter>
<center><h2>FNV source</h2></center>

<blockquote>

<center><h3>FNV reference source</h3></center>

<p>
In the C source&lt; below, primes are provided
for 32 bit and 64 bit unsigned integers.
For compilers that do not implement the <i>unsigned long long</i>
type, code is provided to quickly simulate the 64 bit multiply
by the particular <b><i>FNV_prime</i></b>.

</p><ul>
<li><a href=3D"http://www.isthe.com/chongo/src/fnv/fnv-5.0.3.tar.gz">fnv-5.=
0.3.tar.gz</a> -
(all the bits) [updated: 2012 May 20]
<p>
</p></li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/hash_32.c">hash=
_32.c</a> -
(32 bit <b>FNV-1</b> algorithm)
</li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/hash_64.c">hash_64.=
c</a> -
(64 bit <b>FNV-1</b> algorithm)
</li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/hash_32a.c">hash_32=
a.c</a> -
(32 bit <b>FNV-1a</b> algorithm)
</li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/hash_64a.c">hash_64=
a.c</a> -
(64 bit <b>FNV-1a</b> algorithm)
</li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/fnv.h">fnv.h</a> -
(<b>FNV</b> header file)
<p>
</p></li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/fnv32.c">fnv32.=
c</a> -
(32 bit <b>FNV-0</b>, <b>FNV-1</b>, and <b>FNV-1a</b> hash tool/demo) [upda=
ted: 2012 May 20]
</li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/fnv64.c">fnv64.c</a=
> -
(64 bit <b>FNV-0</b>, <b>FNV-1</b>, and <b>FNV-1a</b> hash tool/demo) updat=
ed: 2012 May 20]
<p>
</p></li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/README">README<=
/a> -
(brief comments about <b>FNV-0</b>, <b>FNV-1</b>, and <b>FNV-1a</b>)
</li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/Makefile">Makefile<=
/a> -
(how to compile/install)
</li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/have_ulong64.c">hav=
e_ulong64.c</a> -
(64 bit unsigned integer type detector)
</li><li><a href=3D"http://www.isthe.com/chongo/src/fnv/test_fnv.c">test_fn=
v.c</a> -
(FNV test vectors)
</li></ul>

NOTE: As of version 5.0, the above source include test vectors
for 32 bit and 64 bit versions of the
<b>FNV-0</b>, <b>FNV-1</b>, and <b>FNV-1a</b> algoritms.
The <a href=3D"http://www.isthe.com/chongo/src/fnv/test_fnv.c">test_fnv.c</=
a> file
contains validated test vectors. To verify a compiled code, try:
<blockquote>
<tt>make check</tt>
</blockquote>
For compiled code, try:
<ul>
<li> <tt>fnv032 -t 1 -v</tt>
</li><li> <tt>fnv132 -t 1 -v</tt>
</li><li> <tt>fnv1a32 -t 1 -v</tt>
</li><li> <tt>fnv064 -t 1 -v</tt>
</li><li> <tt>fnv164 -t 1 -v</tt>
</li><li> <tt>fnv1a64 -t 1 -v</tt>
</li></ul>

<center><a name=3D"alt-FNV-source">(</a><font size=3D"1"><a href=3D"http://=
www.isthe.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h3>Other FNV source code</h3></center>

<p>
<a href=3D"http://www.awgn.antifork.org/">Nicola Bonelli</a>
has an implementation of FNV using the iovec interface:
</p><ul>
<li> <a href=3D"http://www.awgn.antifork.org/codes/fnv-ext.c">FNV with iove=
c</a>
</li></ul>

<p>
<a href=3D"http://www.awgn.antifork.org/">Nicola Bonelli</a>
also wrote the following C++ FNV implementation:

</p><ul>
<li><a href=3D"http://www.awgn.antifork.org/codes++/fnv.hh">fnv.hh</a>
</li><li><a href=3D"http://www.awgn.antifork.org/codes++/fnv-test.cc">fnv-t=
est.cc</a>
</li></ul>

Georgi Marinov (Georgi 'Kaze' 'Sanmayce') posted his very fast <b>FNV-1a</b=
>
implementation:
<br>
<ul>
<li> <a href=3D"http://encode.ru/threads/612-Fastest-decompressor!?p=3D2218=
4&amp;viewfull=3D1#post22184">Best
string-hash-function or an-open-letter to pro-programmer</a>

He offers this code as an C etude in spirit to our motto of:
<blockquote>
<font size=3D"+2"><b>Share and Enjoy!</b> :-)</font>
</blockquote>
</li></ul>

<p>
<a name=3D"PowerBASIC">Wayne Diamond</a> implemented 32-bit FNV algorithm i=
n
<a href=3D"http://www.powerbasic.com/">PowerBASIC</a> inline x86 assembly:
</p><blockquote><pre><tt>
FUNCTION FNV32(BYVAL dwOffset AS DWORD, BYVAL dwLen AS DWORD, BYVAL offset_=
basis AS DWORD) AS DWORD
#REGISTER NONE
! mov esi, dwOffset ;esi =3D ptr to buffer
! mov ecx, dwLen ;ecx =3D length of buffer (counter)
! mov eax, offset_basis ;set to 2166136261 for FNV-1
! mov edi, &amp;h01000193 ;FNV_32_PRIME =3D 16777619
! xor ebx, ebx ;ebx =3D 0
nextbyte:
! mul edi ;eax =3D eax * FNV_32_PRIME
! mov bl, [esi] ;bl =3D byte from esi
! xor eax, ebx ;al =3D al xor bl
! inc esi ;esi =3D esi + 1 (buffer pos)
! dec ecx ;ecx =3D ecx - 1 (counter)
! jnz nextbyte ;if ecx is 0, jmp to NextByte
! mov FUNCTION, eax ;else, function =3D eax
END FUNCTION
</tt></pre></blockquote>

<p>
Wayne said:
</p><blockquote>
''<i>Just thought I should let you know that I've ported the 32-bit
FNV algorithm over to inline assembly. It's actually in PowerBASIC
(www.powerbasic.com) format - a compiler I use, but the main function
is all assembly. It could be optimized further in terms of saving a
couple of clock cycles, but it's fairly optimized al ready - only 6
instructions in the main loop, plus 5 setup instructions, and compiles
to just 33 bytes.</i>''
</blockquote>

<p>
M.S.Schulte sent us these 32-bit <b>FNV-1</b> and <b>FNV-1a</b> x86 assembl=
er
implementations (written in <a href=3D"http://flatassembler.net/">flat
assembler</a>), half of which were optimized for speed, the other half
were optimized for size:

</p><blockquote><pre><tt>
small_fnv32: ;FNV1 32bit (size: 31 bytes)
; Intel Core 2 Duo E6600: 354.20 mb/s
   push esi
   push edi
   mov esi, [esp + 0ch] ;buffer
   mov ecx, [esp + 10h] ;length
   mov eax, [esp + 14h] ;basis
   mov edi, 01000193h ;fnv_32_prime
 next:
   mul edi
   xor al, [esi]
   inc esi
   loop snext
   pop edi
   pop esi
   retn 0ch

 small_fnv32a: ;FNV1a 32bit (size: 31 bytes)
; Intel Core 2 Duo E6600: 327.68 mb/s
   push esi
   push edi
   mov esi, [esp + 0ch] ;buffer
   mov ecx, [esp + 10h] ;length
   mov eax, [esp + 14h] ;basis
   mov edi, 01000193h ;fnv_32_prime
 nexta:
   xor al, [esi]
   mul edi
   inc esi
   loop nexta
   pop edi
   pop esi
   retn 0ch

fast_fnv32: ;FNV1 32bit (size: 36 bytes)
; Intel Core 2 Duo E6600: 565.12 mb/s
   push ebx
   push esi
   push edi
   mov esi, [esp + 10h] ;buffer
   mov ecx, [esp + 14h] ;length
   mov eax, [esp + 18h] ;basis
   mov edi, 01000193h ;fnv_32_prime
   xor ebx, ebx
 next:
   mul edi
   mov bl, [esi]
   xor eax, ebx
   inc esi
   dec ecx
   jnz next
   pop edi
   pop esi
   pop ebx
   retn 0ch

 fast_fnv32a: ;FNV1a 32bit (size: 36 bytes)
; Intel Core 2 Duo E6600: 574.95 mb/s
   push ebx
   push esi
   push edi
   mov esi, [esp + 10h] ;buffer
   mov ecx, [esp + 14h] ;length
   mov eax, [esp + 18h] ;basis
   mov edi, 01000193h ;fnv_32_prime
   xor ebx, ebx
 nexta:
   mov bl, [esi]
   xor eax, ebx
   mul edi
   inc esi
   dec ecx
   jnz nexta
   pop edi
   pop esi
   pop ebx
   retn 0ch
</tt></pre></blockquote>

</blockquote>

<p>
M.S.Schulte also sent us these 64-bit <b>FNV-1</b> and <b>FNV-1a</b>
x86 assembler implementations:

</p><blockquote><pre><tt>
;FNV64 x86-64bit assembler implementation (written in flat assembler)
;FNV64-1 and FNV64-1a, both 37 bytes, (~284.13 mb/s Intel E8400)
;invoke fnv64,buffer,length,base (x64 Calling Convention)

  fnv64:
    mov rax, r8
    mov r8, rdx
    mov r9, 100000001b3h ;fnv_64_prime
    xor r10, r10
  next:
    mul r9
    mov r10b, [rcx]
    xor rax, r10
    inc rcx
    dec r8
    jnz next
    ret

  fnv64a:
    mov rax, r8
    mov r8, rdx
    mov r9, 100000001b3h ;fnv_64_prime
    xor r10, r10
  nexta:
    mov r10b, [rcx]
    xor rax, r10
    mul r9
    inc rcx
    dec r8
    jnz nexta
    ret
</tt></pre></blockquote>

<p>
</p><center><hr size=3D"4" width=3D"50%"></center>
<center><a name=3D"gcc-O3">(</a><font size=3D"1"><a href=3D"http://www.isth=
e.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>gcc optimization</h2></center>

<blockquote>
It has been reported by several people that under the gcc compiler
with -O3 on many AMD &amp; Intel CPUs, that replacing the
<i>FNV_prime</i> multiply with a expression of shifts and adds
will improve the performance.
<p>
Limited testing on our part confirmed that one can gain a few %
in speed on an 1.6GHz AMD Athlon using gcc version 3.2.2 with -O3 optimizat=
ion.
</p><p>
For a 32 bit FNV-1, we used:
</p><blockquote><pre><tt>while (bp &lt; be) {

    /* multiply by the 32 bit FNV magic prime mod 2^32 */
#if defined(NO_FNV_GCC_OPTIMIZATION)
    hval *=3D FNV_32_PRIME;
#else
    hval +=3D (hval&lt;&lt;1) + (hval&lt;&lt;4) + (hval&lt;&lt;7) + (hval&l=
t;&lt;8) + (hval&lt;&lt;24);
#endif

    /* xor the bottom with the current octet */
    hval ^=3D (Fnv32_t)*bp++;
}
</tt></pre></blockquote>
<p>
For a 32 bit FNV-1a, we used:
</p><blockquote><pre><tt>while (bp &lt; be) {

    /* xor the bottom with the current octet */
    hval ^=3D (Fnv32_t)*bp++;

    /* multiply by the 32 bit FNV magic prime mod 2^32 */
#if defined(NO_FNV_GCC_OPTIMIZATION)
    hval *=3D FNV_32_PRIME;
#else
    hval +=3D (hval&lt;&lt;1) + (hval&lt;&lt;4) + (hval&lt;&lt;7) + (hval&l=
t;&lt;8) + (hval&lt;&lt;24);
#endif
}
</tt></pre></blockquote>
<p>
For a 64 bit FNV-1, we used:
</p><blockquote><pre><tt>while (bp &lt; be) {

    /* multiply by the 64 bit FNV magic prime mod 2^64 */
#if defined(NO_FNV_GCC_OPTIMIZATION)
    hval *=3D FNV_64_PRIME;
#else
    hval +=3D (hval &lt;&lt; 1) + (hval &lt;&lt; 4) + (hval &lt;&lt; 5) +
     hval &lt;&lt; 7) + (hval &lt;&lt; 8) + (hval &lt;&lt; 40);
#endif

    /* xor the bottom with the current octet */
    hval ^=3D (Fnv64_t)*bp++;
}
</tt></pre></blockquote>
<p>
For a 64 bit FNV-1a, we used:
</p><blockquote><pre><tt>while (bp &lt; be) {

    /* xor the bottom with the current octet */
    hval ^=3D (Fnv64_t)*bp++;

    /* multiply by the 64 bit FNV magic prime mod 2^64 */
#if defined(NO_FNV_GCC_OPTIMIZATION)
    hval *=3D FNV_64_PRIME;
#else
    hval +=3D (hval &lt;&lt; 1) + (hval &lt;&lt; 4) + (hval &lt;&lt; 5) +
     hval &lt;&lt; 7) + (hval &lt;&lt; 8) + (hval &lt;&lt; 40);
#endif
}
</tt></pre></blockquote>
</blockquote>

<p>
</p><center><hr size=3D"4" width=3D"25%"></center>
<center><a name=3D"zero-hash">(</a><font size=3D"1"><a href=3D"http://www.i=
sthe.com/chongo/tech/comp/fnv/index.html#top">top</a></font>)</center>
<center><h2>Can you help solve some of the zero-hash challenges?</h2></cent=
er>

<p>
</p><blockquote>
We are interested in finding the shortest data sets, under certain constrai=
nts, that produce
a FNV hash value of zero for the various sizes of the <b>FNV-1</b> and <b>F=
NV-1a</b> hash function.
Those who offer the best solution will receive fame and credit on the FNV w=
eb page.
<p>
If you have a zero-value hash solution to an unsolved challenge, or if you =
have a better
(shorted data segment) solution than one that is shown below, please send E=
Mail to:
</p><blockquote><a name=3D"address"><img src=3D"http://www.isthe.com/chongo=
/jpg/fnv-email.jpg" width=3D"218" height=3D"22" alt=3D"fnv EMail addr"></a>=
</blockquote>
<p>
Please use the subject line:
</p><blockquote><pre><tt>zero-hash challenge solution</tt></pre></blockquot=
e>
<p>
<b>NOTE:</b> Please use the solution format used by Russ Cox (see below), i=
f possible.
</p><p>
Please include the following information in your EMail message:
</p><ol>
<li> The challenge number you claim to have solved
</li><li> The name of the challenge you claim to have solved
</li><li> The length, in octets (8 bit bytes) of your proposed solution
</li><li> Who should we credit (i.e., how do you want us to credit you on o=
ur web page) for solving the challenge?
</li><li> A URL containing your proposed solution (optional)
</li></ol>
<blockquote>
NOTE: If your solution is large, please do not send the data set in the EMa=
il.
Instead send is a URL where we can download your proposed challenge solutio=
n.
</blockquote>
</blockquote>

Zero-hash challenges:

<ol>

<!-- FNV challenge 1 -->
<li> <b>SOLVED!</b> What is the shortest binary data set for which the 32-b=
it FNV-1 hash is 0?
<blockquote>
32-bit solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>There are 254 solutions of length 5, ranging from

FNV32_1(01 47 6c 10 f3) =3D 0

to

FNV32_1(fd 45 41 08 a0) =3D 0
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 2 -->
</p></li><li> <b>SOLVED!</b> What is the shortest binary data set for which=
 the 64-bit FNV-1 hash is 0?
<blockquote>Scott Pakin
&lt;<img src=3D"http://www.isthe.com/chongo/png/pakin_at_lanl.gov.png" alt=
=3D"pakin Email address" width=3D"129" height=3D"18">&gt;
on 2011-Aug-22 reported that there are
no solutions for binary data sets of length 7 or less.
<p>
64-bit solution by an anonymous scientist
&lt;<img src=3D"http://www.isthe.com/chongo/png/ntldr_at_diskcryptor.net.pn=
g" alt=3D"ntldr Email address" width=3D"176" height=3D"18">&gt;
on 2011-Oct-23:
</p><blockquote><pre><tt>There are no solutions for length 8.

These are the solutions for length 9:

FNV64_1(92 06 77 4c e0 2f 89 2a d2) =3D 0
FNV64_1(fb 6c 4f db 00 41 db c0 fe) =3D 0
FNV64_1(9f 72 72 35 80 4b 8d 6b 06) =3D 0
FNV64_1(3d 82 76 00 80 7c 52 62 1a) =3D 0
FNV64_1(58 21 f5 a2 e1 01 9d 80 e0) =3D 0
FNV64_1(52 a1 eb 10 a0 e9 45 96 05) =3D 0
FNV64_1(be 64 8a 14 e1 46 17 18 ff) =3D 0
FNV64_1(9e 50 1d f2 41 75 55 ac 05) =3D 0
FNV64_1(b3 92 a9 6f 80 e4 29 a4 63) =3D 0
FNV64_1(82 ba b3 41 81 0f db 83 15) =3D 0
FNV64_1(92 f4 6e 0e e1 b9 e5 45 2d) =3D 0
FNV64_1(3c ea 57 50 81 67 67 9b e0) =3D 0
FNV64_1(36 e3 96 34 e2 1d 36 00 61) =3D 0
FNV64_1(af fa ff ee 61 b0 5e c4 04) =3D 0
FNV64_1(d5 c9 88 15 02 2f d3 38 c2) =3D 0
FNV64_1(bc a7 38 51 e2 2f b1 1b 22) =3D 0
FNV64_1(70 f2 10 ba 02 45 37 b3 e8) =3D 0
FNV64_1(5b a3 a0 4e 81 fc 4f 32 5b) =3D 0
FNV64_1(cd 50 99 68 22 d4 78 2f b0) =3D 0
FNV64_1(fa ff 0d fa e2 f0 43 b4 9a) =3D 0
FNV64_1(16 3f ba 47 43 94 44 fe 86) =3D 0
FNV64_1(46 e0 03 71 c2 57 f0 bc da) =3D 0
FNV64_1(60 74 4a 52 e3 06 42 36 f2) =3D 0
FNV64_1(97 20 3a f8 a2 f6 8a 62 a6) =3D 0
FNV64_1(98 f5 cc d5 03 32 22 1a e2) =3D 0
FNV64_1(5d d5 14 e8 e3 43 8b 5a 9e) =3D 0
FNV64_1(95 b8 11 62 03 5a ed d2 cb) =3D 0
FNV64_1(f9 cb 23 1d 03 71 c5 ca 5c) =3D 0
FNV64_1(c3 04 1c 59 82 a5 aa 9b 55) =3D 0
FNV64_1(68 10 80 61 a3 5e 72 31 48) =3D 0
FNV64_1(43 0a eb 89 c2 c1 9d d8 2a) =3D 0
FNV64_1(5a a3 e3 40 23 ce 90 bc a2) =3D 0
FNV64_1(27 e1 3f aa a3 8f af 6a 51) =3D 0
FNV64_1(0c 5b ac 36 24 22 a2 7c 24) =3D 0
FNV64_1(ea bc d7 7c 24 49 58 66 57) =3D 0
FNV64_1(5a 30 62 51 83 9c 97 c3 75) =3D 0
FNV64_1(7a 18 75 d3 c3 88 65 0b 3a) =3D 0
FNV64_1(02 38 25 95 25 0b 3b 0c a8) =3D 0
FNV64_1(33 1c ae dd 83 fc 55 f4 63) =3D 0
FNV64_1(cb 87 3d b9 e5 38 0b bd ca) =3D 0
FNV64_1(3a 25 ba 67 a4 c7 49 80 e9) =3D 0
FNV64_1(49 14 3b 94 05 63 b5 de d6) =3D 0
FNV64_1(45 fb 0d 28 45 19 66 63 27) =3D 0
FNV64_1(92 7a e5 a6 e5 88 ba 55 68) =3D 0
FNV64_1(c3 93 7c 11 c4 1a 2f e0 8b) =3D 0
FNV64_1(a1 d8 5e 71 a5 6a 96 5e 64) =3D 0
FNV64_1(77 7b d7 7d 05 dc 73 64 c3) =3D 0
FNV64_1(3d 3f d4 d6 a6 71 b2 9d 65) =3D 0
FNV64_1(8d 45 9e d0 27 66 b4 46 34) =3D 0
FNV64_1(f1 da 16 a1 85 fe 43 a7 30) =3D 0
FNV64_1(97 6b 02 e3 66 10 3d 6e ab) =3D 0
FNV64_1(84 2b d9 13 a7 25 5a 8a 22) =3D 0
FNV64_1(0c 2b 2f d2 28 3a 91 df 95) =3D 0
FNV64_1(1c 01 ed aa 47 2f 64 6a 8b) =3D 0
FNV64_1(71 66 6f 98 47 74 48 eb 39) =3D 0
FNV64_1(2b b3 61 de e8 6c 33 fd 32) =3D 0
FNV64_1(c5 33 7e c3 87 9c 0c 24 4b) =3D 0
FNV64_1(b7 44 ea 2c a8 59 bc fc c5) =3D 0
FNV64_1(b2 8c 40 98 67 46 6f ce 35) =3D 0
FNV64_1(04 34 61 b3 87 d4 e5 1a 7f) =3D 0
FNV64_1(20 ba 15 17 e8 dd d9 f6 19) =3D 0
FNV64_1(36 c4 d3 ef 88 53 6e 86 56) =3D 0
FNV64_1(32 55 ce f0 48 73 af 8d 9d) =3D 0
FNV64_1(18 3c d8 70 08 71 6a 47 a3) =3D 0
FNV64_1(a8 ad fb 29 a8 e4 8e 82 c4) =3D 0
FNV64_1(47 47 bf 58 08 7f ab bc 34) =3D 0
FNV64_1(8f 68 71 3a e9 56 8f d0 0f) =3D 0
FNV64_1(64 5e dc 14 88 93 8d b4 35) =3D 0
FNV64_1(b4 33 d0 6d 48 bb 3a 5d 3d) =3D 0
FNV64_1(22 e4 4d 0a 48 bd 95 1e 8e) =3D 0
FNV64_1(78 6e 06 7d 48 ce db 12 33) =3D 0
FNV64_1(7e 1f 4d 02 48 f8 d2 a5 c2) =3D 0
FNV64_1(90 6b 26 4e c7 ef 12 f2 20) =3D 0
FNV64_1(90 10 a8 21 09 16 22 57 bc) =3D 0
FNV64_1(5b 1a 8c bc 09 2c a4 2d 9c) =3D 0
FNV64_1(2c 1a 6e 44 a9 7d 98 e0 39) =3D 0
FNV64_1(8a 2b 35 ab 49 97 d5 f7 bc) =3D 0
FNV64_1(29 bc 62 5e 0a 4e 9e 34 40) =3D 0
FNV64_1(e7 e6 c7 00 aa d3 26 5a 4a) =3D 0
FNV64_1(7e 65 e5 51 2b 66 e8 b5 b2) =3D 0
FNV64_1(2b d7 cf 6a 6a 6f b4 56 c9) =3D 0
FNV64_1(33 51 09 af ab 42 80 8b 07) =3D 0
FNV64_1(d1 78 30 6b c9 9c af 1f d4) =3D 0
FNV64_1(c6 00 f9 bf 4b 38 f0 00 c6) =3D 0
FNV64_1(a1 81 99 9a c9 f2 8e 4c 6f) =3D 0
FNV64_1(b3 d1 6c 57 2c 62 3c b0 5c) =3D 0
FNV64_1(c7 50 c1 4d ec de 91 e8 fd) =3D 0
FNV64_1(54 51 fe aa ec e9 6b f2 a2) =3D 0
FNV64_1(5d dc 27 f3 4b c8 b0 9a c9) =3D 0
FNV64_1(d2 4d e1 77 8c 0a 8f 2d 44) =3D 0
FNV64_1(ce e4 e5 80 ca 8a 07 dc 67) =3D 0
FNV64_1(0f d0 8f 67 ca 9f 94 a5 86) =3D 0
FNV64_1(89 e9 ed dd ed 84 84 50 26) =3D 0
FNV64_1(76 f5 be 03 ac 82 5a 09 26) =3D 0
FNV64_1(f8 71 02 ca 6c 6d a5 ae fc) =3D 0
FNV64_1(e8 cb 80 56 ad 00 a0 d1 d2) =3D 0
FNV64_1(88 89 0c dd 0c cf b2 5d d7) =3D 0
FNV64_1(69 ad 8f db 0d 03 8a ca 37) =3D 0
FNV64_1(96 58 24 93 cb bf d7 f1 fe) =3D 0
FNV64_1(ee b1 f6 d2 6d 9b 46 7d 3f) =3D 0
FNV64_1(de 64 18 d6 2e 86 5b 3c 0c) =3D 0
FNV64_1(24 05 66 e4 0d f1 c8 b1 d3) =3D 0
FNV64_1(77 d7 5f 5f ef 81 2d b3 37) =3D 0
FNV64_1(58 53 f5 b5 2e ec 51 fe 25) =3D 0
FNV64_1(ba 65 2a 3b 8e c6 bb a8 b6) =3D 0
FNV64_1(e5 81 4f 09 f0 0c ec f9 fa) =3D 0
FNV64_1(50 5b e8 f9 f0 6a 47 b4 64) =3D 0
FNV64_1(d3 0e f4 c7 6e d9 60 31 b5) =3D 0
FNV64_1(58 e4 4a 3c cd 97 d6 fd 84) =3D 0
FNV64_1(6f 82 aa ca 2f e7 1a 8d b1) =3D 0
FNV64_1(8f 50 ec 2f 2f e7 30 4c db) =3D 0
FNV64_1(f0 3b 01 db 6f 33 db 82 41) =3D 0
FNV64_1(13 3c 71 e4 8f 75 46 48 8f) =3D 0
FNV64_1(2f a5 a5 41 cd f5 b4 c6 45) =3D 0
FNV64_1(8b 1a 4c 12 30 38 c3 61 08) =3D 0
FNV64_1(6f 9c 5c 3f 8f d6 47 70 f7) =3D 0
FNV64_1(c1 0e 16 18 50 1b 47 48 f8) =3D 0
FNV64_1(2b 94 3f ad 30 ad 5e c4 85) =3D 0
FNV64_1(5f 55 92 c6 ce b9 f5 05 08) =3D 0
FNV64_1(42 8e 3a bb f1 bd 08 09 25) =3D 0
FNV64_1(28 84 f5 2b ce f1 3e 47 41) =3D 0
FNV64_1(25 d1 2c bf 90 5c 71 24 85) =3D 0
FNV64_1(d0 25 3d f3 90 64 67 ae f9) =3D 0
FNV64_1(c5 1d e5 36 11 a9 7b 4d e0) =3D 0
FNV64_1(88 c2 24 da 50 f9 55 03 dc) =3D 0
FNV64_1(ff 54 4f 75 cf 6d bb c4 4b) =3D 0
FNV64_1(9e 49 c2 63 11 d7 b0 74 25) =3D 0
FNV64_1(ac b1 42 65 cf 7d 84 0e 37) =3D 0
FNV64_1(05 a5 28 18 11 e3 0d 6a aa) =3D 0
FNV64_1(03 8d 11 ce f2 6f 0e 0a cf) =3D 0
FNV64_1(bf d6 88 3d 51 75 18 67 0e) =3D 0
FNV64_1(69 a2 dd 69 cf e4 94 5e e3) =3D 0
FNV64_1(e4 62 0b 95 b1 58 a1 d4 25) =3D 0
FNV64_1(c0 75 c6 ec 51 9e d4 c7 4c) =3D 0
FNV64_1(83 9d b3 97 32 54 9b 04 ec) =3D 0
FNV64_1(9a 7f 71 94 32 cf bb 97 38) =3D 0
FNV64_1(7a 4f e4 60 13 93 fd 7d 50) =3D 0
FNV64_1(76 48 71 f5 52 2f cb f7 e2) =3D 0
FNV64_1(da 0e 88 1f 13 ba d5 a7 2f) =3D 0
FNV64_1(2a be ca e7 33 12 4e 33 26) =3D 0
FNV64_1(79 ce 5e ee 92 27 5d c7 17) =3D 0
FNV64_1(36 91 77 d3 72 5a de 9f 0b) =3D 0
FNV64_1(3a 33 cd 8d 52 7a b8 2a d8) =3D 0
FNV64_1(25 66 ec c3 52 8b d0 13 4f) =3D 0
FNV64_1(de d7 a1 1f b2 58 65 d8 d7) =3D 0
FNV64_1(8a e5 cb 54 33 b0 de 92 42) =3D 0
FNV64_1(71 49 0a bb 33 d8 35 b3 59) =3D 0
FNV64_1(03 36 3b 64 f4 98 4b 21 99) =3D 0
FNV64_1(8c f5 50 02 d2 10 db 86 1d) =3D 0
FNV64_1(c3 4f cf 6e 93 4e b5 d8 b4) =3D 0
FNV64_1(2a fb 95 75 73 8c 85 76 82) =3D 0
FNV64_1(35 c0 2a 8b f5 56 45 66 45) =3D 0
FNV64_1(68 2a 76 44 73 cf 31 3a 8e) =3D 0
FNV64_1(98 4c a0 05 93 9a cf 65 a1) =3D 0
FNV64_1(a5 3e 3b f8 94 0e 6e 74 73) =3D 0
FNV64_1(4b 75 16 e9 35 47 e2 af 21) =3D 0
FNV64_1(3c 84 fb ee f6 10 6c 09 3f) =3D 0
FNV64_1(45 52 87 53 74 7c 1b 2c a1) =3D 0
FNV64_1(a0 8b 28 e0 d3 34 be 90 cb) =3D 0
FNV64_1(67 57 50 d0 16 3c 23 af e1) =3D 0
FNV64_1(a8 a6 4d 44 16 52 57 ba 95) =3D 0
FNV64_1(9e 0c be 6a 75 1d 3f 6c 20) =3D 0
FNV64_1(14 1b 43 7a b5 4e 40 88 b0) =3D 0
FNV64_1(68 3b bd d6 f7 ae d7 f9 28) =3D 0
FNV64_1(ab c0 61 a3 76 20 b8 f7 3b) =3D 0
FNV64_1(05 e8 00 91 b5 dd be 7e af) =3D 0
FNV64_1(14 dd 60 a4 96 19 04 05 16) =3D 0
FNV64_1(7e e5 14 cd 76 87 03 4c 2d) =3D 0
FNV64_1(07 f0 09 29 18 7d 7d fe 8a) =3D 0
FNV64_1(b9 b4 a5 c6 37 99 fd 49 ff) =3D 0
FNV64_1(d2 dd 5a 63 37 e4 08 8e d4) =3D 0
FNV64_1(a2 0b f2 5e 76 fd 65 2c 80) =3D 0
FNV64_1(c8 d7 df ba 37 e8 d9 2b 0c) =3D 0
FNV64_1(6e 40 03 eb 37 ea eb a6 93) =3D 0
FNV64_1(27 f9 53 0f 37 fc 0e 28 60) =3D 0
FNV64_1(c2 72 49 23 d5 ce 7e bb ef) =3D 0
FNV64_1(3e 11 d8 6b b6 e9 30 2f ab) =3D 0
FNV64_1(0e dd b7 d7 19 45 86 d7 79) =3D 0
FNV64_1(a3 f7 21 85 97 07 7d e1 4b) =3D 0
FNV64_1(4e 76 21 ee 19 67 54 55 23) =3D 0
FNV64_1(0f 19 18 da 38 60 1c 0b 9c) =3D 0
FNV64_1(a4 91 5d 2c 77 7f b4 cb c6) =3D 0
FNV64_1(c1 b7 ee 41 19 7a 60 4d 7e) =3D 0
FNV64_1(88 47 7b 0c d6 4c e0 c1 20) =3D 0
FNV64_1(73 88 eb 4f d6 53 4f 7c 6a) =3D 0
FNV64_1(f4 5a e5 b3 f9 cf 96 88 8f) =3D 0
FNV64_1(ba 5c b1 28 58 2f 33 16 cc) =3D 0
FNV64_1(04 cd 1f c8 1a 7a 20 f1 d0) =3D 0
FNV64_1(5f 2c 1c 63 b8 48 83 82 a4) =3D 0
FNV64_1(22 f5 ed a6 98 51 eb a3 f8) =3D 0
FNV64_1(f8 6b 6d 33 fa 65 24 bd 5c) =3D 0
FNV64_1(10 3b b6 ae d7 86 73 25 d3) =3D 0
FNV64_1(52 31 6c 5a 79 03 be 55 95) =3D 0
FNV64_1(af c9 ab 5e 1b 54 de 1d 84) =3D 0
FNV64_1(c2 ed f4 36 79 77 81 0d ee) =3D 0
FNV64_1(36 f5 db eb d8 30 d9 69 f6) =3D 0
FNV64_1(43 84 92 b9 79 90 66 a4 e6) =3D 0
FNV64_1(7d e9 4d 0e 1b da 69 eb 57) =3D 0
FNV64_1(2d 03 20 62 fb 3b 6e 88 65) =3D 0
FNV64_1(e5 69 ec d2 79 be d8 aa 8e) =3D 0
FNV64_1(ac 26 0a dd fb 68 43 1f 6d) =3D 0
FNV64_1(3c 96 c1 be 3a be 22 ae 76) =3D 0
FNV64_1(de 73 09 f1 1c 39 67 8a 0c) =3D 0
FNV64_1(56 2e 5f 2c 3a fd 30 40 7d) =3D 0
FNV64_1(68 57 ce 1c 59 e0 e0 eb 04) =3D 0
FNV64_1(df f7 e6 75 1c 66 88 86 90) =3D 0
FNV64_1(fd af f5 8b 5a 06 ae 0b 40) =3D 0
FNV64_1(4e cf a7 e9 1c 93 af 36 a8) =3D 0
FNV64_1(56 dc 13 cf fc 12 88 bb b8) =3D 0
FNV64_1(1f 5f c2 b2 3b 75 fb 7c 92) =3D 0
FNV64_1(4e 9c bb ba 5a 74 e3 a4 e1) =3D 0
FNV64_1(0b a0 c8 c5 1d 99 06 87 5e) =3D 0
FNV64_1(ff ef b0 25 1d f4 9d df db) =3D 0
FNV64_1(09 67 cb 8f 7c 13 3c 75 97) =3D 0
FNV64_1(05 bf fe 4d fd d2 6e 61 64) =3D 0
FNV64_1(a4 d7 4b 6d 3d 2a bb ee 4c) =3D 0
FNV64_1(b9 8c 01 cb 5b f2 50 15 f0) =3D 0
FNV64_1(31 45 17 91 1e a3 7f 25 52) =3D 0
FNV64_1(10 6c 0c 98 db 0f 9b 1e 88) =3D 0
FNV64_1(06 ec cc b6 9b da a2 3a 16) =3D 0
FNV64_1(23 66 38 19 7c ac 80 d3 78) =3D 0
FNV64_1(b8 f3 d7 98 bc 11 60 0f bf) =3D 0
FNV64_1(27 24 2d a8 db c2 99 28 65) =3D 0
FNV64_1(64 61 39 c2 bc 79 b5 b1 a6) =3D 0
FNV64_1(df ff 2a 12 5c fb 42 6d 01) =3D 0
FNV64_1(af 1d ea 4e ff 0d 46 95 5e) =3D 0
FNV64_1(2a b0 c6 54 9c e9 98 43 e1) =3D 0
FNV64_1(7c e5 9e 74 7d c8 44 ef 9e) =3D 0
FNV64_1(56 14 d1 31 dc ce 77 17 c3) =3D 0
FNV64_1(ed 6b 65 68 3f 05 36 41 9b) =3D 0
FNV64_1(2f d2 24 7e dd 19 4f 91 72) =3D 0
FNV64_1(c8 96 f0 54 9d 92 5b cc b1) =3D 0
FNV64_1(47 5d 76 63 be 17 24 ad d4) =3D 0
FNV64_1(4f 88 0b 03 9e 4a 48 ee 14) =3D 0
FNV64_1(26 ec 1b 56 5e b8 5d 5e 39) =3D 0
FNV64_1(c3 a8 2d 1a 5e fc b7 81 49) =3D 0
FNV64_1(14 3a 3b 0b be e7 b2 4d 75) =3D 0
FNV64_1(27 a0 f4 22 df b5 b6 5e 4a) =3D 0
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 3 -->
</p></li><li> <i>Partial solution:</i> What is the shortest binary data set=
 for which the 128-bit FNV-1 hash is 0?
<p>
</p><blockquote>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
found a 128-bit FNV-1 solution on 2011-Dec-01:
<blockquote><pre><tt>The following is a solution of length 17:

FNV128_1(20 28 4e 43 40 55 6f 99 25 1b 89 f4 a8 18 ec 76 c0) =3D 0
</tt></pre></blockquote>

NOTE: It is not known if the above solution is the shortest 128-bit FNV-1
solution.
<p>
Can you find a shorter solution or prove that the shortest solutions are
of length 17?
</p></blockquote>
<p>

<!-- FNV challenge 4 -->
</p></li><li> <i>Partial solution:</i> What is the shortest binary data set=
 for which the 256-bit FNV-1 hash is 0?
<p>
</p><blockquote>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
found a 256-bit FNV-1 solution on 2011-Dec-17:
<blockquote><pre><tt>The following is a solution of length 37:

FNV256_1(04 03 F4 7D 37 15 6D DB 3B 06 68 6F 07 0E 0E 3B 67 6E 43 53 0B<br>
5F 5A 08 93 09 16 29 47 D9 4C 1B BD 7E 04 17 38) =3D 0
</tt></pre></blockquote>

NOTE: It is not known if the above solution is the shortest 256-bit FNV-1
solution.
<p>
Richard Heylen speculates that the shortest solution might
be 32 or 33 in length.
</p><p>
Can you find a shorter solution or prove that the shortest solutions are
of length 37?
</p></blockquote>
<p>

<!-- FNV challenge 5 -->
</p></li><li> What is the shortest binary data set for which the 512-bit FN=
V-1 hash is 0?
<p>

<!-- FNV challenge 6 -->
</p></li><li> What is the shortest binary data set for which the 1024-bit F=
NV-1 hash is 0?
<p>

<!-- FNV challenge 7 -->
</p></li><li> <b>SOLVED!</b> What is the shortest binary data set for which=
 the 32-bit FNV-1a hash is 0?
<blockquote>
32-bit solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>The solutions of length 4 are:

FNV32_1a(cc 24 31 c4) =3D 0
FNV32_1a(e0 4d 9f cb) =3D 0
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 8 -->
</p></li><li> <b>SOLVED!</b> What is the shortest binary data set for which=
 the 64-bit FNV-1a hash is 0?
<blockquote>Scott Pakin
&lt;<img src=3D"http://www.isthe.com/chongo/png/pakin_at_lanl.gov.png" alt=
=3D"pakin Email address" width=3D"129" height=3D"18">&gt;
on 2011-Aug-22 reported that there are
no solutions for binary data sets of length 7 or smaller.
<p>
64-bit solution by an anonymous scientist
&lt;<img src=3D"http://www.isthe.com/chongo/png/ntldr_at_diskcryptor.net.pn=
g" alt=3D"ntldr Email address" width=3D"176" height=3D"18">&gt;
on 2011-Oct-23:
</p><blockquote><pre><tt>The only solution for length 8 is:

FNV64_1a(d5 6b b9 53 42 87 08 36) =3D 0
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 9 -->
</p></li><li> What is the shortest binary data set for which the 128-bit FN=
V-1a hash is 0?
<p>

<!-- FNV challenge 10 -->
</p></li><li> What is the shortest binary data set for which the 256-bit FN=
V-1a hash is 0?
<p>

<!-- FNV challenge 11 -->
</p></li><li> What is the shortest binary data set for which the 512-bit FN=
V-1a hash is 0?
<p>

<!-- FNV challenge 12 -->
</p></li><li> What is the shortest binary data set for which the 1024-bit F=
NV-1a hash is 0?
<p>
NOTE: By <i>binary data set</i> we mean any arbitrary collection of bits th=
at
is a multple of 8 bits (1 octet) in length.
</p><p>

<!-- FNV challenge 13 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 32-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 14 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 64-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 15 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 128-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 16 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 256-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 17 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 512-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 18 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 1024-bit FNV-1 hash is 0?
<p>
NOTE: Russ Cox's solution below is for the set of 6 challenges immediately =
above

</p><blockquote>
General FNV solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>There is no such stream of NUL octets.

Xor with an odd byte flips the parity of the hash.
Xor with an even byte leaves it alone, as does multiplying
by any of the (odd) FNV primes. Thus the final hash has
the same parity as the initial offset if and only if there
are an even number of odd bytes in the input. This is
the reason that all the offset bases have the same parity
(odd, it turns out), and it implies that any consecutive
stream of NULs will have an odd (non-zero) hash.
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 19 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 32-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 20 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 64-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 21 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 128-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 22 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 256-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 23 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 512-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 24 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive NUL oc=
tets for which the 1024-bit FNV-1a hash is 0?
<p>
NOTE: Russ Cox's solution below is for the set of 6 challenges immediately =
above

</p><blockquote>
General FNV solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>There is no such stream of NUL octets.

Xor with an odd byte flips the parity of the hash.
Xor with an even byte leaves it alone, as does multiplying
by any of the (odd) FNV primes. Thus the final hash has
the same parity as the initial offset if and only if there
are an even number of odd bytes in the input. This is
the reason that all the offset bases have the same parity
(odd, it turns out), and it implies that any consecutive
stream of NULs will have an odd (non-zero) hash.
</tt></pre></blockquote>
</blockquote>
<p>
NOTE: By <i>set of consecutive NUL octets</i> we mean consecutive octets of=
 0 value.
</p><p>

<!-- FNV challenge 25 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive 0xff o=
ctets for which the 32-bit FNV-1 hash is 0?
<blockquote>
32-bit solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>428876705 0xff octets.</tt></pre></blockquote>
</blockquote>
<p>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
independently confirmed this result.
</p><p>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
independently confirmed this result.
</p><p>

<!-- FNV challenge 26 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive 0xff o=
ctets for which the 64-bit FNV-1 hash is 0?
<blockquote>
64-bit solution by
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
on 2011-Dec-13:
<blockquote><pre><tt>9896220416391497057 0xff octets.</tt></pre></blockquot=
e>
</blockquote>
<p>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
independently confirmed this result.
</p><p>

<!-- FNV challenge 27 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive 0xff o=
ctets for which the 128-bit FNV-1 hash is 0?
<blockquote>
128-bit solution by
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
on 2011-Dec-14:
<blockquote><pre><tt>152812075112152085146780705563019820097 0xff octets.</=
tt></pre></blockquote>
</blockquote>
<p>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
independently confirmed this result.
</p><p>

<!-- FNV challenge 28 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive 0xff o=
ctets for which the 256-bit FNV-1 hash is 0?
<blockquote>
256-bit solution by
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
on 2011-Dec-14:
<blockquote><pre><tt>971310111339922874984865931636119693708047768520568964=
839262806324177446<br>
08641 0xff octets.</tt></pre></blockquote>
</blockquote>
<p>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
independently confirmed this result.
</p><p>

<!-- FNV challenge 29 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive 0xff o=
ctets for which the 512-bit FNV-1 hash is 0?
<blockquote>
512-bit solution by
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
on 2011-Dec-14:
<blockquote><pre><tt>612806956068056576215461080927099484400241024395026354=
420378459322301684<br>
399722907408508285157251830003265846176457230616192353760639874361657361<br=
>
1559921729 0xff octets.</tt></pre></blockquote>
</blockquote>
<p>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
independently confirmed this result.
</p><p>

<!-- FNV challenge 30 -->
</p></li><li> <i>Partial solution:</i> What is the shortest set of consecut=
ive 0xff octets for which the 1024-bit FNV-1 hash is 0?
<blockquote>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
on 2011-Dec-14 found a
1024-bit solution, one that may not be the shortest:
<blockquote><pre><tt>416676424643376760772449487657397580462250574503060952=
762179226758571093<br>
761689059455392577969506880247688215845019822014535567311051405867916840<br=
>
497646798425786609620276239990874926250263846724497488057368971095038212<br=
>
934393820920453733216924021449681744199270750560657371464991242494173425<br=
>
0024772314731200245 0xff octets.</tt></pre></blockquote>
</blockquote>
<p>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
independently confirmed this partial solution.
</p><p>
NOTE: Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
also observed that as a consequence of his solution to the
consecutive NUL octet challences, any consecutive stream
of 0xff with a zero FNV-1 or FNV-1a hash of any size must be of odd length.
</p><p>

<!-- FNV challenge 31 -->
</p></li><li> <b>SOLVED!</b> What is the shortest set of consecutive 0xff o=
ctets for which the 32-bit FNV-1a hash is 0?
<blockquote>
32-bit solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>3039744951 0xff octets.</tt></pre></blockquote>
</blockquote>
<p>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
independently confirmed this result.
</p><p>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
independently confirmed this result.
</p><p>

<!-- FNV challenge 32 -->
</p></li><li> <i>Partial solution:</i> What is the shortest set of consecut=
ive 0xff octets for which the 64-bit FNV-1a hash is 0?
<blockquote>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
on 2011-Dec-13 found a
64-bit solution that may not be the shortest:
<blockquote><pre><tt>5125902172520635575 0xff octets.</tt></pre></blockquot=
e>
</blockquote>
<p>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
independently confirmed this partial solution.
</p><p>

<!-- FNV challenge 33 -->
</p></li><li> <i>Partial solution:</i> What is the shortest set of consecut=
ive 0xff octets for which the 128-bit FNV-1a hash is 0?
<blockquote>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
on 2012-Mar-22 found a
128-bit solution that may not be the shortest:
<blockquote><pre><tt>195988526173479582814801599910495893127 0xff octets.</=
tt></pre></blockquote>
</blockquote>
<p>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
independently confirmed this partial solution.
</p><p>

<!-- FNV challenge 34 -->
</p></li><li> <i>Partial solution:</i> What is the shortest set of consecut=
ive 0xff octets for which the 256-bit FNV-1a hash is 0?
<blockquote>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
on 2012-Mar-22 found a
256-bit solution that may not be the shortest:
<blockquote><pre><tt>121365261308607922778298441917362349745681574069429011=
964286973126957522<br>
07543 0xff octets.</tt></pre></blockquote>
</blockquote>
<p>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
independently confirmed this partial solution.
</p><p>

<!-- FNV challenge 35 -->
</p></li><li> <i>Partial solution:</i> What is the shortest set of consecut=
ive 0xff octets for which the 512-bit FNV-1a hash is 0?
<blockquote>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
on 2012-Mar-22 found a
512-bit solution that may not be the shortest:
<blockquote><pre><tt>445359075217293949446034810045247904893303946817563293=
272717969680141569<br>
129699002471949546033702514868111823565737421304575683326671821385410536<br=
>
5691076111 0xff octets.</tt></pre></blockquote>
</blockquote>
<p>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
independently confirmed this partial solution.
</p><p>

<!-- FNV challenge 36 -->
</p></li><li> <i>Partial solution:</i> What is the shortest set of consecut=
ive 0xff octets for which the 1024-bit FNV-1a hash is 0?
<blockquote>
Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
on 2012-Mar-22 found a
1024-bit solution that may not be the shortest:
<blockquote><pre><tt>712131032390661212423469446429778580303529367161714287=
727915539272088837<br>
388997682828851224650621762650604398414532544740385461220466517818153731<br=
>
651665570936392160298954932547331005615954561744064764751259871084045735<br=
>
302812555692177957250787849447135140298017119914349292668850620197682629<br=
>
52245579219890855775 0xff octets.</tt></pre></blockquote>
</blockquote>
<p>
Richard Heylen
&lt;<img src=3D"http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo=
.co.uk.png" alt=3D"richard_in_reading Email address" width=3D"270" height=
=3D"18">&gt;
independently confirmed this partial solution.
</p><p>
NOTE: Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
observed that as a consequence of his solution to the
consecutive NUL octet challences, any consecutive stream
of 0xff with a zero FNV-1 or FNV-1a hash of any size must be of odd length.
</p><p>
NOTE: By <i>set of consecutive 0xff octets</i> we mean consecutive octets o=
f 0xff value.
</p><p>

<!-- FNV challenge 37 -->
</p></li><li> <b>SOLVED!</b> What is the shortest non-NUL ASCII string for =
which the 32-bit FNV-1 hash is 0?
<blockquote>
32-bit solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>The solutions of length 5 are:

FNV32_1(07 65 76 4a 3b) =3D 0 &nbsp;&nbsp; \a e v J ;
FNV32_1(27 0f 56 47 0a) =3D 0 &nbsp;&nbsp; ' ^O V G \n
FNV32_1(30 17 22 62 62) =3D 0 &nbsp;&nbsp; 0 ^W " b b
FNV32_1(30 33 53 42 5b) =3D 0 &nbsp;&nbsp; 0 3 S B [
FNV32_1(54 20 75 7b 5b) =3D 0 &nbsp;&nbsp; T space u { [
FNV32_1(62 61 2c 31 71) =3D 0 &nbsp;&nbsp; b a , 1 q
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 38 -->
</p></li><li> <b>SOLVED!</b> What is the shortest non-NUL ASCII string for =
which the 64-bit FNV-1 hash is 0?
<blockquote>
64-bit solution by Peter de Rivaz
&lt;<img src=3D"http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.=
png" alt=3D"peter.derivaz Email address" width=3D"206" height=3D"18">&gt;
on 2011-Mar-11:
<blockquote><pre><tt>The shortest solution is of length 10:

FNV64_1(10 17 34 7c 28 61 38 72 64 4d) =3D 0 &nbsp;&nbsp; ^P ^H 4 ! ( a 8 r=
 d M

While there are other solutions of length 10, there are no solutions shorte=
r
than length 10.
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 39 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 128-b=
it FNV-1 hash is 0?
<p>

<!-- FNV challenge 40 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 256-b=
it FNV-1 hash is 0?
<p>

<!-- FNV challenge 41 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 512-b=
it FNV-1 hash is 0?
<p>

<!-- FNV challenge 42 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 1024-=
bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 43 -->
</p></li><li> <b>SOLVED!</b> What is the shortest non-NUL ASCII string for =
which the 32-bit FNV-1a hash is 0?
<blockquote>
32-bit solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>The solutions of length 5 are:

FNV32_1a(12 3b 5b 23 20) =3D 0 &nbsp;&nbsp; ^R ; [ # space
FNV32_1a(2b 21 3d 79 47) =3D 0 &nbsp;&nbsp; + ! =3D y G
FNV32_1a(2f 06 3c 37 71) =3D 0 &nbsp;&nbsp; / ^F &lt; 7 q
FNV32_1a(36 38 6d 2a 20) =3D 0 &nbsp;&nbsp; 6 8 m * space
FNV32_1a(40 24 1b 38 42) =3D 0 &nbsp;&nbsp; @ $ Esc 8 B
FNV32_1a(4c 39 59 56 11) =3D 0 &nbsp;&nbsp; L 9 Y V ^Q
FNV32_1a(59 08 26 60 62) =3D 0 &nbsp;&nbsp; Y \b &amp; ` b
FNV32_1a(60 4a 63 6f 11) =3D 0 &nbsp;&nbsp; ` J c o ^Q
FNV32_1a(65 53 4e 2e 31) =3D 0 &nbsp;&nbsp; e S N . 1
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 44 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 64-bi=
t FNV-1a hash is 0?
<p>

<!-- FNV challenge 45 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 128-b=
it FNV-1a hash is 0?
<p>

<!-- FNV challenge 46 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 256-b=
it FNV-1a hash is 0?
<p>

<!-- FNV challenge 47 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 512-b=
it FNV-1a hash is 0?
<p>

<!-- FNV challenge 48 -->
</p></li><li> What is the shortest non-NUL ASCII string for which the 1024-=
bit FNV-1a hash is 0?
<p>
NOTE: By <i>non-NUL ASCII string</i> we mean any arbitrary collection of
non-NUL ASCII 8-bit characters in the range: [0x01 - 0x7f].
Obviously the C-style terminating NUL octet is not included.
</p><p>

<!-- FNV challenge 49 -->
</p></li><li> <b>SOLVED!</b> What is the shortest printable ASCII string fo=
r which the 32-bit FNV-1 hash is 0?
<blockquote>
32-bit hash solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>The solutions of length 5 are:

FNV32_1(30 33 53 42 5b) =3D 0 &nbsp;&nbsp; 0 3 S B [
FNV32_1(54 20 75 7b 5b) =3D 0 &nbsp;&nbsp; T Space u { [
FNV32_1(62 61 2c 31 71) =3D 0 &nbsp;&nbsp; b a , 1 q
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 50 -->
</p></li><li> What is the shortest printable ASCII string for which the 64-=
bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 51 -->
</p></li><li> What is the shortest printable ASCII string for which the 128=
-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 52 -->
</p></li><li> What is the shortest printable ASCII string for which the 256=
-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 53 -->
</p></li><li> What is the shortest printable ASCII string for which the 512=
-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 54 -->
</p></li><li> What is the shortest printable ASCII string for which the 102=
4-bit FNV-1 hash is 0?
<p>
</p><p>

<!-- FNV challenge 55 -->
</p></li><li> <b>SOLVED!</b> What is the shortest printable ASCII string fo=
r which the 32-bit FNV-1a hash is 0?
<blockquote>
32-bit hash solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>The solutions of length 5 are:

FNV32_1a(2b 21 3d 79 47) =3D 0 &nbsp;&nbsp; + ! =3D y G
FNV32_1a(36 38 6d 2a 20) =3D 0 &nbsp;&nbsp; 6 8 m * Space
FNV32_1a(65 53 4e 2e 31) =3D 0 &nbsp;&nbsp; e S N . 1
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 56 -->
</p></li><li> What is the shortest printable ASCII string for which the 64-=
bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 57 -->
</p></li><li> What is the shortest printable ASCII string for which the 128=
-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 58 -->
</p></li><li> What is the shortest printable ASCII string for which the 256=
-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 59 -->
</p></li><li> What is the shortest printable ASCII string for which the 512=
-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 60 -->
</p></li><li> What is the shortest printable ASCII string for which the 102=
4-bit FNV-1a hash is 0?
<p>
NOTE: By <i>printable ASCII string</i> we mean any arbitrary collection of
printable ASCII 8-bit characters in the range: [0x20 - 0x7e].
Obviously the C-style terminating NUL octet is not included.
</p><p>

<!-- FNV challenge 61 -->
</p></li><li> <b>SOLVED!</b> What is the shortest alphanumeric ASCII string=
 for which the 32-bit FNV-1 hash is 0?
<blockquote>
32-bit hash solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>The solutions of length 6 are:


FNV32_1(33 64 37 41 35 4b) =3D 0 &nbsp;&nbsp; 3 d 7 A 5 K
FNV32_1(39 71 36 4d 71 33) =3D 0 &nbsp;&nbsp; 9 q 6 M q 3
FNV32_1(48 48 59 53 4c 45) =3D 0 &nbsp;&nbsp; H H Y S L E
FNV32_1(54 72 4c 64 5a 31) =3D 0 &nbsp;&nbsp; T r L d Z 1
FNV32_1(56 4c 33 42 71 43) =3D 0 &nbsp;&nbsp; V L 3 B q C
FNV32_1(57 41 64 32 60 57) =3D 0 &nbsp;&nbsp; W A d 2 ` W
FNV32_1(59 55 6f 31 39 6c) =3D 0 &nbsp;&nbsp; Y U o 1 9 l
FNV32_1(59 66 36 68 50 36) =3D 0 &nbsp;&nbsp; Y f 6 h P 6
FNV32_1(68 49 72 6a 46 6a) =3D 0 &nbsp;&nbsp; h I r j F j
FNV32_1(6e 60 62 76 33 52) =3D 0 &nbsp;&nbsp; n ` b v 3 R
FNV32_1(70 6c 49 7a 6c 60) =3D 0 &nbsp;&nbsp; p l I z l `
FNV32_1(75 4d 6b 60 39 51) =3D 0 &nbsp;&nbsp; u M k ` 9 Q
FNV32_1(79 73 6f 70 48 6c) =3D 0 &nbsp;&nbsp; y s o p H l
FNV32_1(7a 63 49 6b 43 65) =3D 0 &nbsp;&nbsp; z c I k C e
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 62 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
64-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 63 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
128-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 64 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
256-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 65 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
512-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 66 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
1024-bit FNV-1 hash is 0?
<p>

<!-- FNV challenge 67 -->
</p></li><li> <b>SOLVED!</b> What is the shortest alphanumeric ASCII string=
 for which the 32-bit FNV-1a hash is 0?
<blockquote>
32-bit hash solution by Russ Cox
&lt;<img src=3D"http://www.isthe.com/chongo/png/rsc_at_swtch.com.png" alt=
=3D"rcs Email address" width=3D"129" height=3D"14">&gt;
on 2011-Mar-02:
<blockquote><pre><tt>The solutions of length 6 are:

FNV32_1a(33 70 6a 4e 71 4d) =3D 0 &nbsp;&nbsp; 3 p j N q M
FNV32_1a(35 52 30 4c 67 37) =3D 0 &nbsp;&nbsp; 5 R 0 L g 7
FNV32_1a(37 6f 45 34 38 36) =3D 0 &nbsp;&nbsp; 7 o E 4 8 6
FNV32_1a(42 52 34 32 71 66) =3D 0 &nbsp;&nbsp; B R 4 2 q f
FNV32_1a(46 6f 75 42 53 72) =3D 0 &nbsp;&nbsp; F o u B S r
FNV32_1a(47 6b 6b 7a 46 44) =3D 0 &nbsp;&nbsp; G k k z F D
FNV32_1a(48 56 47 5a 71 39) =3D 0 &nbsp;&nbsp; H V G Z q 9
FNV32_1a(49 77 50 53 64 54) =3D 0 &nbsp;&nbsp; I w P S d T
FNV32_1a(60 6e 72 59 33 47) =3D 0 &nbsp;&nbsp; ` n r Y 3 G
FNV32_1a(71 7a 73 30 55 44) =3D 0 &nbsp;&nbsp; q z s 0 U D
FNV32_1a(73 58 62 73 73 72) =3D 0 &nbsp;&nbsp; s X b s s r
FNV32_1a(75 68 34 74 53 49) =3D 0 &nbsp;&nbsp; u h 4 t S I
</tt></pre></blockquote>
</blockquote>
<p>

<!-- FNV challenge 68 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
64-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 69 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
128-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 70 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
256-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 71 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
512-bit FNV-1a hash is 0?
<p>

<!-- FNV challenge 72 -->
</p></li><li> What is the shortest alphanumeric ASCII string for which the =
1024-bit FNV-1a hash is 0?
<p>
NOTE: By <i>alphanumeric ASCII string</i> we mean any arbitrary collection =
of
alphanumeric ASCII 8-bit characters in the range: [0x30 - 0x39, 0x41 - 0x5a=
, 0x60 - 0x7a]
Obviously the C-style terminating NUL octet is not included.

</p></li></ol>

<!-- Stop web content -->

<!-- Start Content-Below.html -->
</td>
<!-- Stop Content-Below.html -->

<!-- Start MainTable-Bottom.html -->
</tr>
</tbody></table>

<br>
<!-- Stop MainTable-Bottom.html -->

<!-- Start google/728x15Link-FNV.html -->


<ins style=3D"display:inline-table;border:none;height:15px;margin:0;padding=
:0;position:relative;visibility:visible;width:728px"><ins id=3D"aswift_2_an=
chor" style=3D"display:block;border:none;height:15px;margin:0;padding:0;pos=
ition:relative;visibility:visible;width:728px"><iframe width=3D"728" height=
=3D"15" frameborder=3D"0" marginwidth=3D"0" marginheight=3D"0" vspace=3D"0"=
 hspace=3D"0" allowtransparency=3D"true" scrolling=3D"no" onload=3D"var i=
=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&amp;&amp;s.handlers,h=3DH&=
amp;&amp;H[i],w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&am=
p;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)=
}else if(h.match){w.location.replace(h)}}" id=3D"aswift_2" name=3D"aswift_2=
" style=3D"left:0;position:absolute;top:0;"></iframe></ins></ins>

<!-- Stop google/728x15Link-FNV.html -->

<!-- Start AdTrailer-Above.html -->
<br>

<table border=3D"1">

<tbody><tr>
<!-- Stop AdTrailer-Above.html -->

<!-- Start Ad-BL-Above.html -->
<td>
<!-- Stop Ad-BL-Above.html -->
<!-- Start google/336x280-FNV.html -->


<ins style=3D"display:inline-table;border:none;height:280px;margin:0;paddin=
g:0;position:relative;visibility:visible;width:336px"><ins id=3D"aswift_3_a=
nchor" style=3D"display:block;border:none;height:280px;margin:0;padding:0;p=
osition:relative;visibility:visible;width:336px"><iframe width=3D"336" heig=
ht=3D"280" frameborder=3D"0" marginwidth=3D"0" marginheight=3D"0" vspace=3D=
"0" hspace=3D"0" allowtransparency=3D"true" scrolling=3D"no" onload=3D"var =
i=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&amp;&amp;s.handlers,h=3DH=
&amp;&amp;H[i],w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&a=
mp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0=
)}else if(h.match){w.location.replace(h)}}" id=3D"aswift_3" name=3D"aswift_=
3" style=3D"left:0;position:absolute;top:0;"></iframe></ins></ins>

<!-- Stop google/336x280-FNV.html -->

<!-- Start Ad-BL-Below.html -->
</td>
<!-- Stop Ad-BL-Below.html -->

<!-- Start Ad-BC-Above.html -->
<td>
<!-- Stop Ad-BC-Above.html -->
<!-- Start google/336x280-FNV.html -->


<ins style=3D"display:inline-table;border:none;height:280px;margin:0;paddin=
g:0;position:relative;visibility:visible;width:336px"><ins id=3D"aswift_4_a=
nchor" style=3D"display:block;border:none;height:280px;margin:0;padding:0;p=
osition:relative;visibility:visible;width:336px"><iframe width=3D"336" heig=
ht=3D"280" frameborder=3D"0" marginwidth=3D"0" marginheight=3D"0" vspace=3D=
"0" hspace=3D"0" allowtransparency=3D"true" scrolling=3D"no" onload=3D"var =
i=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&amp;&amp;s.handlers,h=3DH=
&amp;&amp;H[i],w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&a=
mp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0=
)}else if(h.match){w.location.replace(h)}}" id=3D"aswift_4" name=3D"aswift_=
4" style=3D"left:0;position:absolute;top:0;"></iframe></ins></ins>

<!-- Stop google/336x280-FNV.html -->

<!-- Start Ad-BC-Below.html -->
</td>
<!-- Stop Ad-BC-Below.html -->

<!-- Start AdTrailer-Below.html -->
</tr>
</tbody></table>
<!-- Stop AdTrailer-Below.html -->

<!-- Start Footer-Above.html -->
<table cellpadding=3D"5">

<tbody><tr>
<!-- Stop Footer-Above.html -->

<!-- Start WWW-validator.html -->
<td>

<!-- Start HTML-4.01-Transitional.html -->
<p>
<a href=3D"http://validator.w3.org/check/referer"><img border=3D"0" src=3D"=
http://www.isthe.com/chongo/png/valid-html401.png" alt=3D"Valid HTML 4.01!"=
 height=3D"31" width=3D"88"></a>
</p>
<!-- Stop HTML-4.01-Transitional.html -->

</td>
<!-- Stop WWW-validator.html -->

<!-- Start Footer-Author-Above.html -->
<td>
<a href=3D"http://www.isthe.com/copyright.html">=C2=A9 1994-2012</a>
<i>Landon Curt Noll</i><br>
<a href=3D"http://www.isthe.com/chongo/index.html">chongo</a> (was here)
<a href=3D"http://www.isthe.com/chongo/odd/bat.html"><b>/\oo/\</b></a><br>
<!-- Stop Footer-Author-Above.html -->
$Revision: 7.7 $ $Date: 2012/05/14 08:52:26 $

<!-- Start Footer-Author-Below.html -->
</td>
<!-- Stop Footer-Author-Below.html -->

<!-- Start Footer-Below.html -->
</tr>
</tbody></table>
<!-- Stop Footer-Below.html -->

<!-- Start HTML-Below.html -->


<!-- Stop HTML-Below.html -->
</body></html>
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.google.com/cse/api/branding.css

.cse-branding-bottom, .cse-branding-right { margin-top: 0px; margin-right: =
0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right:=
 0px; padding-bottom: 0px; padding-left: 0px; }

.cse-branding-bottom, .cse-branding-right { zoom: 1; }

.cse-branding-bottom::after, .cse-branding-right::after { content: '.'; dis=
play: block; height: 0px; clear: both; visibility: hidden; }

.cse-branding-text { font-family: Arial; font-size: 10px; font-style: norma=
l; font-variant: normal; font-weight: normal; line-height: normal; }

.cse-branding-form form { margin-bottom: 0px; padding-bottom: 0px; }

.cse-branding-bottom .cse-branding-logo, .cse-branding-bottom .cse-branding=
-text { display: block; float: left; }

.cse-branding-bottom .cse-branding-form { margin-bottom: 3px; }

.cse-branding-bottom .cse-branding-logo { padding-top: 0px; padding-right: =
0px; padding-bottom: 0px; padding-left: 0px; }

.cse-branding-bottom .cse-branding-text { padding-top: 4px; }

.cse-branding-right .cse-branding-form { float: left; }

.cse-branding-right .cse-branding-logo, .cse-branding-right .cse-branding-t=
ext { margin-left: 4px; }

.cse-branding-right .cse-branding-form { float: left; margin-right: 4px; }

.cse-branding-right .cse-branding-logo { padding-top: 0px; padding-right: 0=
px; padding-bottom: 0px; padding-left: 0px; }

.cse-branding-right .cse-branding-text { margin-top: -4px; }
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/jpg/chongo-up.jpg

/9j/4AAQSkZJRgABAgEAtAC0AAD/4Q4hRXhpZgAASUkqAAgAAAALAA4BAgACAAAAIAAAAA8BAgAG
AAAAkgAAABABAgAXAAAAmAAAABIBAwABAAAAAQAAABoBBQABAAAArwAAABsBBQABAAAAtwAAACgB
AwABAAAAAgAAADEBAgAdAAAAvwAAADIBAgAUAAAA3AAAABMCAwABAAAAAQAAAGmHBAABAAAA8AAA
ANQDAABDYW5vbgBDYW5vbiBFT1MgRElHSVRBTCBSRUJFTLQAAAABAAAAtAAAAAEAAABBZG9iZSBQ
aG90b3Nob3AgQ1MgTWFjaW50b3NoADIwMDU6MDM6MjAgMTc6MzA6MDYAHQCaggUAAQAAAFICAACd
ggUAAQAAAFoCAAAniAMAAQAAAJABAAAAkAcABAAAADAyMjADkAIAFAAAAGICAAAEkAIAFAAAAHYC
AAABkQcABAAAAAECAwACkQUAAQAAAIoCAAABkgoAAQAAAJICAAACkgUAAQAAAJoCAAAEkgoAAQAA
AKICAAAFkgUAAQAAAKoCAAAHkgMAAQAAAAUAAAAJkgMAAQAAAAAAAAAKkgUAAQAAALICAACGkgcA
CAEAALoCAAAAoAcABAAAADAxMDABoAMAAQAAAP//AAACoAQAAQAAAJYAAAADoAQAAQAAAGoAAAAO
ogUAAQAAAMIDAAAPogUAAQAAAMoDAAAQogMAAQAAAAIAAAAXogMAAQAAAAIAAAAAowcAAQAAAAMA
AAABpAMAAQAAAAAAAAACpAMAAQAAAAAAAAADpAMAAQAAAAAAAAAGpAMAAQAAAAAAAAAAAAAAAQAA
ACgAAAAjAAAACgAAADIwMDU6MDI6MjYgMjI6NTI6MzYAMjAwNTowMjoyNiAyMjo1MjozNgAJAAAA
AQAAAMkUAADoAwAAHg4AAOgDAABlBAAAuAsAAAAAAADoAwAAcgYAAAoAAABBU0NJSQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
c2hvcCAzLjAAOEJJTQQEAAAAAAANHAIAAAIAAhwCeAABIAA4QklNBCUAAAAAABA+oD1/Ex73qBA5
2AtDwX7cOEJJTQPqAAAAAB2wPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4K
PCFET0NUWVBFIHBsaXN0IFBVQkxJQyAiLS8vQXBwbGUgQ29tcHV0ZXIvL0RURCBQTElTVCAxLjAv
L0VOIiAiaHR0cDovL3d3dy5hcHBsZS5jb20vRFREcy9Qcm9wZXJ0eUxpc3QtMS4wLmR0ZCI+Cjxw
bGlzdCB2ZXJzaW9uPSIxLjAiPgo8ZGljdD4KCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3Jt
YXQuUE1Ib3Jpem9udGFsUmVzPC9rZXk+Cgk8ZGljdD4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50
aWNrZXQuY3JlYXRvcjwva2V5PgoJCTxzdHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdlcjwv
c3RyaW5nPgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5pdGVtQXJyYXk8L2tleT4KCQk8
YXJyYXk+CgkJCTxkaWN0PgoJCQkJPGtleT5jb20uYXBwbGUucHJpbnQuUGFnZUZvcm1hdC5QTUhv
cml6b250YWxSZXM8L2tleT4KCQkJCTxyZWFsPjcyPC9yZWFsPgoJCQkJPGtleT5jb20uYXBwbGUu
cHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnRpbmdt
YW5hZ2VyPC9zdHJpbmc+CgkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQubW9kRGF0ZTwv
a2V5PgoJCQkJPGRhdGU+MjAwNS0wMi0yOFQxODowODoyN1o8L2RhdGU+CgkJCQk8a2V5PmNvbS5h
cHBsZS5wcmludC50aWNrZXQuc3RhdGVGbGFnPC9rZXk+CgkJCQk8aW50ZWdlcj4wPC9pbnRlZ2Vy
PgoJCQk8L2RpY3Q+CgkJPC9hcnJheT4KCTwvZGljdD4KCTxrZXk+Y29tLmFwcGxlLnByaW50LlBh
Z2VGb3JtYXQuUE1PcmllbnRhdGlvbjwva2V5PgoJPGRpY3Q+CgkJPGtleT5jb20uYXBwbGUucHJp
bnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21hbmFn
ZXI8L3N0cmluZz4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+
CgkJPGFycmF5PgoJCQk8ZGljdD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3JtYXQu
UE1PcmllbnRhdGlvbjwva2V5PgoJCQkJPGludGVnZXI+MTwvaW50ZWdlcj4KCQkJCTxrZXk+Y29t
LmFwcGxlLnByaW50LnRpY2tldC5jbGllbnQ8L2tleT4KCQkJCTxzdHJpbmc+Y29tLmFwcGxlLnBy
aW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0Lm1v
ZERhdGU8L2tleT4KCQkJCTxkYXRlPjIwMDUtMDItMjhUMTg6MDg6MjdaPC9kYXRlPgoJCQkJPGtl
eT5jb20uYXBwbGUucHJpbnQudGlja2V0LnN0YXRlRmxhZzwva2V5PgoJCQkJPGludGVnZXI+MDwv
aW50ZWdlcj4KCQkJPC9kaWN0PgoJCTwvYXJyYXk+Cgk8L2RpY3Q+Cgk8a2V5PmNvbS5hcHBsZS5w
cmludC5QYWdlRm9ybWF0LlBNU2NhbGluZzwva2V5PgoJPGRpY3Q+CgkJPGtleT5jb20uYXBwbGUu
cHJpbnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21h
bmFnZXI8L3N0cmluZz4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9r
ZXk+CgkJPGFycmF5PgoJCQk8ZGljdD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3Jt
YXQuUE1TY2FsaW5nPC9rZXk+CgkJCQk8cmVhbD4xPC9yZWFsPgoJCQkJPGtleT5jb20uYXBwbGUu
cHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnRpbmdt
YW5hZ2VyPC9zdHJpbmc+CgkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQubW9kRGF0ZTwv
a2V5PgoJCQkJPGRhdGU+MjAwNS0wMi0yOFQxODowODoyN1o8L2RhdGU+CgkJCQk8a2V5PmNvbS5h
cHBsZS5wcmludC50aWNrZXQuc3RhdGVGbGFnPC9rZXk+CgkJCQk8aW50ZWdlcj4wPC9pbnRlZ2Vy
PgoJCQk8L2RpY3Q+CgkJPC9hcnJheT4KCTwvZGljdD4KCTxrZXk+Y29tLmFwcGxlLnByaW50LlBh
Z2VGb3JtYXQuUE1WZXJ0aWNhbFJlczwva2V5PgoJPGRpY3Q+CgkJPGtleT5jb20uYXBwbGUucHJp
bnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21hbmFn
ZXI8L3N0cmluZz4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+
CgkJPGFycmF5PgoJCQk8ZGljdD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3JtYXQu
UE1WZXJ0aWNhbFJlczwva2V5PgoJCQkJPHJlYWw+NzI8L3JlYWw+CgkJCQk8a2V5PmNvbS5hcHBs
ZS5wcmludC50aWNrZXQuY2xpZW50PC9rZXk+CgkJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGlu
Z21hbmFnZXI8L3N0cmluZz4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5tb2REYXRl
PC9rZXk+CgkJCQk8ZGF0ZT4yMDA1LTAyLTI4VDE4OjA4OjI3WjwvZGF0ZT4KCQkJCTxrZXk+Y29t
LmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCTxpbnRlZ2VyPjA8L2ludGVn
ZXI+CgkJCTwvZGljdD4KCQk8L2FycmF5PgoJPC9kaWN0PgoJPGtleT5jb20uYXBwbGUucHJpbnQu
UGFnZUZvcm1hdC5QTVZlcnRpY2FsU2NhbGluZzwva2V5PgoJPGRpY3Q+CgkJPGtleT5jb20uYXBw
bGUucHJpbnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGlu
Z21hbmFnZXI8L3N0cmluZz4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5
PC9rZXk+CgkJPGFycmF5PgoJCQk8ZGljdD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VG
b3JtYXQuUE1WZXJ0aWNhbFNjYWxpbmc8L2tleT4KCQkJCTxyZWFsPjE8L3JlYWw+CgkJCQk8a2V5
PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY2xpZW50PC9rZXk+CgkJCQk8c3RyaW5nPmNvbS5hcHBs
ZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tl
dC5tb2REYXRlPC9rZXk+CgkJCQk8ZGF0ZT4yMDA1LTAyLTI4VDE4OjA4OjI3WjwvZGF0ZT4KCQkJ
CTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCTxpbnRlZ2Vy
PjA8L2ludGVnZXI+CgkJCTwvZGljdD4KCQk8L2FycmF5PgoJPC9kaWN0PgoJPGtleT5jb20uYXBw
bGUucHJpbnQuc3ViVGlja2V0LnBhcGVyX2luZm9fdGlja2V0PC9rZXk+Cgk8ZGljdD4KCQk8a2V5
PmNvbS5hcHBsZS5wcmludC5QYWdlRm9ybWF0LlBNQWRqdXN0ZWRQYWdlUmVjdDwva2V5PgoJCTxk
aWN0PgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCQk8c3Ry
aW5nPmNvbS5hcHBsZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4KCQkJPGtleT5jb20uYXBwbGUu
cHJpbnQudGlja2V0Lml0ZW1BcnJheTwva2V5PgoJCQk8YXJyYXk+CgkJCQk8ZGljdD4KCQkJCQk8
a2V5PmNvbS5hcHBsZS5wcmludC5QYWdlRm9ybWF0LlBNQWRqdXN0ZWRQYWdlUmVjdDwva2V5PgoJ
CQkJCTxhcnJheT4KCQkJCQkJPHJlYWw+MC4wPC9yZWFsPgoJCQkJCQk8cmVhbD4wLjA8L3JlYWw+
CgkJCQkJCTxyZWFsPjczNDwvcmVhbD4KCQkJCQkJPHJlYWw+NTc2PC9yZWFsPgoJCQkJCTwvYXJy
YXk+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJCTxz
dHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQkJCTxrZXk+Y29tLmFw
cGxlLnByaW50LnRpY2tldC5tb2REYXRlPC9rZXk+CgkJCQkJPGRhdGU+MjAwNS0wMy0yMVQwMToy
Njo1OVo8L2RhdGU+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LnN0YXRlRmxhZzwv
a2V5PgoJCQkJCTxpbnRlZ2VyPjA8L2ludGVnZXI+CgkJCQk8L2RpY3Q+CgkJCTwvYXJyYXk+CgkJ
PC9kaWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3JtYXQuUE1BZGp1c3RlZFBhcGVy
UmVjdDwva2V5PgoJCTxkaWN0PgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY3JlYXRv
cjwva2V5PgoJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4KCQkJ
PGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0Lml0ZW1BcnJheTwva2V5PgoJCQk8YXJyYXk+CgkJ
CQk8ZGljdD4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC5QYWdlRm9ybWF0LlBNQWRqdXN0ZWRQ
YXBlclJlY3Q8L2tleT4KCQkJCQk8YXJyYXk+CgkJCQkJCTxyZWFsPi0xODwvcmVhbD4KCQkJCQkJ
PHJlYWw+LTE4PC9yZWFsPgoJCQkJCQk8cmVhbD43NzQ8L3JlYWw+CgkJCQkJCTxyZWFsPjU5NDwv
cmVhbD4KCQkJCQk8L2FycmF5PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5jbGll
bnQ8L2tleT4KCQkJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4K
CQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQubW9kRGF0ZTwva2V5PgoJCQkJCTxkYXRl
PjIwMDUtMDMtMjFUMDE6MjY6NTlaPC9kYXRlPgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRp
Y2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCQk8aW50ZWdlcj4wPC9pbnRlZ2VyPgoJCQkJPC9kaWN0
PgoJCQk8L2FycmF5PgoJCTwvZGljdD4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC5QYXBlckluZm8u
UE1QYXBlck5hbWU8L2tleT4KCQk8ZGljdD4KCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0
LmNyZWF0b3I8L2tleT4KCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNjcmlwdDwv
c3RyaW5nPgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+CgkJ
CTxhcnJheT4KCQkJCTxkaWN0PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5mby5Q
TVBhcGVyTmFtZTwva2V5PgoJCQkJCTxzdHJpbmc+bmEtbGV0dGVyPC9zdHJpbmc+CgkJCQkJPGtl
eT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJCTxzdHJpbmc+Y29tLmFw
cGxlLnByaW50LnBtLlBvc3RTY3JpcHQ8L3N0cmluZz4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmlu
dC50aWNrZXQubW9kRGF0ZTwva2V5PgoJCQkJCTxkYXRlPjIwMDMtMDctMDFUMTc6NDk6MzZaPC9k
YXRlPgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJ
CQk8aW50ZWdlcj4xPC9pbnRlZ2VyPgoJCQkJPC9kaWN0PgoJCQk8L2FycmF5PgoJCTwvZGljdD4K
CQk8a2V5PmNvbS5hcHBsZS5wcmludC5QYXBlckluZm8uUE1VbmFkanVzdGVkUGFnZVJlY3Q8L2tl
eT4KCQk8ZGljdD4KCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNyZWF0b3I8L2tleT4K
CQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNjcmlwdDwvc3RyaW5nPgoJCQk8a2V5
PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+CgkJCTxhcnJheT4KCQkJCTxk
aWN0PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5mby5QTVVuYWRqdXN0ZWRQYWdl
UmVjdDwva2V5PgoJCQkJCTxhcnJheT4KCQkJCQkJPHJlYWw+MC4wPC9yZWFsPgoJCQkJCQk8cmVh
bD4wLjA8L3JlYWw+CgkJCQkJCTxyZWFsPjczNDwvcmVhbD4KCQkJCQkJPHJlYWw+NTc2PC9yZWFs
PgoJCQkJCTwvYXJyYXk+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNsaWVudDwv
a2V5PgoJCQkJCTxzdHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQkJ
CTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5tb2REYXRlPC9rZXk+CgkJCQkJPGRhdGU+MjAw
NS0wMi0yOFQxODowODoyN1o8L2RhdGU+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0
LnN0YXRlRmxhZzwva2V5PgoJCQkJCTxpbnRlZ2VyPjA8L2ludGVnZXI+CgkJCQk8L2RpY3Q+CgkJ
CTwvYXJyYXk+CgkJPC9kaWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5mby5QTVVu
YWRqdXN0ZWRQYXBlclJlY3Q8L2tleT4KCQk8ZGljdD4KCQkJPGtleT5jb20uYXBwbGUucHJpbnQu
dGlja2V0LmNyZWF0b3I8L2tleT4KCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNj
cmlwdDwvc3RyaW5nPgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9r
ZXk+CgkJCTxhcnJheT4KCQkJCTxkaWN0PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVy
SW5mby5QTVVuYWRqdXN0ZWRQYXBlclJlY3Q8L2tleT4KCQkJCQk8YXJyYXk+CgkJCQkJCTxyZWFs
Pi0xODwvcmVhbD4KCQkJCQkJPHJlYWw+LTE4PC9yZWFsPgoJCQkJCQk8cmVhbD43NzQ8L3JlYWw+
CgkJCQkJCTxyZWFsPjU5NDwvcmVhbD4KCQkJCQk8L2FycmF5PgoJCQkJCTxrZXk+Y29tLmFwcGxl
LnByaW50LnRpY2tldC5jbGllbnQ8L2tleT4KCQkJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGlu
Z21hbmFnZXI8L3N0cmluZz4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQubW9kRGF0
ZTwva2V5PgoJCQkJCTxkYXRlPjIwMDUtMDItMjhUMTg6MDg6MjdaPC9kYXRlPgoJCQkJCTxrZXk+
Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCQk8aW50ZWdlcj4wPC9p
bnRlZ2VyPgoJCQkJPC9kaWN0PgoJCQk8L2FycmF5PgoJCTwvZGljdD4KCQk8a2V5PmNvbS5hcHBs
ZS5wcmludC5QYXBlckluZm8ucHBkLlBNUGFwZXJOYW1lPC9rZXk+CgkJPGRpY3Q+CgkJCTxrZXk+
Y29tLmFwcGxlLnByaW50LnRpY2tldC5jcmVhdG9yPC9rZXk+CgkJCTxzdHJpbmc+Y29tLmFwcGxl
LnByaW50LnBtLlBvc3RTY3JpcHQ8L3N0cmluZz4KCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlj
a2V0Lml0ZW1BcnJheTwva2V5PgoJCQk8YXJyYXk+CgkJCQk8ZGljdD4KCQkJCQk8a2V5PmNvbS5h
cHBsZS5wcmludC5QYXBlckluZm8ucHBkLlBNUGFwZXJOYW1lPC9rZXk+CgkJCQkJPHN0cmluZz5V
UyBMZXR0ZXI8L3N0cmluZz4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY2xpZW50
PC9rZXk+CgkJCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNjcmlwdDwvc3RyaW5n
PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5tb2REYXRlPC9rZXk+CgkJCQkJPGRh
dGU+MjAwMy0wNy0wMVQxNzo0OTozNlo8L2RhdGU+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQu
dGlja2V0LnN0YXRlRmxhZzwva2V5PgoJCQkJCTxpbnRlZ2VyPjE8L2ludGVnZXI+CgkJCQk8L2Rp
Y3Q+CgkJCTwvYXJyYXk+CgkJPC9kaWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5B
UElWZXJzaW9uPC9rZXk+CgkJPHN0cmluZz4wMC4yMDwvc3RyaW5nPgoJCTxrZXk+Y29tLmFwcGxl
LnByaW50LnRpY2tldC5wcml2YXRlTG9jazwva2V5PgoJCTxmYWxzZS8+CgkJPGtleT5jb20uYXBw
bGUucHJpbnQudGlja2V0LnR5cGU8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludC5QYXBl
ckluZm9UaWNrZXQ8L3N0cmluZz4KCTwvZGljdD4KCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tl
dC5BUElWZXJzaW9uPC9rZXk+Cgk8c3RyaW5nPjAwLjIwPC9zdHJpbmc+Cgk8a2V5PmNvbS5hcHBs
ZS5wcmludC50aWNrZXQucHJpdmF0ZUxvY2s8L2tleT4KCTxmYWxzZS8+Cgk8a2V5PmNvbS5hcHBs
ZS5wcmludC50aWNrZXQudHlwZTwva2V5PgoJPHN0cmluZz5jb20uYXBwbGUucHJpbnQuUGFnZUZv
cm1hdFRpY2tldDwvc3RyaW5nPgo8L2RpY3Q+CjwvcGxpc3Q+CjhCSU0D6QAAAAAAeAADAAAASABI
AAAAAALeAkD/7v/uAwYCUgNnBSgD/AACAAAASABIAAAAAALYAigAAQAAAGQAAAABAAMDAwAAAAF/
/wABAAEAAAAAAAAAAAAAAABoCAAZAZAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhC
SU0D7QAAAAAAEAC0AAAAAQACALQAAAABAAI4QklNBCYAAAAAAA4AAAAAAAAAAAAAP4AAADhCSU0E
DQAAAAAABAAAAB44QklNBBkAAAAAAAQAAAAeOEJJTQPzAAAAAAAJAAAAAAAAAAABADhCSU0ECgAA
AAAAAQAAOEJJTScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAASAAvZmYAAQBsZmYABgAAAAAA
AQAvZmYAAQChmZoABgAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAAQAtAAAABgAAAAAAAThC
SU0D+AAAAAAAcAAA/////////////////////////////wPoAAAAAP//////////////////////
//////8D6AAAAAD/////////////////////////////A+gAAAAA////////////////////////
/////wPoAAA4QklNBAgAAAAAABAAAAABAAACQAAAAkAAAAAAOEJJTQQeAAAAAAAEAAAAADhCSU0E
GgAAAAADRwAAAAYAAAAAAAAAAAAAAGoAAACWAAAACQBjAGgAbwBuAGcAbwAtAHUAcAAAAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAlgAAAGoAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAA
AAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09iamMAAAABAAAAAAAAUmN0
MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAAGoAAAAA
UmdodGxvbmcAAACWAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZQAAABIAAAAH
c2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAADEVTbGlj
ZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAAAAASW1n
IAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0
bG9uZwAAAAAAAAAAQnRvbWxvbmcAAABqAAAAAFJnaHRsb25nAAAAlgAAAAN1cmxURVhUAAAAAQAA
AAAAAG51bGxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAA
AAAOY2VsbFRleHRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWdu
ZW51bQAAAA9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VT
bGljZVZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0Nv
bG9yVHlwZQAAAABOb25lAAAACXRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAA
AAAAAAxib3R0b21PdXRzZXRsb25nAAAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAA
AAAADAAAAAE/8AAAAAAAADhCSU0EEQAAAAAAAQEAOEJJTQQUAAAAAAAEAAAAAThCSU0EDAAAAAAK
AwAAAAEAAACWAAAAagAAAcQAALsoAAAJ5wAYAAH/2P/gABBKRklGAAECAQBIAEgAAP/tAAxBZG9i
ZV9DTQAC/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEM
DAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQR
DAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAagCWAwEiAAIR
AQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAA
AAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIj
JBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU
5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAAhEDITES
BEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi
8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDAQACEQMR
AD8A6MNThqkApALCbbHaltU4T7UFMNqW1ThKElI9qbaiQmhJSItTbUUj7kJltdhOxwdHJCKmJaol
qMQoEIKRFqgWoxCiQilCWqBajEKBCSkJaoEIxCgQipDGqSnGqSSX/9DqgE4CcBSAWC21oShShPCS
mMJoU4TEJKYQoPcGiURxa0S7QDkqnnZNVdBc6WuJ9rY1+f7qIFqcnq/XG1fo2mJmPONFQ6N1LItz
62WO212Etaw6TCjR9X8rqd3r3O9LFBIY48v112NVjqP1bsxqBbivL7Gjk6n26+1SCUB6eq4Y5EWH
UyOomq5wkNrboXGNDPEEfTVim9lwG130hNbndz+5tauSvysjJqebYLRxZt9w/r/vbVdwPrBRg4Pp
em+x3O9zQB/ZmXJ3AOgWm3oWWNfI7jQhIhcwOuxkMvr4snc2ZH4rosPLrzKjYzQtO1ze4KjnClMy
FAhFIUSE1SFwQyEdwQyEkoo1SUo1SRS//9HrwE8JwE8LBba0J4TwkkpZRKmolJTT6leKMfedPcAs
SzJOaWYzAGiwl9jxyK//ACVit/WjIYzGZQ5231DJPf5LB6Vmlhstdt2kS1xOm1nt/wCq+ingHhJC
YAEi3rKw4BlbRDWANYBwAOyu4tbtTZGukeS5N31wxaCG7d892kz+IVyn61VWUeqJazgzyEzgkNSG
zpIUGXW+jBjbLsSay47n1j6JXG9SFm2G7vb+adV1zvrNhXFrLHwH6NMaHx9yzupU4l3voc1066c/
cnxlKJsoMYkVpbx7MixgH8nUj4rtfqrk+pU8d7Tvn+qGt1XH5VTBnEcNc2Cug+rhbjdQx63HaXNc
3QyHbvo/5qsZalC/q1qokPXlRIUyFEhVVI3BDcEUhQcElIo1SUo1SSS//9LsgnASCdYLbVCSdJJS
yiVIpikh5P65499l+I6pu5pD2meATHud/ZWXR0u1/TLHh2jw0NI8vp7Vt/XL1GDGtb9FosEfyjt2
oOO/0MSuhsSGjngKQzIgAO7LjhqD4PLO6Ja7cGteCT7XP7fALeH1fFH1efa51n2jQthxDdvg6v6L
lYyfUrxrMhh9XYJ2wA0ns395Y1v1t6kaG1XBpExYzT2g8oiWSe3QswhEOHZi57bmttJaxp9skxB1
li0cC+4MsqcZEEtPgRw5a1NrW0NbfSH0OEtnUhp1apGjAawmqsNnUR3+9GWaxRH2LRjrq8x1AWNz
iHQXaEaQNfJbnS6Lb8zEDQRsIJI7CZWVluZbnOLmhzmgbSuw+qNZd0wZFkF73Oa138lp/wBqknKs
ce9fmwGJuUul07ZUSFMqJCqoRkKDgiFQKKkcapJ+6SSn/9PswpKIUlhNpdJJJBSyZOmKSnF+s1TX
4tZsA9Jj5JP72mwf2lgvNjy8t1DRIb4ns1dF9aMW/K6Hk1Y4mwBrwPEMcHuj+yFyGJ1UYmQ19wiI
0PYlOEbGn2M2OWldmz9m6s7Fe7IbXSx2uwuLnAf1GLnbcK11zmNHqbjOmh08Ny7PN6xhWMgBpa7S
R4rIY/prS6w7SWcwfuanQlKN6LxIVq1682wtbiWtdXdW0BrXjlqanJMlnYqznZ3T7qwK4FzB7fEf
yVlssDGuucYa0En5I8N9KtQlpvswsotdlj0mbnWe35u9oC9C6ZgM6fgU4jNfSb7j4uPue7/OWH9V
OkXvrZ1PNb6Zs91NJHuj8yx37v8AJaunQySPy9mOcwQBHb5j5sSolTKiVGxoyFByIVByKkfdJP3S
SU//1OyLg0S4wBySs/J+sPTMclrrNzhyG6rhs76y9QyC6v1SG6yBos0Zj3QDr4rIGE9W0+jU/WjA
ucGt3STotOvLpsMNdqvL6so9jtLRIhXsbrubSA8HeCmyxHovoHq+jqNj2VsL3na1oklYXQfrPRnO
+z3n07gNJ0kLnPrd9ac9+c7AxopqxLA4EGTaR9Fxd/oXNP0EIYpSlw7d2OR4d2l9dfrD1e7NGNDs
Oih2+hrTtedNu+1zT9L/AIP8xUH3MzMau6fcQA7+sOZROsdT6f1LBYTvGWBIaW6NcPzN37rlhY+S
7FeZ/m3fSHZXfauAERUofitx5BGRv5ZN/cW6AkR5p2OJG2dFDc20b2GUmHVR02RSeukF4PcrpPq5
0ujNyiL276aQHuaeC6fY138lc9QdV3P1SrYzBfaSA+5/z2tEKHISmVCJdxMnTKFhYpipFRKSmDkN
ym5Dckpj3SS7pJKf/9XiDYZeO6Z1hb7lD/DOUbf5v5qkKZzbYqyhvaTrIIK2Ok4eZkt0GygH+cd3
/qN/OXPYX88z6PP+E+j/AGl6FV/RmcfRH839H+wmTrokcXRqvdh9OZ7QDaR9LTdH/fWrn+tWfbWi
xjQLq/o+Lmnlkqz1X+lO+nz+dwqN38074KTB7Wn77FPjvVyG2S6DInQjwITXMBH5VLN/pB/qt/rf
9c/lqJ4Km66LeiCjIfjv01b3C02vbYwWsMgrJt+mrfTeLPpdv6qjzcN/1v5btjBx1r8nj/3Lq0S4
g+KnT1zPw7nCt/sB9re0fm7VBn80/n6LuOeD9FZlP9Hq5+j3+JUEeDXiZMt0Ke26X9cnvc1mQInS
V12NkMyKhY3gryLG+kOeV6d0D+gs547qvl4L9CwX1dMqBKkVAqNLEoZUyoOSUw7pJd0klP8A/9kA
OEJJTQQhAAAAAABTAAAAAQEAAAAPAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAEgBB
AGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAgAEMAUwAAAAEAOEJJTQQGAAAAAAAHAAYAAAAB
AQD/4R71aHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49J++7vycg
aWQ9J1c1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCc/Pgo8eDp4bXBtZXRhIHhtbG5zOng9J2Fkb2Jl
Om5zOm1ldGEvJyB4OnhtcHRrPSdYTVAgdG9vbGtpdCAzLjAtMjgsIGZyYW1ld29yayAxLjYnPgo8
cmRmOlJERiB4bWxuczpyZGY9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRh
eC1ucyMnIHhtbG5zOmlYPSdodHRwOi8vbnMuYWRvYmUuY29tL2lYLzEuMC8nPgoKIDxyZGY6RGVz
Y3JpcHRpb24gcmRmOmFib3V0PSd1dWlkOjk3MmEyYTM1LTlhZjctMTFkOS1iMDc3LWVkYjM0NDFk
OWMzYicKICB4bWxuczpleGlmPSdodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyc+CiAgPGV4
aWY6RXhwb3N1cmVUaW1lPjEvNDA8L2V4aWY6RXhwb3N1cmVUaW1lPgogIDxleGlmOkZOdW1iZXI+
MzUvMTA8L2V4aWY6Rk51bWJlcj4KICA8ZXhpZjpFeGlmVmVyc2lvbj4wMjIwPC9leGlmOkV4aWZW
ZXJzaW9uPgogIDxleGlmOkRhdGVUaW1lT3JpZ2luYWw+MjAwNS0wMi0yNlQyMjo1MjozNi0wODow
MDwvZXhpZjpEYXRlVGltZU9yaWdpbmFsPgogIDxleGlmOkRhdGVUaW1lRGlnaXRpemVkPjIwMDUt
MDItMjZUMjI6NTI6MzYtMDg6MDA8L2V4aWY6RGF0ZVRpbWVEaWdpdGl6ZWQ+CiAgPGV4aWY6Q29t
cHJlc3NlZEJpdHNQZXJQaXhlbD45LzE8L2V4aWY6Q29tcHJlc3NlZEJpdHNQZXJQaXhlbD4KICA8
ZXhpZjpTaHV0dGVyU3BlZWRWYWx1ZT41MzIxLzEwMDA8L2V4aWY6U2h1dHRlclNwZWVkVmFsdWU+
CiAgPGV4aWY6QXBlcnR1cmVWYWx1ZT4zNjE0LzEwMDA8L2V4aWY6QXBlcnR1cmVWYWx1ZT4KICA8
ZXhpZjpFeHBvc3VyZUJpYXNWYWx1ZT4xMTI1LzMwMDA8L2V4aWY6RXhwb3N1cmVCaWFzVmFsdWU+
CiAgPGV4aWY6TWF4QXBlcnR1cmVWYWx1ZT4wLzEwMDA8L2V4aWY6TWF4QXBlcnR1cmVWYWx1ZT4K
ICA8ZXhpZjpNZXRlcmluZ01vZGU+NTwvZXhpZjpNZXRlcmluZ01vZGU+CiAgPGV4aWY6Rm9jYWxM
ZW5ndGg+MTY1MC8xMDwvZXhpZjpGb2NhbExlbmd0aD4KICA8ZXhpZjpGbGFzaHBpeFZlcnNpb24+
MDEwMDwvZXhpZjpGbGFzaHBpeFZlcnNpb24+CiAgPGV4aWY6Q29sb3JTcGFjZT40Mjk0OTY3Mjk1
PC9leGlmOkNvbG9yU3BhY2U+CiAgPGV4aWY6UGl4ZWxYRGltZW5zaW9uPjE1MDwvZXhpZjpQaXhl
bFhEaW1lbnNpb24+CiAgPGV4aWY6UGl4ZWxZRGltZW5zaW9uPjEwNjwvZXhpZjpQaXhlbFlEaW1l
bnNpb24+CiAgPGV4aWY6Rm9jYWxQbGFuZVhSZXNvbHV0aW9uPjMwNzIwMDAvODkyPC9leGlmOkZv
Y2FsUGxhbmVYUmVzb2x1dGlvbj4KICA8ZXhpZjpGb2NhbFBsYW5lWVJlc29sdXRpb24+MjA0ODAw
MC81OTU8L2V4aWY6Rm9jYWxQbGFuZVlSZXNvbHV0aW9uPgogIDxleGlmOkZvY2FsUGxhbmVSZXNv
bHV0aW9uVW5pdD4yPC9leGlmOkZvY2FsUGxhbmVSZXNvbHV0aW9uVW5pdD4KICA8ZXhpZjpTZW5z
aW5nTWV0aG9kPjI8L2V4aWY6U2Vuc2luZ01ldGhvZD4KICA8ZXhpZjpGaWxlU291cmNlPjM8L2V4
aWY6RmlsZVNvdXJjZT4KICA8ZXhpZjpDdXN0b21SZW5kZXJlZD4wPC9leGlmOkN1c3RvbVJlbmRl
cmVkPgogIDxleGlmOkV4cG9zdXJlTW9kZT4wPC9leGlmOkV4cG9zdXJlTW9kZT4KICA8ZXhpZjpX
aGl0ZUJhbGFuY2U+MDwvZXhpZjpXaGl0ZUJhbGFuY2U+CiAgPGV4aWY6U2NlbmVDYXB0dXJlVHlw
ZT4wPC9leGlmOlNjZW5lQ2FwdHVyZVR5cGU+CiAgPGV4aWY6SVNPU3BlZWRSYXRpbmdzPgogICA8
cmRmOlNlcT4KICAgIDxyZGY6bGk+NDAwPC9yZGY6bGk+CiAgIDwvcmRmOlNlcT4KICA8L2V4aWY6
SVNPU3BlZWRSYXRpbmdzPgogIDxleGlmOkZsYXNoIHJkZjpwYXJzZVR5cGU9J1Jlc291cmNlJz4K
ICAgPGV4aWY6RmlyZWQ+RmFsc2U8L2V4aWY6RmlyZWQ+CiAgIDxleGlmOlJldHVybj4wPC9leGlm
OlJldHVybj4KICAgPGV4aWY6TW9kZT4wPC9leGlmOk1vZGU+CiAgIDxleGlmOkZ1bmN0aW9uPkZh
bHNlPC9leGlmOkZ1bmN0aW9uPgogICA8ZXhpZjpSZWRFeWVNb2RlPkZhbHNlPC9leGlmOlJlZEV5
ZU1vZGU+CiAgPC9leGlmOkZsYXNoPgogPC9yZGY6RGVzY3JpcHRpb24+CgogPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9J3V1aWQ6OTcyYTJhMzUtOWFmNy0xMWQ5LWIwNzctZWRiMzQ0MWQ5YzNi
JwogIHhtbG5zOnBkZj0naHR0cDovL25zLmFkb2JlLmNvbS9wZGYvMS4zLyc+CiA8L3JkZjpEZXNj
cmlwdGlvbj4KCiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0ndXVpZDo5NzJhMmEzNS05YWY3
LTExZDktYjA3Ny1lZGIzNDQxZDljM2InCiAgeG1sbnM6cGhvdG9zaG9wPSdodHRwOi8vbnMuYWRv
YmUuY29tL3Bob3Rvc2hvcC8xLjAvJz4KICA8cGhvdG9zaG9wOkhpc3Rvcnk+PC9waG90b3Nob3A6
SGlzdG9yeT4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0
PSd1dWlkOjk3MmEyYTM1LTlhZjctMTFkOS1iMDc3LWVkYjM0NDFkOWMzYicKICB4bWxuczp0aWZm
PSdodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyc+CiAgPHRpZmY6TWFrZT5DYW5vbjwvdGlm
ZjpNYWtlPgogIDx0aWZmOk1vZGVsPkNhbm9uIEVPUyBESUdJVEFMIFJFQkVMPC90aWZmOk1vZGVs
PgogIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgPHRpZmY6WFJlc29s
dXRpb24+MTgwLzE8L3RpZmY6WFJlc29sdXRpb24+CiAgPHRpZmY6WVJlc29sdXRpb24+MTgwLzE8
L3RpZmY6WVJlc29sdXRpb24+CiAgPHRpZmY6UmVzb2x1dGlvblVuaXQ+MjwvdGlmZjpSZXNvbHV0
aW9uVW5pdD4KICA8dGlmZjpZQ2JDclBvc2l0aW9uaW5nPjE8L3RpZmY6WUNiQ3JQb3NpdGlvbmlu
Zz4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSd1dWlk
Ojk3MmEyYTM1LTlhZjctMTFkOS1iMDc3LWVkYjM0NDFkOWMzYicKICB4bWxuczp4YXA9J2h0dHA6
Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8nPgogIDx4YXA6Q3JlYXRlRGF0ZT4yMDA1LTAyLTI4VDEw
OjEwOjE4LTA4OjAwPC94YXA6Q3JlYXRlRGF0ZT4KICA8eGFwOk1vZGlmeURhdGU+MjAwNS0wMy0y
MFQxNzozMDowNi0wODowMDwveGFwOk1vZGlmeURhdGU+CiAgPHhhcDpNZXRhZGF0YURhdGU+MjAw
NS0wMy0yMFQxNzozMDowNi0wODowMDwveGFwOk1ldGFkYXRhRGF0ZT4KICA8eGFwOkNyZWF0b3JU
b29sPkFkb2JlIFBob3Rvc2hvcCBDUyBNYWNpbnRvc2g8L3hhcDpDcmVhdG9yVG9vbD4KIDwvcmRm
OkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSd1dWlkOjk3MmEyYTM1
LTlhZjctMTFkOS1iMDc3LWVkYjM0NDFkOWMzYicKICB4bWxuczp4YXBNTT0naHR0cDovL25zLmFk
b2JlLmNvbS94YXAvMS4wL21tLyc+CiAgPHhhcE1NOkRvY3VtZW50SUQ+YWRvYmU6ZG9jaWQ6cGhv
dG9zaG9wOjAzNWMyZTc5LThiMDMtMTFkOS05OWRlLWYzMzk1NThmZTc1ZDwveGFwTU06RG9jdW1l
bnRJRD4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSd1
dWlkOjk3MmEyYTM1LTlhZjctMTFkOS1iMDc3LWVkYjM0NDFkOWMzYicKICB4bWxuczpkYz0naHR0
cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8nPgogIDxkYzpmb3JtYXQ+aW1hZ2UvanBlZzwv
ZGM6Zm9ybWF0PgogIDxkYzpkZXNjcmlwdGlvbj4KICAgPHJkZjpBbHQ+CiAgICA8cmRmOmxpIHht
bDpsYW5nPSd4LWRlZmF1bHQnPiA8L3JkZjpsaT4KICAgPC9yZGY6QWx0PgogIDwvZGM6ZGVzY3Jp
cHRpb24+CiA8L3JkZjpEZXNjcmlwdGlvbj4KCjwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5k
PSd3Jz8+/+4ADkFkb2JlAGRAAAAAAf/bAIQAAgICAgICAgICAgMCAgIDBAMCAgMEBQQEBAQEBQYF
BQUFBQUGBgcHCAcHBgkJCgoJCQwMDAwMDAwMDAwMDAwMDAEDAwMFBAUJBgYJDQoJCg0PDg4ODg8P
DAwMDAwPDwwMDAwMDA8MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAagCWAwERAAIR
AQMRAf/dAAQAE//EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAA
AAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWx
QiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry
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
e0zZQyCXS9DipSyTFils32ThCpcf7xfpxS//2Q==
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/jpg/fpo-challenger.jpg

/9j/4AAQSkZJRgABAgEAWQBZAAD/4QuSRXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUA
AAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAdAAAAcgEyAAIAAAAUAAAAj4dp
AAQAAAABAAAApAAAANAAAABZAAAAAQAAAFkAAAABQWRvYmUgUGhvdG9zaG9wIENTIE1hY2ludG9z
aAAyMDA1OjAzOjIwIDE2OjExOjI4AAAAA6ABAAMAAAAB//8AAKACAAQAAAABAAAAUKADAAQAAAAB
AAAAagAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEeARsABQAAAAEAAAEmASgAAwAAAAEA
AgAAAgEABAAAAAEAAAEuAgIABAAAAAEAAApcAAAAAAAAAEgAAAABAAAASAAAAAH/2P/gABBKRklG
AAECAQBIAEgAAP/tAAxBZG9iZV9DTQAC/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBEL
CgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsN
Dg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwM/8AAEQgAagBQAwEiAAIRAQMRAf/dAAQABf/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYH
CAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQh
EjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXi
ZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIE
BAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKy
gwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dX
Z3eHl6e3x//aAAwDAQACEQMRAD8A4F2W4P3gy7xdqSnGY8mS0T5aKuGjv9ydzwxp2jXgKvwR2q2y
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
glWsz+kP+Pb4KhmfzY+KMa6LjfV0vqr1hvTc/a923GyIbbOgaf8AB2/2fzl3jOt9N/7l0/8Abjf7
15Qf9f8AapO5r4478/2kJcN6/gu83u+ufWC3D6lh5WPltswHODb2VPaXD/SRE+xzP+mxVur/AFqz
MvNtpwXtfhsLDVuaCC+tzX+ux/0vpt9m5chb9Fn9UflPC0um8f5vwSHDpfZGt+nd67pf1o69XYPW
pqyGvd7vaWOkn99p2/8ARXQ4v1l6fnusoY70spkh1LzqQPzqnf4RqxPq7/SB/O8Hnjj85crnf8rs
+l/Oj+j/AE+f8F/KTTwoFv8A/9n/7S58UGhvdG9zaG9wIDMuMAA4QklNBCUAAAAAABAAAAAAAAAA
AAAAAAAAAAAAOEJJTQPqAAAAAB2wPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgi
Pz4KPCFET0NUWVBFIHBsaXN0IFBVQkxJQyAiLS8vQXBwbGUgQ29tcHV0ZXIvL0RURCBQTElTVCAx
LjAvL0VOIiAiaHR0cDovL3d3dy5hcHBsZS5jb20vRFREcy9Qcm9wZXJ0eUxpc3QtMS4wLmR0ZCI+
CjxwbGlzdCB2ZXJzaW9uPSIxLjAiPgo8ZGljdD4KCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VG
b3JtYXQuUE1Ib3Jpem9udGFsUmVzPC9rZXk+Cgk8ZGljdD4KCQk8a2V5PmNvbS5hcHBsZS5wcmlu
dC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCTxzdHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdl
cjwvc3RyaW5nPgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5pdGVtQXJyYXk8L2tleT4K
CQk8YXJyYXk+CgkJCTxkaWN0PgoJCQkJPGtleT5jb20uYXBwbGUucHJpbnQuUGFnZUZvcm1hdC5Q
TUhvcml6b250YWxSZXM8L2tleT4KCQkJCTxyZWFsPjcyPC9yZWFsPgoJCQkJPGtleT5jb20uYXBw
bGUucHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnRp
bmdtYW5hZ2VyPC9zdHJpbmc+CgkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQubW9kRGF0
ZTwva2V5PgoJCQkJPGRhdGU+MjAwNS0wMy0yMVQwMDowOTo1N1o8L2RhdGU+CgkJCQk8a2V5PmNv
bS5hcHBsZS5wcmludC50aWNrZXQuc3RhdGVGbGFnPC9rZXk+CgkJCQk8aW50ZWdlcj4wPC9pbnRl
Z2VyPgoJCQk8L2RpY3Q+CgkJPC9hcnJheT4KCTwvZGljdD4KCTxrZXk+Y29tLmFwcGxlLnByaW50
LlBhZ2VGb3JtYXQuUE1PcmllbnRhdGlvbjwva2V5PgoJPGRpY3Q+CgkJPGtleT5jb20uYXBwbGUu
cHJpbnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21h
bmFnZXI8L3N0cmluZz4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9r
ZXk+CgkJPGFycmF5PgoJCQk8ZGljdD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3Jt
YXQuUE1PcmllbnRhdGlvbjwva2V5PgoJCQkJPGludGVnZXI+MTwvaW50ZWdlcj4KCQkJCTxrZXk+
Y29tLmFwcGxlLnByaW50LnRpY2tldC5jbGllbnQ8L2tleT4KCQkJCTxzdHJpbmc+Y29tLmFwcGxl
LnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0
Lm1vZERhdGU8L2tleT4KCQkJCTxkYXRlPjIwMDUtMDMtMjFUMDA6MDk6NTdaPC9kYXRlPgoJCQkJ
PGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LnN0YXRlRmxhZzwva2V5PgoJCQkJPGludGVnZXI+
MDwvaW50ZWdlcj4KCQkJPC9kaWN0PgoJCTwvYXJyYXk+Cgk8L2RpY3Q+Cgk8a2V5PmNvbS5hcHBs
ZS5wcmludC5QYWdlRm9ybWF0LlBNU2NhbGluZzwva2V5PgoJPGRpY3Q+CgkJPGtleT5jb20uYXBw
bGUucHJpbnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGlu
Z21hbmFnZXI8L3N0cmluZz4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5
PC9rZXk+CgkJPGFycmF5PgoJCQk8ZGljdD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VG
b3JtYXQuUE1TY2FsaW5nPC9rZXk+CgkJCQk8cmVhbD4xPC9yZWFsPgoJCQkJPGtleT5jb20uYXBw
bGUucHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnRp
bmdtYW5hZ2VyPC9zdHJpbmc+CgkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQubW9kRGF0
ZTwva2V5PgoJCQkJPGRhdGU+MjAwNS0wMy0yMVQwMDowOTo1N1o8L2RhdGU+CgkJCQk8a2V5PmNv
bS5hcHBsZS5wcmludC50aWNrZXQuc3RhdGVGbGFnPC9rZXk+CgkJCQk8aW50ZWdlcj4wPC9pbnRl
Z2VyPgoJCQk8L2RpY3Q+CgkJPC9hcnJheT4KCTwvZGljdD4KCTxrZXk+Y29tLmFwcGxlLnByaW50
LlBhZ2VGb3JtYXQuUE1WZXJ0aWNhbFJlczwva2V5PgoJPGRpY3Q+CgkJPGtleT5jb20uYXBwbGUu
cHJpbnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21h
bmFnZXI8L3N0cmluZz4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9r
ZXk+CgkJPGFycmF5PgoJCQk8ZGljdD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3Jt
YXQuUE1WZXJ0aWNhbFJlczwva2V5PgoJCQkJPHJlYWw+NzI8L3JlYWw+CgkJCQk8a2V5PmNvbS5h
cHBsZS5wcmludC50aWNrZXQuY2xpZW50PC9rZXk+CgkJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmlu
dGluZ21hbmFnZXI8L3N0cmluZz4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5tb2RE
YXRlPC9rZXk+CgkJCQk8ZGF0ZT4yMDA1LTAzLTIxVDAwOjA5OjU3WjwvZGF0ZT4KCQkJCTxrZXk+
Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCTxpbnRlZ2VyPjA8L2lu
dGVnZXI+CgkJCTwvZGljdD4KCQk8L2FycmF5PgoJPC9kaWN0PgoJPGtleT5jb20uYXBwbGUucHJp
bnQuUGFnZUZvcm1hdC5QTVZlcnRpY2FsU2NhbGluZzwva2V5PgoJPGRpY3Q+CgkJPGtleT5jb20u
YXBwbGUucHJpbnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmlu
dGluZ21hbmFnZXI8L3N0cmluZz4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFy
cmF5PC9rZXk+CgkJPGFycmF5PgoJCQk8ZGljdD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBh
Z2VGb3JtYXQuUE1WZXJ0aWNhbFNjYWxpbmc8L2tleT4KCQkJCTxyZWFsPjE8L3JlYWw+CgkJCQk8
a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY2xpZW50PC9rZXk+CgkJCQk8c3RyaW5nPmNvbS5h
cHBsZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRp
Y2tldC5tb2REYXRlPC9rZXk+CgkJCQk8ZGF0ZT4yMDA1LTAzLTIxVDAwOjA5OjU3WjwvZGF0ZT4K
CQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCTxpbnRl
Z2VyPjA8L2ludGVnZXI+CgkJCTwvZGljdD4KCQk8L2FycmF5PgoJPC9kaWN0PgoJPGtleT5jb20u
YXBwbGUucHJpbnQuc3ViVGlja2V0LnBhcGVyX2luZm9fdGlja2V0PC9rZXk+Cgk8ZGljdD4KCQk8
a2V5PmNvbS5hcHBsZS5wcmludC5QYWdlRm9ybWF0LlBNQWRqdXN0ZWRQYWdlUmVjdDwva2V5PgoJ
CTxkaWN0PgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCQk8
c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4KCQkJPGtleT5jb20uYXBw
bGUucHJpbnQudGlja2V0Lml0ZW1BcnJheTwva2V5PgoJCQk8YXJyYXk+CgkJCQk8ZGljdD4KCQkJ
CQk8a2V5PmNvbS5hcHBsZS5wcmludC5QYWdlRm9ybWF0LlBNQWRqdXN0ZWRQYWdlUmVjdDwva2V5
PgoJCQkJCTxhcnJheT4KCQkJCQkJPHJlYWw+MC4wPC9yZWFsPgoJCQkJCQk8cmVhbD4wLjA8L3Jl
YWw+CgkJCQkJCTxyZWFsPjczNDwvcmVhbD4KCQkJCQkJPHJlYWw+NTc2PC9yZWFsPgoJCQkJCTwv
YXJyYXk+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJ
CTxzdHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQkJCTxrZXk+Y29t
LmFwcGxlLnByaW50LnRpY2tldC5tb2REYXRlPC9rZXk+CgkJCQkJPGRhdGU+MjAwNS0wMy0yMVQw
MDowOTo1N1o8L2RhdGU+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LnN0YXRlRmxh
Zzwva2V5PgoJCQkJCTxpbnRlZ2VyPjA8L2ludGVnZXI+CgkJCQk8L2RpY3Q+CgkJCTwvYXJyYXk+
CgkJPC9kaWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3JtYXQuUE1BZGp1c3RlZFBh
cGVyUmVjdDwva2V5PgoJCTxkaWN0PgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY3Jl
YXRvcjwva2V5PgoJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4K
CQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0Lml0ZW1BcnJheTwva2V5PgoJCQk8YXJyYXk+
CgkJCQk8ZGljdD4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC5QYWdlRm9ybWF0LlBNQWRqdXN0
ZWRQYXBlclJlY3Q8L2tleT4KCQkJCQk8YXJyYXk+CgkJCQkJCTxyZWFsPi0xODwvcmVhbD4KCQkJ
CQkJPHJlYWw+LTE4PC9yZWFsPgoJCQkJCQk8cmVhbD43NzQ8L3JlYWw+CgkJCQkJCTxyZWFsPjU5
NDwvcmVhbD4KCQkJCQk8L2FycmF5PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5j
bGllbnQ8L2tleT4KCQkJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludGluZ21hbmFnZXI8L3N0cmlu
Zz4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQubW9kRGF0ZTwva2V5PgoJCQkJCTxk
YXRlPjIwMDUtMDMtMjFUMDA6MDk6NTdaPC9kYXRlPgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50
LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCQk8aW50ZWdlcj4wPC9pbnRlZ2VyPgoJCQkJPC9k
aWN0PgoJCQk8L2FycmF5PgoJCTwvZGljdD4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC5QYXBlcklu
Zm8uUE1QYXBlck5hbWU8L2tleT4KCQk8ZGljdD4KCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlj
a2V0LmNyZWF0b3I8L2tleT4KCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNjcmlw
dDwvc3RyaW5nPgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+
CgkJCTxhcnJheT4KCQkJCTxkaWN0PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5m
by5QTVBhcGVyTmFtZTwva2V5PgoJCQkJCTxzdHJpbmc+bmEtbGV0dGVyPC9zdHJpbmc+CgkJCQkJ
PGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJCTxzdHJpbmc+Y29t
LmFwcGxlLnByaW50LnBtLlBvc3RTY3JpcHQ8L3N0cmluZz4KCQkJCQk8a2V5PmNvbS5hcHBsZS5w
cmludC50aWNrZXQubW9kRGF0ZTwva2V5PgoJCQkJCTxkYXRlPjIwMDMtMDctMDFUMTc6NDk6MzZa
PC9kYXRlPgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4K
CQkJCQk8aW50ZWdlcj4xPC9pbnRlZ2VyPgoJCQkJPC9kaWN0PgoJCQk8L2FycmF5PgoJCTwvZGlj
dD4KCQk8a2V5PmNvbS5hcHBsZS5wcmludC5QYXBlckluZm8uUE1VbmFkanVzdGVkUGFnZVJlY3Q8
L2tleT4KCQk8ZGljdD4KCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNyZWF0b3I8L2tl
eT4KCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNjcmlwdDwvc3RyaW5nPgoJCQk8
a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+CgkJCTxhcnJheT4KCQkJ
CTxkaWN0PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5mby5QTVVuYWRqdXN0ZWRQ
YWdlUmVjdDwva2V5PgoJCQkJCTxhcnJheT4KCQkJCQkJPHJlYWw+MC4wPC9yZWFsPgoJCQkJCQk8
cmVhbD4wLjA8L3JlYWw+CgkJCQkJCTxyZWFsPjczNDwvcmVhbD4KCQkJCQkJPHJlYWw+NTc2PC9y
ZWFsPgoJCQkJCTwvYXJyYXk+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNsaWVu
dDwva2V5PgoJCQkJCTxzdHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJ
CQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5tb2REYXRlPC9rZXk+CgkJCQkJPGRhdGU+
MjAwNS0wMy0yMVQwMDowOTo1N1o8L2RhdGU+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlj
a2V0LnN0YXRlRmxhZzwva2V5PgoJCQkJCTxpbnRlZ2VyPjA8L2ludGVnZXI+CgkJCQk8L2RpY3Q+
CgkJCTwvYXJyYXk+CgkJPC9kaWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5mby5Q
TVVuYWRqdXN0ZWRQYXBlclJlY3Q8L2tleT4KCQk8ZGljdD4KCQkJPGtleT5jb20uYXBwbGUucHJp
bnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9z
dFNjcmlwdDwvc3RyaW5nPgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5
PC9rZXk+CgkJCTxhcnJheT4KCQkJCTxkaWN0PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBh
cGVySW5mby5QTVVuYWRqdXN0ZWRQYXBlclJlY3Q8L2tleT4KCQkJCQk8YXJyYXk+CgkJCQkJCTxy
ZWFsPi0xODwvcmVhbD4KCQkJCQkJPHJlYWw+LTE4PC9yZWFsPgoJCQkJCQk8cmVhbD43NzQ8L3Jl
YWw+CgkJCQkJCTxyZWFsPjU5NDwvcmVhbD4KCQkJCQk8L2FycmF5PgoJCQkJCTxrZXk+Y29tLmFw
cGxlLnByaW50LnRpY2tldC5jbGllbnQ8L2tleT4KCQkJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmlu
dGluZ21hbmFnZXI8L3N0cmluZz4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQubW9k
RGF0ZTwva2V5PgoJCQkJCTxkYXRlPjIwMDUtMDMtMjFUMDA6MDk6NTdaPC9kYXRlPgoJCQkJCTxr
ZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCQk8aW50ZWdlcj4w
PC9pbnRlZ2VyPgoJCQkJPC9kaWN0PgoJCQk8L2FycmF5PgoJCTwvZGljdD4KCQk8a2V5PmNvbS5h
cHBsZS5wcmludC5QYXBlckluZm8ucHBkLlBNUGFwZXJOYW1lPC9rZXk+CgkJPGRpY3Q+CgkJCTxr
ZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5jcmVhdG9yPC9rZXk+CgkJCTxzdHJpbmc+Y29tLmFw
cGxlLnByaW50LnBtLlBvc3RTY3JpcHQ8L3N0cmluZz4KCQkJPGtleT5jb20uYXBwbGUucHJpbnQu
dGlja2V0Lml0ZW1BcnJheTwva2V5PgoJCQk8YXJyYXk+CgkJCQk8ZGljdD4KCQkJCQk8a2V5PmNv
bS5hcHBsZS5wcmludC5QYXBlckluZm8ucHBkLlBNUGFwZXJOYW1lPC9rZXk+CgkJCQkJPHN0cmlu
Zz5VUyBMZXR0ZXI8L3N0cmluZz4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY2xp
ZW50PC9rZXk+CgkJCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNjcmlwdDwvc3Ry
aW5nPgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5tb2REYXRlPC9rZXk+CgkJCQkJ
PGRhdGU+MjAwMy0wNy0wMVQxNzo0OTozNlo8L2RhdGU+CgkJCQkJPGtleT5jb20uYXBwbGUucHJp
bnQudGlja2V0LnN0YXRlRmxhZzwva2V5PgoJCQkJCTxpbnRlZ2VyPjE8L2ludGVnZXI+CgkJCQk8
L2RpY3Q+CgkJCTwvYXJyYXk+CgkJPC9kaWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tl
dC5BUElWZXJzaW9uPC9rZXk+CgkJPHN0cmluZz4wMC4yMDwvc3RyaW5nPgoJCTxrZXk+Y29tLmFw
cGxlLnByaW50LnRpY2tldC5wcml2YXRlTG9jazwva2V5PgoJCTxmYWxzZS8+CgkJPGtleT5jb20u
YXBwbGUucHJpbnQudGlja2V0LnR5cGU8L2tleT4KCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludC5Q
YXBlckluZm9UaWNrZXQ8L3N0cmluZz4KCTwvZGljdD4KCTxrZXk+Y29tLmFwcGxlLnByaW50LnRp
Y2tldC5BUElWZXJzaW9uPC9rZXk+Cgk8c3RyaW5nPjAwLjIwPC9zdHJpbmc+Cgk8a2V5PmNvbS5h
cHBsZS5wcmludC50aWNrZXQucHJpdmF0ZUxvY2s8L2tleT4KCTxmYWxzZS8+Cgk8a2V5PmNvbS5h
cHBsZS5wcmludC50aWNrZXQudHlwZTwva2V5PgoJPHN0cmluZz5jb20uYXBwbGUucHJpbnQuUGFn
ZUZvcm1hdFRpY2tldDwvc3RyaW5nPgo8L2RpY3Q+CjwvcGxpc3Q+CjhCSU0D6QAAAAAAeAADAAAA
SABIAAAAAALeAkD/7v/uAwYCUgNnBSgD/AACAAAASABIAAAAAALYAigAAQAAAGQAAAABAAMDAwAA
AAF//wABAAEAAAAAAAAAAAAAAABoCAAZAZAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ADhCSU0D7QAAAAAAEABZAAAAAQACAFkAAAABAAI4QklNBCYAAAAAAA4AAAAAAAAAAAAAP4AAADhC
SU0EDQAAAAAABAAAAB44QklNBBkAAAAAAAQAAAAeOEJJTQPzAAAAAAAJAAAAAAAAAAABADhCSU0E
CgAAAAAAAQAAOEJJTScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAASAAvZmYAAQBsZmYABgAA
AAAAAQAvZmYAAQChmZoABgAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAAQAtAAAABgAAAAAA
AThCSU0D+AAAAAAAcAAA/////////////////////////////wPoAAAAAP//////////////////
//////////8D6AAAAAD/////////////////////////////A+gAAAAA////////////////////
/////////wPoAAA4QklNBAgAAAAAABAAAAABAAACQAAAAkAAAAAAOEJJTQQeAAAAAAAEAAAAADhC
SU0EGgAAAAADSQAAAAYAAAAAAAAAAAAAAGoAAABQAAAACgBjAGgAYQBsAGwAZQBuAGcAZQByAAAA
AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAABQAAAAagAAAAAAAAAAAAAAAAAAAAABAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAABAAAAAAAAbnVsbAAAAAIAAAAGYm91bmRzT2JqYwAAAAEAAAAA
AABSY3QxAAAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAA
agAAAABSZ2h0bG9uZwAAAFAAAAAGc2xpY2VzVmxMcwAAAAFPYmpjAAAAAQAAAAAABXNsaWNlAAAA
EgAAAAdzbGljZUlEbG9uZwAAAAAAAAAHZ3JvdXBJRGxvbmcAAAAAAAAABm9yaWdpbmVudW0AAAAM
RVNsaWNlT3JpZ2luAAAADWF1dG9HZW5lcmF0ZWQAAAAAVHlwZWVudW0AAAAKRVNsaWNlVHlwZQAA
AABJbWcgAAAABmJvdW5kc09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAA
AExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAAGoAAAAAUmdodGxvbmcAAABQAAAAA3VybFRFWFQA
AAABAAAAAAAAbnVsbFRFWFQAAAABAAAAAAAATXNnZVRFWFQAAAABAAAAAAAGYWx0VGFnVEVYVAAA
AAEAAAAAAA5jZWxsVGV4dElzSFRNTGJvb2wBAAAACGNlbGxUZXh0VEVYVAAAAAEAAAAAAAlob3J6
QWxpZ25lbnVtAAAAD0VTbGljZUhvcnpBbGlnbgAAAAdkZWZhdWx0AAAACXZlcnRBbGlnbmVudW0A
AAAPRVNsaWNlVmVydEFsaWduAAAAB2RlZmF1bHQAAAALYmdDb2xvclR5cGVlbnVtAAAAEUVTbGlj
ZUJHQ29sb3JUeXBlAAAAAE5vbmUAAAAJdG9wT3V0c2V0bG9uZwAAAAAAAAAKbGVmdE91dHNldGxv
bmcAAAAAAAAADGJvdHRvbU91dHNldGxvbmcAAAAAAAAAC3JpZ2h0T3V0c2V0bG9uZwAAAAAAOEJJ
TQQoAAAAAAAMAAAAAT/wAAAAAAAAOEJJTQQRAAAAAAABAQA4QklNBBQAAAAAAAQAAAABOEJJTQQM
AAAAAAp4AAAAAQAAAFAAAABqAAAA8AAAY2AAAApcABgAAf/Y/+AAEEpGSUYAAQIBAEgASAAA/+0A
DEFkb2JlX0NNAAL/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMV
ExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQO
Dg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABqAFAD
ASIAAhEBAxEB/90ABAAF/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEB
AQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYU
kaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5Sk
hbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQAC
EQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RF
VTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMB
AAIRAxEAPwDgXZbg/eDLvF2pKcZjyZLRPloq4aO/3J3PDGnaNeAq/BHarbInMa8VNv1w6sBzY77u
UxNBBIeXfyYhVmYtwBtyHbGeZMn+q0IbsplZIqBd5vP8Al7P7pXHLKvXQ8JfN/ixbzjVtG0gA9go
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
/aQlw3r+C7ze7659YLcPqWHlY+W2zAc4NvZU9pcP9JET7HM/6bFW6v8AWrMy822nBe1+GwsNW5oI
L63Nf67H/S+m32blyFv0Wf1R+U8LS6bx/m/BIcOl9ka36d3rul/Wjr1dg9amrIa93u9pY6Sf32nb
/wBFdDi/WXp+e6yhjvSymSHUvOpA/Oqd/hGrE+rv9IH87weeOPzlyud/yuz6X86P6P8AT5/wX8pN
PCgW/wD/2ThCSU0EIQAAAAAAUwAAAAEBAAAADwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8A
cAAAABIAQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAIABDAFMAAAABADhCSU0EBgAAAAAA
BwAGAAAAAQEA/+EYBGh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8APD94cGFja2V0IGJlZ2lu
PSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4
PSdhZG9iZTpuczptZXRhLycgeDp4bXB0az0nWE1QIHRvb2xraXQgMy4wLTI4LCBmcmFtZXdvcmsg
MS42Jz4KPHJkZjpSREYgeG1sbnM6cmRmPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk
Zi1zeW50YXgtbnMjJyB4bWxuczppWD0naHR0cDovL25zLmFkb2JlLmNvbS9pWC8xLjAvJz4KCiA8
cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0ndXVpZDpkNDQ0ZjM4My05YWVjLTExZDktOWY3Ny1i
NjZiODEyN2QzZWInCiAgeG1sbnM6ZXhpZj0naHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8n
PgogIDxleGlmOkNvbG9yU3BhY2U+NDI5NDk2NzI5NTwvZXhpZjpDb2xvclNwYWNlPgogIDxleGlm
OlBpeGVsWERpbWVuc2lvbj44MDwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgPGV4aWY6UGl4ZWxZ
RGltZW5zaW9uPjEwNjwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiA8L3JkZjpEZXNjcmlwdGlvbj4K
CiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0ndXVpZDpkNDQ0ZjM4My05YWVjLTExZDktOWY3
Ny1iNjZiODEyN2QzZWInCiAgeG1sbnM6cGRmPSdodHRwOi8vbnMuYWRvYmUuY29tL3BkZi8xLjMv
Jz4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSd1dWlk
OmQ0NDRmMzgzLTlhZWMtMTFkOS05Zjc3LWI2NmI4MTI3ZDNlYicKICB4bWxuczpwaG90b3Nob3A9
J2h0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8nPgogIDxwaG90b3Nob3A6SGlzdG9y
eT48L3Bob3Rvc2hvcDpIaXN0b3J5PgogPC9yZGY6RGVzY3JpcHRpb24+CgogPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9J3V1aWQ6ZDQ0NGYzODMtOWFlYy0xMWQ5LTlmNzctYjY2YjgxMjdkM2Vi
JwogIHhtbG5zOnRpZmY9J2h0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvJz4KICA8dGlmZjpP
cmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogIDx0aWZmOlhSZXNvbHV0aW9uPjg5LzE8
L3RpZmY6WFJlc29sdXRpb24+CiAgPHRpZmY6WVJlc29sdXRpb24+ODkvMTwvdGlmZjpZUmVzb2x1
dGlvbj4KICA8dGlmZjpSZXNvbHV0aW9uVW5pdD4yPC90aWZmOlJlc29sdXRpb25Vbml0PgogPC9y
ZGY6RGVzY3JpcHRpb24+CgogPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9J3V1aWQ6ZDQ0NGYz
ODMtOWFlYy0xMWQ5LTlmNzctYjY2YjgxMjdkM2ViJwogIHhtbG5zOnhhcD0naHR0cDovL25zLmFk
b2JlLmNvbS94YXAvMS4wLyc+CiAgPHhhcDpDcmVhdGVEYXRlPjIwMDUtMDMtMjBUMTY6MDk6NDAt
MDg6MDA8L3hhcDpDcmVhdGVEYXRlPgogIDx4YXA6TW9kaWZ5RGF0ZT4yMDA1LTAzLTIwVDE2OjEx
OjI4LTA4OjAwPC94YXA6TW9kaWZ5RGF0ZT4KICA8eGFwOk1ldGFkYXRhRGF0ZT4yMDA1LTAzLTIw
VDE2OjExOjI4LTA4OjAwPC94YXA6TWV0YWRhdGFEYXRlPgogIDx4YXA6Q3JlYXRvclRvb2w+QWRv
YmUgUGhvdG9zaG9wIENTIE1hY2ludG9zaDwveGFwOkNyZWF0b3JUb29sPgogPC9yZGY6RGVzY3Jp
cHRpb24+CgogPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9J3V1aWQ6ZDQ0NGYzODMtOWFlYy0x
MWQ5LTlmNzctYjY2YjgxMjdkM2ViJwogIHhtbG5zOnhhcE1NPSdodHRwOi8vbnMuYWRvYmUuY29t
L3hhcC8xLjAvbW0vJz4KICA8eGFwTU06RG9jdW1lbnRJRD5hZG9iZTpkb2NpZDpwaG90b3Nob3A6
ZDQ0NGYzODItOWFlYy0xMWQ5LTlmNzctYjY2YjgxMjdkM2ViPC94YXBNTTpEb2N1bWVudElEPgog
PC9yZGY6RGVzY3JpcHRpb24+CgogPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9J3V1aWQ6ZDQ0
NGYzODMtOWFlYy0xMWQ5LTlmNzctYjY2YjgxMjdkM2ViJwogIHhtbG5zOmRjPSdodHRwOi8vcHVy
bC5vcmcvZGMvZWxlbWVudHMvMS4xLyc+CiAgPGRjOmZvcm1hdD5pbWFnZS9qcGVnPC9kYzpmb3Jt
YXQ+CiA8L3JkZjpEZXNjcmlwdGlvbj4KCjwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSd3
Jz8+/+4ADkFkb2JlAGRAAAAAAf/bAIQAAgICAgICAgICAgMCAgIDBAMCAgMEBQQEBAQEBQYFBQUF
BQUGBgcHCAcHBgkJCgoJCQwMDAwMDAwMDAwMDAwMDAEDAwMFBAUJBgYJDQoJCg0PDg4ODg8PDAwM
DAwPDwwMDAwMDA8MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAagBQAwERAAIRAQMR
Af/dAAQACv/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA
AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB
UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE
1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ
qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy
obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp
0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo
+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A+Rc/mu5jvVvIZWkuAKtL
dhZnc169Bx+/OVx9mRlDgkKHls9Ye05wmJRluO/f+xWi833ssoaSxgLsCQyFozQ+3xZGXZEIjaR+
9ycfbmYneMT8wm7a5DcWMMVzbLb1cSLe/bHE7MCAAx9swxojHIeGV+Tsj2sTj3ht3/iipO2hSRzS
Q6lLdkDa29Mx7k9abVp9OT4M8SBwAed3+Pscb81hygkyJ8qofYibqTShbRi1lihjkPL0ojvUAchQ
b9fllMIZjO5Ak+bm+Lpo4gBIDyHNLrCBby4jS2Kxsnxxyymn2DU7D5eOZWaRxx9W/kHCxyjM+jau
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
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/jpg/leonid2001.jpg

/9j/4AAQSkZJRgABAgEASABIAAD/4Q/VRXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUA
AAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAdAAAAcgEyAAIAAAAUAAAAj4dp
AAQAAAABAAAApAAAANAAAABIAAAAAQAAAEgAAAABQWRvYmUgUGhvdG9zaG9wIENTIE1hY2ludG9z
aAAyMDA1OjAzOjIwIDE3OjA4OjE5AAAAA6ABAAMAAAAB//8AAKACAAQAAAABAAAAlqADAAQAAAAB
AAAAagAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEeARsABQAAAAEAAAEmASgAAwAAAAEA
AgAAAgEABAAAAAEAAAEuAgIABAAAAAEAAA6fAAAAAAAAAEgAAAABAAAASAAAAAH/2P/gABBKRklG
AAECAQBIAEgAAP/tAAxBZG9iZV9DTQAC/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBEL
CgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsN
Dg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwM/8AAEQgAagCWAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYH
CAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQh
EjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXi
ZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIE
BAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKy
gwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dX
Z3eHl6e3x//aAAwDAQACEQMRAD8A9Nzcm3HrD6sd+S4mNlcA8E/ne1Dx8661o34llVhk+m4skAQN
309vu3K4gn+mD/iz/wBU1JS32mzeWfZ7JABOrI1n/hP5KX2i0kj7O+R5s7/9cUx/Pu/qN/K9O3+c
d8AkpGMmxxcBj2e0wdWeAd/pP5SY3WPa5v2eyNWnVn/pREr+nb/WH/UtTs5d/WSU5I6Xub/OZ8Tp
+sARA9P2Q/2qQ6eyx3rAZgkkx6zQN0env2+p9PRalf0PmfylRx/5kfE/lKSnNb06sF92zLd6gcXT
a0iHgz7PU2t5THpsDcH54aG8DI7D3f6Vajf5j+z/AATu/mT/AFf4JKcw9PDYePtjfc17ouHuLYaN
7fU8vemtwIb7jmhv0drbmwJ9g9oetR/83935U1/83/ab/wBU1JTmu6eQQd2cNRAF4A/8+KRwneo1
xdm/TDg31m7ZHu2kep9D+QpdXILsZv8AorW5Dv6tbmt/9Gq+/wCkz4/wKF6lcY1GJ/ev8EZyLQQP
s75PGrP/AEol9otmPs9kkTyzt/1xEd9NnzSP8434H8rUVqP7Rbu2/Z3zE8s/9KJfaLZj7O+Rryzv
/wBcRP8ACn+qPypD+dP9Uflckpi25xa4+k4OaQNktkz/AGtiSkz+cs+I/Ikkp//Q9QyMnHxmepkW
NqZxueQ0ePJVevMxLshttVzH1mtwDg4ESHN3f5qjguOay85bWWiu+xlYLRAa07G/S/k/nIzKqq8o
NrY1jfTJ2tAA+k3wSUyF9Prv/SN+g3uPF6cXU+o79I3t3HmnAH2h+n5jfyvUmgeo7TsP4pKR1307
7f0jfpDuP3Wp2X0+79I36XiE9QG+3T84f9S1SrAl2n5ySmFd9O3+cbye48So0XU+kB6jeT3HiUWo
DZx3P5So44HojTufylJTFt9Po/zjfo+I8E7rqfSP6Rv0T3HgnaB6HH5v8E7gPROn5v8ABJTGy6nZ
G9vbuPEJr7qdn8436Te4/eCnYB6fHh+VNkbRUSeAWk/JzUlNK11ORZk+9uoFLdR4bnHn9+xWasqq
yqiwvbLgHESO7SVHEb+q1vcPda71HfF5Nn/R3JYYApZX/orHs+TS/b/0EB+a+WxH7pA/7n/uUrrq
d7P0je/ceCRvp9QH1GxtOsj+SpuA9Rmnj+RIgeo3T80/laisYetSLD+kb9HxCXr0eo79I3gdx5qc
D1Tp+aPylIAeqdPzR+VySmDLKy6xwcC0EAmRA0CSkz+cs+I/Ikkp/9H0bpTmu+1lkQMmwS3y2hWT
/TB/xZ/6pqoYdL8qvLrddbXtybAH1nYYiBt+l7fd/no+Pi+he2r1rbfY477Xbnaub+dASU2h/Pu/
qN/K9O3+cd8AoBn6dw3O+g3v5vThn6R3ud27pKXr+nb/AFh/1LU7OXf1lCtnvt9ztHDv/JanYz6X
ud9LxSUyr+j8z+VRx/5ofF35SlWz2/Sdye/mo0MmoHc7k9/MpKZj+Y/s/wAE7v5o/wBX+CgGfoZ3
O+j4+SdzP0RO530T38klMn/zf3flVTq1hGKKWAusyHsrDWxMFzfUf7vza2KxcGsqL3PLWtEkkwAB
3VZlZsBzLC4F5a2ppMFte5p/zrfpv/zED2XR09R/R/GTccAA0DQAiFXpGzLuZ2L22Af1mbP+qqRn
sjb7ncjugPYG9Qq9zv0tbhz3ZqP/AD65I9FR6juPy9TZd9Nnz/Ikf5wfA/laouZ72e53fv5JFn6Q
Dc7g9/6qK1l/hT/VH5Uh/OH+qPyuUdn6Q+530fHzSDP0h9zuB3+KSmTP5yz4j8iSixvvsEnUjWfJ
JJT/AP/S9F6QXbcoOa1pGTYIb8Qdf5StH+mD/iz/ANU1UcV2WKsv7HXUbBk2AB5c1p0+k4t3+7ej
Yzs43NOU2tl2x0isktjc3bq4BJTaH8+7+o38r07f5x3wCgPU9d/0foN8fF6cep6jvo9vHzSUvX9O
3+sP+panZy7+soV+pvt+j9IeP7rU7PV930fpeaSmVf0fmfyqOP8AzQ+LvylKv1dv5vJ8fEqOP6vp
D6PJ8fEpKZt/mP7P8EHNvsrxttG05Fo20h30Zj6T9v8Ag2N9z1J1hrxXWWFrWMYXOcZgACSSgYws
urOa6P0tcUtM+2siW/2rfpvQPZdEfpEaD8Zfur3YDL6S3MccgGJrPtr5H+Db/wCjPUVq/wDm/wC0
3/qmpn+ps7dvHxCa/wBT0/zfpN8f3mo0gyJ3O3Tp9jN/5v8AWCq9Q3sfj5LSA2iwm0ESdjmuY/b/
AFP5xWH+r7fo/SHik8PdtDg0gkgjXwckVRNG/wCVHdkTL2R5/kTn+cHwP5WqniG2t32V0F1GjSSZ
NZH6J3/ov/rasn1fUH0Zg+P8lIKIo0y/wp/qj8qcfzh/qj8rlD9J6p+j9EePikPV9R30eB4+LkkM
mfzlnxH5ElFm/fZxMiPuSSU//9P0XpH/AGs9u0nKs3azJ9uqtH+mD/iz/wBU1CaxuBTkX2Fz2ue6
521pJEwNrWDc53ChjZlWTc26sPDSxwh7HNOjm/muG5JTaH9Id/Ub+V6dv8474BQDx67tD9FvY+L0
4ePUdoe3Y+aSl6/p2/1h/wBS1Ozl39ZQreN9uh+kOx/danY8e7Q/S8CkplX9D5n8pUcePRHxd+Up
V2DbweT2Piqr7TYxmLWXB1m42OAMtrk7j/Wf/Ns/8wSSBZWYRnMDgd2GwS0jUWuH53/Esd/26/8A
kfTuu/mj/V/ghVenXjNrrZsY1kNaGkAADgKbnj0jofo+B8EAmRvb5Rsyf/N/d+VNf/N/2m/9U1M9
42cHt2PiE17x6fB+k3sf3morWdn5v9YJ3fSZ8f4FQfYPbofpDsU7rBuZoefA+BSUhycZ9mRVdVaa
rGBzeAWuBj22t+l7dv77FB2ZdRexuXVtYWunIrO6sat/nG/zlf8A1H/CKw543s0PfsfBIvb6g0PB
7H+ShS4S2BFgfQ/au1zXP3NMgtBBHEKQ/nD/AFR+VyouxjVkG7Ec6s7daCD6LjMk7AP0dn/CMUTm
2ZFrsatj6bg0G4lp9jZd7q3fQsdZ/gv/AARK08F6xNjr/V/vNmnJqfkZFbSZqc1ryQQ2XDRrX/Rc
5JMzHx/Ssx9h9IQNus8Tu/e37vdvSS1R6L6/y/S/9Af/1PVUE/0wf8Wf+qajKndbe3Pa2qn1B6RO
8uDWg7h7T9J//QSSBf8AaabA/n3f1G/lenb/ADjvgFVa3qLsp5L6a27Gw0Nc8zL/AM7fV/1CduPl
uvs9TKOw7dra2BhHP0nu9VzkL8E8I/eH/O/71sV/Tt/rD/qWqL7q6GPssMDdA7kk8Na0fSc5V6cC
tlt7qrba3ueC528uk7WcttNjP+gpY2I8XPuyLfXsa4ioloaGNIHDW+31P3rUteyqjvxfSql/3Sse
zqD65NFdfudAdYSYk7d2yvbu/tJdNptZSbL9pvtc4vLJ2gAuFbGbvdta1Wa/ofM/lKjjx6Ijxd+U
pUoy0IAEb7f+hLj+Y/s/wTu/mj/V/gmEeh5bf4J3fzJ/q/wRWqf/ADf3flTX/wA3/ab/ANU1PZ/N
/d+VNfHp6/vN/wCqakpez83+sE7vpM+P8Cms/N/rBJ30mfH+BSUp302fNI/zg+B/K1J302fP8iR/
nB8D+VqSlf4U/wBUflSH84f6o/K5L/Cn+qPypD+cP9UflckpTP5yz4j8iSTP5yz4j8iSSn//1fVV
VZhBmS57AwUPDnOZtlxtc4OdZ6h/N2/mK0kkpoV4mcMve99Jx9zvYK4ft93psL/5CJTi5Dcix1zq
nUmdjGshwGmzc787b71bSSU0sXEymPByX1WAthwZWGy7Ta//ADUQY1gruE1+o4uNLtghoI/R7x/h
NrlZSSU0cbEzGi77Q+l+7+Y2V7dv9b99KvEzG4jmOfScmQW2CqGAe3dNW7873/nK8kkpzrSMLFe7
MsrlzttT/T9rZHta9rB+b7lXsyqxhVWsysf6Wyy01yxzvpbdrf5v2LYPH96bt2/gkpxG5rXYw/XM
Z1rHg2OFRc3ZG7ZsH9R/vVmqvJysemyi6lzD/OONP0iCdWNd9D81aXbtynH+sJKagxcgVVAuqdY1
02uLIDmyfoj8x6jlYua4u+yupYDGzezcWn88/wCarySSmlZi5Z2+m6lpAbJLJ1kepH9f3JrMTLc5
/pvqYN01n0wSG/uOV5JJTVOPb9rDx6f2bbDmbffu/r/uoLcTqPrhz30eiCNwFfuLfb7d3+etBJJT
QbjdTDnA2UemXyGivUtlujtfp7WuSV9JJT//2f/tMspQaG90b3Nob3AgMy4wADhCSU0EJQAAAAAA
EAAAAAAAAAAAAAAAAAAAAAA4QklNA+oAAAAAHbA8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5n
PSJVVEYtOCI/Pgo8IURPQ1RZUEUgcGxpc3QgUFVCTElDICItLy9BcHBsZSBDb21wdXRlci8vRFRE
IFBMSVNUIDEuMC8vRU4iICJodHRwOi8vd3d3LmFwcGxlLmNvbS9EVERzL1Byb3BlcnR5TGlzdC0x
LjAuZHRkIj4KPHBsaXN0IHZlcnNpb249IjEuMCI+CjxkaWN0PgoJPGtleT5jb20uYXBwbGUucHJp
bnQuUGFnZUZvcm1hdC5QTUhvcml6b250YWxSZXM8L2tleT4KCTxkaWN0PgoJCTxrZXk+Y29tLmFw
cGxlLnByaW50LnRpY2tldC5jcmVhdG9yPC9rZXk+CgkJPHN0cmluZz5jb20uYXBwbGUucHJpbnRp
bmdtYW5hZ2VyPC9zdHJpbmc+CgkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0Lml0ZW1BcnJh
eTwva2V5PgoJCTxhcnJheT4KCQkJPGRpY3Q+CgkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC5QYWdl
Rm9ybWF0LlBNSG9yaXpvbnRhbFJlczwva2V5PgoJCQkJPHJlYWw+NzI8L3JlYWw+CgkJCQk8a2V5
PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY2xpZW50PC9rZXk+CgkJCQk8c3RyaW5nPmNvbS5hcHBs
ZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tl
dC5tb2REYXRlPC9rZXk+CgkJCQk8ZGF0ZT4yMDA1LTAzLTIxVDAxOjA3OjA1WjwvZGF0ZT4KCQkJ
CTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCTxpbnRlZ2Vy
PjA8L2ludGVnZXI+CgkJCTwvZGljdD4KCQk8L2FycmF5PgoJPC9kaWN0PgoJPGtleT5jb20uYXBw
bGUucHJpbnQuUGFnZUZvcm1hdC5QTU9yaWVudGF0aW9uPC9rZXk+Cgk8ZGljdD4KCQk8a2V5PmNv
bS5hcHBsZS5wcmludC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCTxzdHJpbmc+Y29tLmFwcGxlLnBy
aW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5pdGVt
QXJyYXk8L2tleT4KCQk8YXJyYXk+CgkJCTxkaWN0PgoJCQkJPGtleT5jb20uYXBwbGUucHJpbnQu
UGFnZUZvcm1hdC5QTU9yaWVudGF0aW9uPC9rZXk+CgkJCQk8aW50ZWdlcj4xPC9pbnRlZ2VyPgoJ
CQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJPHN0cmluZz5j
b20uYXBwbGUucHJpbnRpbmdtYW5hZ2VyPC9zdHJpbmc+CgkJCQk8a2V5PmNvbS5hcHBsZS5wcmlu
dC50aWNrZXQubW9kRGF0ZTwva2V5PgoJCQkJPGRhdGU+MjAwNS0wMy0yMVQwMTowNzowNVo8L2Rh
dGU+CgkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuc3RhdGVGbGFnPC9rZXk+CgkJCQk8
aW50ZWdlcj4wPC9pbnRlZ2VyPgoJCQk8L2RpY3Q+CgkJPC9hcnJheT4KCTwvZGljdD4KCTxrZXk+
Y29tLmFwcGxlLnByaW50LlBhZ2VGb3JtYXQuUE1TY2FsaW5nPC9rZXk+Cgk8ZGljdD4KCQk8a2V5
PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCTxzdHJpbmc+Y29tLmFwcGxl
LnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5p
dGVtQXJyYXk8L2tleT4KCQk8YXJyYXk+CgkJCTxkaWN0PgoJCQkJPGtleT5jb20uYXBwbGUucHJp
bnQuUGFnZUZvcm1hdC5QTVNjYWxpbmc8L2tleT4KCQkJCTxyZWFsPjE8L3JlYWw+CgkJCQk8a2V5
PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY2xpZW50PC9rZXk+CgkJCQk8c3RyaW5nPmNvbS5hcHBs
ZS5wcmludGluZ21hbmFnZXI8L3N0cmluZz4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tl
dC5tb2REYXRlPC9rZXk+CgkJCQk8ZGF0ZT4yMDA1LTAzLTIxVDAxOjA3OjA1WjwvZGF0ZT4KCQkJ
CTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5zdGF0ZUZsYWc8L2tleT4KCQkJCTxpbnRlZ2Vy
PjA8L2ludGVnZXI+CgkJCTwvZGljdD4KCQk8L2FycmF5PgoJPC9kaWN0PgoJPGtleT5jb20uYXBw
bGUucHJpbnQuUGFnZUZvcm1hdC5QTVZlcnRpY2FsUmVzPC9rZXk+Cgk8ZGljdD4KCQk8a2V5PmNv
bS5hcHBsZS5wcmludC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCTxzdHJpbmc+Y29tLmFwcGxlLnBy
aW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5pdGVt
QXJyYXk8L2tleT4KCQk8YXJyYXk+CgkJCTxkaWN0PgoJCQkJPGtleT5jb20uYXBwbGUucHJpbnQu
UGFnZUZvcm1hdC5QTVZlcnRpY2FsUmVzPC9rZXk+CgkJCQk8cmVhbD43MjwvcmVhbD4KCQkJCTxr
ZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5jbGllbnQ8L2tleT4KCQkJCTxzdHJpbmc+Y29tLmFw
cGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlj
a2V0Lm1vZERhdGU8L2tleT4KCQkJCTxkYXRlPjIwMDUtMDMtMjFUMDE6MDc6MDVaPC9kYXRlPgoJ
CQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LnN0YXRlRmxhZzwva2V5PgoJCQkJPGludGVn
ZXI+MDwvaW50ZWdlcj4KCQkJPC9kaWN0PgoJCTwvYXJyYXk+Cgk8L2RpY3Q+Cgk8a2V5PmNvbS5h
cHBsZS5wcmludC5QYWdlRm9ybWF0LlBNVmVydGljYWxTY2FsaW5nPC9rZXk+Cgk8ZGljdD4KCQk8
a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCTxzdHJpbmc+Y29tLmFw
cGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tl
dC5pdGVtQXJyYXk8L2tleT4KCQk8YXJyYXk+CgkJCTxkaWN0PgoJCQkJPGtleT5jb20uYXBwbGUu
cHJpbnQuUGFnZUZvcm1hdC5QTVZlcnRpY2FsU2NhbGluZzwva2V5PgoJCQkJPHJlYWw+MTwvcmVh
bD4KCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5jbGllbnQ8L2tleT4KCQkJCTxzdHJp
bmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQkJPGtleT5jb20uYXBwbGUu
cHJpbnQudGlja2V0Lm1vZERhdGU8L2tleT4KCQkJCTxkYXRlPjIwMDUtMDMtMjFUMDE6MDc6MDVa
PC9kYXRlPgoJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LnN0YXRlRmxhZzwva2V5PgoJ
CQkJPGludGVnZXI+MDwvaW50ZWdlcj4KCQkJPC9kaWN0PgoJCTwvYXJyYXk+Cgk8L2RpY3Q+Cgk8
a2V5PmNvbS5hcHBsZS5wcmludC5zdWJUaWNrZXQucGFwZXJfaW5mb190aWNrZXQ8L2tleT4KCTxk
aWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3JtYXQuUE1BZGp1c3RlZFBhZ2VSZWN0
PC9rZXk+CgkJPGRpY3Q+CgkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5jcmVhdG9yPC9r
ZXk+CgkJCTxzdHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQk8a2V5
PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+CgkJCTxhcnJheT4KCQkJCTxk
aWN0PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3JtYXQuUE1BZGp1c3RlZFBhZ2VS
ZWN0PC9rZXk+CgkJCQkJPGFycmF5PgoJCQkJCQk8cmVhbD4wLjA8L3JlYWw+CgkJCQkJCTxyZWFs
PjAuMDwvcmVhbD4KCQkJCQkJPHJlYWw+NzM0PC9yZWFsPgoJCQkJCQk8cmVhbD41NzY8L3JlYWw+
CgkJCQkJPC9hcnJheT4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY2xpZW50PC9r
ZXk+CgkJCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnRpbmdtYW5hZ2VyPC9zdHJpbmc+CgkJCQkJ
PGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0Lm1vZERhdGU8L2tleT4KCQkJCQk8ZGF0ZT4yMDA1
LTAzLTIxVDAxOjA3OjA1WjwvZGF0ZT4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQu
c3RhdGVGbGFnPC9rZXk+CgkJCQkJPGludGVnZXI+MDwvaW50ZWdlcj4KCQkJCTwvZGljdD4KCQkJ
PC9hcnJheT4KCQk8L2RpY3Q+CgkJPGtleT5jb20uYXBwbGUucHJpbnQuUGFnZUZvcm1hdC5QTUFk
anVzdGVkUGFwZXJSZWN0PC9rZXk+CgkJPGRpY3Q+CgkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRp
Y2tldC5jcmVhdG9yPC9rZXk+CgkJCTxzdHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdlcjwv
c3RyaW5nPgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+CgkJ
CTxhcnJheT4KCQkJCTxkaWN0PgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhZ2VGb3JtYXQu
UE1BZGp1c3RlZFBhcGVyUmVjdDwva2V5PgoJCQkJCTxhcnJheT4KCQkJCQkJPHJlYWw+LTE4PC9y
ZWFsPgoJCQkJCQk8cmVhbD4tMTg8L3JlYWw+CgkJCQkJCTxyZWFsPjc3NDwvcmVhbD4KCQkJCQkJ
PHJlYWw+NTk0PC9yZWFsPgoJCQkJCTwvYXJyYXk+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQu
dGlja2V0LmNsaWVudDwva2V5PgoJCQkJCTxzdHJpbmc+Y29tLmFwcGxlLnByaW50aW5nbWFuYWdl
cjwvc3RyaW5nPgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5tb2REYXRlPC9rZXk+
CgkJCQkJPGRhdGU+MjAwNS0wMy0yMVQwMTowNzowNVo8L2RhdGU+CgkJCQkJPGtleT5jb20uYXBw
bGUucHJpbnQudGlja2V0LnN0YXRlRmxhZzwva2V5PgoJCQkJCTxpbnRlZ2VyPjA8L2ludGVnZXI+
CgkJCQk8L2RpY3Q+CgkJCTwvYXJyYXk+CgkJPC9kaWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50
LlBhcGVySW5mby5QTVBhcGVyTmFtZTwva2V5PgoJCTxkaWN0PgoJCQk8a2V5PmNvbS5hcHBsZS5w
cmludC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludC5wbS5Q
b3N0U2NyaXB0PC9zdHJpbmc+CgkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5pdGVtQXJy
YXk8L2tleT4KCQkJPGFycmF5PgoJCQkJPGRpY3Q+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQu
UGFwZXJJbmZvLlBNUGFwZXJOYW1lPC9rZXk+CgkJCQkJPHN0cmluZz5uYS1sZXR0ZXI8L3N0cmlu
Zz4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY2xpZW50PC9rZXk+CgkJCQkJPHN0
cmluZz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNjcmlwdDwvc3RyaW5nPgoJCQkJCTxrZXk+Y29t
LmFwcGxlLnByaW50LnRpY2tldC5tb2REYXRlPC9rZXk+CgkJCQkJPGRhdGU+MjAwMy0wNy0wMVQx
Nzo0OTozNlo8L2RhdGU+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LnN0YXRlRmxh
Zzwva2V5PgoJCQkJCTxpbnRlZ2VyPjE8L2ludGVnZXI+CgkJCQk8L2RpY3Q+CgkJCTwvYXJyYXk+
CgkJPC9kaWN0PgoJCTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5mby5QTVVuYWRqdXN0ZWRQ
YWdlUmVjdDwva2V5PgoJCTxkaWN0PgoJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQuY3Jl
YXRvcjwva2V5PgoJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludC5wbS5Qb3N0U2NyaXB0PC9zdHJp
bmc+CgkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5pdGVtQXJyYXk8L2tleT4KCQkJPGFy
cmF5PgoJCQkJPGRpY3Q+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQuUGFwZXJJbmZvLlBNVW5h
ZGp1c3RlZFBhZ2VSZWN0PC9rZXk+CgkJCQkJPGFycmF5PgoJCQkJCQk8cmVhbD4wLjA8L3JlYWw+
CgkJCQkJCTxyZWFsPjAuMDwvcmVhbD4KCQkJCQkJPHJlYWw+NzM0PC9yZWFsPgoJCQkJCQk8cmVh
bD41NzY8L3JlYWw+CgkJCQkJPC9hcnJheT4KCQkJCQk8a2V5PmNvbS5hcHBsZS5wcmludC50aWNr
ZXQuY2xpZW50PC9rZXk+CgkJCQkJPHN0cmluZz5jb20uYXBwbGUucHJpbnRpbmdtYW5hZ2VyPC9z
dHJpbmc+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0Lm1vZERhdGU8L2tleT4KCQkJ
CQk8ZGF0ZT4yMDA1LTAzLTIxVDAxOjA3OjA1WjwvZGF0ZT4KCQkJCQk8a2V5PmNvbS5hcHBsZS5w
cmludC50aWNrZXQuc3RhdGVGbGFnPC9rZXk+CgkJCQkJPGludGVnZXI+MDwvaW50ZWdlcj4KCQkJ
CTwvZGljdD4KCQkJPC9hcnJheT4KCQk8L2RpY3Q+CgkJPGtleT5jb20uYXBwbGUucHJpbnQuUGFw
ZXJJbmZvLlBNVW5hZGp1c3RlZFBhcGVyUmVjdDwva2V5PgoJCTxkaWN0PgoJCQk8a2V5PmNvbS5h
cHBsZS5wcmludC50aWNrZXQuY3JlYXRvcjwva2V5PgoJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmlu
dC5wbS5Qb3N0U2NyaXB0PC9zdHJpbmc+CgkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5p
dGVtQXJyYXk8L2tleT4KCQkJPGFycmF5PgoJCQkJPGRpY3Q+CgkJCQkJPGtleT5jb20uYXBwbGUu
cHJpbnQuUGFwZXJJbmZvLlBNVW5hZGp1c3RlZFBhcGVyUmVjdDwva2V5PgoJCQkJCTxhcnJheT4K
CQkJCQkJPHJlYWw+LTE4PC9yZWFsPgoJCQkJCQk8cmVhbD4tMTg8L3JlYWw+CgkJCQkJCTxyZWFs
Pjc3NDwvcmVhbD4KCQkJCQkJPHJlYWw+NTk0PC9yZWFsPgoJCQkJCTwvYXJyYXk+CgkJCQkJPGtl
eT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNsaWVudDwva2V5PgoJCQkJCTxzdHJpbmc+Y29tLmFw
cGxlLnByaW50aW5nbWFuYWdlcjwvc3RyaW5nPgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRp
Y2tldC5tb2REYXRlPC9rZXk+CgkJCQkJPGRhdGU+MjAwNS0wMy0yMVQwMTowNzowNVo8L2RhdGU+
CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LnN0YXRlRmxhZzwva2V5PgoJCQkJCTxp
bnRlZ2VyPjA8L2ludGVnZXI+CgkJCQk8L2RpY3Q+CgkJCTwvYXJyYXk+CgkJPC9kaWN0PgoJCTxr
ZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5mby5wcGQuUE1QYXBlck5hbWU8L2tleT4KCQk8ZGlj
dD4KCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0LmNyZWF0b3I8L2tleT4KCQkJPHN0cmlu
Zz5jb20uYXBwbGUucHJpbnQucG0uUG9zdFNjcmlwdDwvc3RyaW5nPgoJCQk8a2V5PmNvbS5hcHBs
ZS5wcmludC50aWNrZXQuaXRlbUFycmF5PC9rZXk+CgkJCTxhcnJheT4KCQkJCTxkaWN0PgoJCQkJ
CTxrZXk+Y29tLmFwcGxlLnByaW50LlBhcGVySW5mby5wcGQuUE1QYXBlck5hbWU8L2tleT4KCQkJ
CQk8c3RyaW5nPlVTIExldHRlcjwvc3RyaW5nPgoJCQkJCTxrZXk+Y29tLmFwcGxlLnByaW50LnRp
Y2tldC5jbGllbnQ8L2tleT4KCQkJCQk8c3RyaW5nPmNvbS5hcHBsZS5wcmludC5wbS5Qb3N0U2Ny
aXB0PC9zdHJpbmc+CgkJCQkJPGtleT5jb20uYXBwbGUucHJpbnQudGlja2V0Lm1vZERhdGU8L2tl
eT4KCQkJCQk8ZGF0ZT4yMDAzLTA3LTAxVDE3OjQ5OjM2WjwvZGF0ZT4KCQkJCQk8a2V5PmNvbS5h
cHBsZS5wcmludC50aWNrZXQuc3RhdGVGbGFnPC9rZXk+CgkJCQkJPGludGVnZXI+MTwvaW50ZWdl
cj4KCQkJCTwvZGljdD4KCQkJPC9hcnJheT4KCQk8L2RpY3Q+CgkJPGtleT5jb20uYXBwbGUucHJp
bnQudGlja2V0LkFQSVZlcnNpb248L2tleT4KCQk8c3RyaW5nPjAwLjIwPC9zdHJpbmc+CgkJPGtl
eT5jb20uYXBwbGUucHJpbnQudGlja2V0LnByaXZhdGVMb2NrPC9rZXk+CgkJPGZhbHNlLz4KCQk8
a2V5PmNvbS5hcHBsZS5wcmludC50aWNrZXQudHlwZTwva2V5PgoJCTxzdHJpbmc+Y29tLmFwcGxl
LnByaW50LlBhcGVySW5mb1RpY2tldDwvc3RyaW5nPgoJPC9kaWN0PgoJPGtleT5jb20uYXBwbGUu
cHJpbnQudGlja2V0LkFQSVZlcnNpb248L2tleT4KCTxzdHJpbmc+MDAuMjA8L3N0cmluZz4KCTxr
ZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC5wcml2YXRlTG9jazwva2V5PgoJPGZhbHNlLz4KCTxr
ZXk+Y29tLmFwcGxlLnByaW50LnRpY2tldC50eXBlPC9rZXk+Cgk8c3RyaW5nPmNvbS5hcHBsZS5w
cmludC5QYWdlRm9ybWF0VGlja2V0PC9zdHJpbmc+CjwvZGljdD4KPC9wbGlzdD4KOEJJTQPpAAAA
AAB4AAMAAABIAEgAAAAAAt4CQP/u/+4DBgJSA2cFKAP8AAIAAABIAEgAAAAAAtgCKAABAAAAZAAA
AAEAAwMDAAAAAX//AAEAAQAAAAAAAAAAAAAAAGgIABkBkAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOEJJTQPtAAAAAAAQAEgAAAABAAIASAAAAAEAAjhCSU0EJgAAAAAADgAAAAAAAAAA
AAA/gAAAOEJJTQQNAAAAAAAEAAAAHjhCSU0EGQAAAAAABAAAAB44QklNA/MAAAAAAAkAAAAAAAAA
AAEAOEJJTQQKAAAAAAABAAA4QklNJxAAAAAAAAoAAQAAAAAAAAACOEJJTQP1AAAAAABIAC9mZgAB
AGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAABAFoAAAAGAAAAAAABADUAAAABAC0A
AAAGAAAAAAABOEJJTQP4AAAAAABwAAD/////////////////////////////A+gAAAAA////////
/////////////////////wPoAAAAAP////////////////////////////8D6AAAAAD/////////
////////////////////A+gAADhCSU0ECAAAAAAAEAAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAA
AAQAAAAAOEJJTQQaAAAAAANTAAAABgAAAAAAAAAAAAAAagAAAJYAAAAPAGwAZQBvAG4AaQBkADIA
MAAwADEAYwBvAHUAbgB0AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAACWAAAAagAA
AAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABAAAAABAAAAAAAAbnVsbAAAAAIAAAAG
Ym91bmRzT2JqYwAAAAEAAAAAAABSY3QxAAAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcA
AAAAAAAAAEJ0b21sb25nAAAAagAAAABSZ2h0bG9uZwAAAJYAAAAGc2xpY2VzVmxMcwAAAAFPYmpj
AAAAAQAAAAAABXNsaWNlAAAAEgAAAAdzbGljZUlEbG9uZwAAAAAAAAAHZ3JvdXBJRGxvbmcAAAAA
AAAABm9yaWdpbmVudW0AAAAMRVNsaWNlT3JpZ2luAAAADWF1dG9HZW5lcmF0ZWQAAAAAVHlwZWVu
dW0AAAAKRVNsaWNlVHlwZQAAAABJbWcgAAAABmJvdW5kc09iamMAAAABAAAAAAAAUmN0MQAAAAQA
AAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAAGoAAAAAUmdodGxv
bmcAAACWAAAAA3VybFRFWFQAAAABAAAAAAAAbnVsbFRFWFQAAAABAAAAAAAATXNnZVRFWFQAAAAB
AAAAAAAGYWx0VGFnVEVYVAAAAAEAAAAAAA5jZWxsVGV4dElzSFRNTGJvb2wBAAAACGNlbGxUZXh0
VEVYVAAAAAEAAAAAAAlob3J6QWxpZ25lbnVtAAAAD0VTbGljZUhvcnpBbGlnbgAAAAdkZWZhdWx0
AAAACXZlcnRBbGlnbmVudW0AAAAPRVNsaWNlVmVydEFsaWduAAAAB2RlZmF1bHQAAAALYmdDb2xv
clR5cGVlbnVtAAAAEUVTbGljZUJHQ29sb3JUeXBlAAAAAE5vbmUAAAAJdG9wT3V0c2V0bG9uZwAA
AAAAAAAKbGVmdE91dHNldGxvbmcAAAAAAAAADGJvdHRvbU91dHNldGxvbmcAAAAAAAAAC3JpZ2h0
T3V0c2V0bG9uZwAAAAAAOEJJTQQoAAAAAAAMAAAAAT/wAAAAAAAAOEJJTQQRAAAAAAABAQA4QklN
BBQAAAAAAAQAAAABOEJJTQQMAAAAAA67AAAAAQAAAJYAAABqAAABxAAAuygAAA6fABgAAf/Y/+AA
EEpGSUYAAQIBAEgASAAA/+0ADEFkb2JlX0NNAAL/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgM
CQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
AQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAz/wAARCABqAJYDASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwAB
AgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEA
AhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0
NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEA
AgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTx
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
1TU9n83935U18enr+83/AKpqSl7Pzf6wTu+kz4/wKaz83+sEnfSZ8f4FJSnfTZ80j/OD4H8rUnfT
Z8/yJH+cHwP5WpKV/hT/AFR+VIfzh/qj8rkv8Kf6o/KkP5w/1R+VySlM/nLPiPyJJM/nLPiPyJJK
f//V9VVVmEGZLnsDBQ8Oc5m2XG1zg51nqH83b+YrSSSmhXiZwy9730nH3O9grh+33emwv/kIlOLk
NyLHXOqdSZ2MayHAabNzvztvvVtJJTSxcTKY8HJfVYC2HBlYbLtNr/8ANRBjWCu4TX6ji40u2CGg
j9HvH+E2uVlJJTRxsTMaLvtD6X7v5jZXt2/1v30q8TMbiOY59JyZBbYKoYB7d01bvzvf+crySSnO
tIwsV7syyuXO21P9P2tke1r2sH5vuVezKrGFVazKx/pbLLTXLHO+lt2t/m/Ytg8f3pu3b+CSnEbm
tdjD9cxnWseDY4VFzdkbtmwf1H+9Waq8nKx6bKLqXMP8440/SIJ1Y130PzVpdu3Kcf6wkpqDFyBV
UC6p1jXTa4sgObJ+iPzHqOVi5ri77K6lgMbN7Nxafzz/AJqvJJKaVmLlnb6bqWkBsksnWR6kf1/c
msxMtzn+m+pg3TWfTBIb+45XkklNU49v2sPHp/ZtsOZt9+7+v+6gtxOo+uHPfR6II3AV+4t9vt3f
560EklNBuN1MOcDZR6ZfIaK9S2W6O1+nta5JX0klP//ZADhCSU0EIQAAAAAAUwAAAAEBAAAADwBB
AGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAAABIAQQBkAG8AYgBlACAAUABoAG8AdABvAHMA
aABvAHAAIABDAFMAAAABADhCSU0EBgAAAAAABwAGAAAAAQEA/+EYBWh0dHA6Ly9ucy5hZG9iZS5j
b20veGFwLzEuMC8APD94cGFja2V0IGJlZ2luPSfvu78nIGlkPSdXNU0wTXBDZWhpSHpyZVN6TlRj
emtjOWQnPz4KPHg6eG1wbWV0YSB4bWxuczp4PSdhZG9iZTpuczptZXRhLycgeDp4bXB0az0nWE1Q
IHRvb2xraXQgMy4wLTI4LCBmcmFtZXdvcmsgMS42Jz4KPHJkZjpSREYgeG1sbnM6cmRmPSdodHRw
Oi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjJyB4bWxuczppWD0naHR0cDov
L25zLmFkb2JlLmNvbS9pWC8xLjAvJz4KCiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0ndXVp
ZDo1ZWU3MTI1Yi05YWVlLTExZDktYjVlYy1iMDAxZTllOGFlY2InCiAgeG1sbnM6ZXhpZj0naHR0
cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8nPgogIDxleGlmOkNvbG9yU3BhY2U+NDI5NDk2NzI5
NTwvZXhpZjpDb2xvclNwYWNlPgogIDxleGlmOlBpeGVsWERpbWVuc2lvbj4xNTA8L2V4aWY6UGl4
ZWxYRGltZW5zaW9uPgogIDxleGlmOlBpeGVsWURpbWVuc2lvbj4xMDY8L2V4aWY6UGl4ZWxZRGlt
ZW5zaW9uPgogPC9yZGY6RGVzY3JpcHRpb24+CgogPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9
J3V1aWQ6NWVlNzEyNWItOWFlZS0xMWQ5LWI1ZWMtYjAwMWU5ZThhZWNiJwogIHhtbG5zOnBkZj0n
aHR0cDovL25zLmFkb2JlLmNvbS9wZGYvMS4zLyc+CiA8L3JkZjpEZXNjcmlwdGlvbj4KCiA8cmRm
OkRlc2NyaXB0aW9uIHJkZjphYm91dD0ndXVpZDo1ZWU3MTI1Yi05YWVlLTExZDktYjVlYy1iMDAx
ZTllOGFlY2InCiAgeG1sbnM6cGhvdG9zaG9wPSdodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hv
cC8xLjAvJz4KICA8cGhvdG9zaG9wOkhpc3Rvcnk+PC9waG90b3Nob3A6SGlzdG9yeT4KIDwvcmRm
OkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSd1dWlkOjVlZTcxMjVi
LTlhZWUtMTFkOS1iNWVjLWIwMDFlOWU4YWVjYicKICB4bWxuczp0aWZmPSdodHRwOi8vbnMuYWRv
YmUuY29tL3RpZmYvMS4wLyc+CiAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlv
bj4KICA8dGlmZjpYUmVzb2x1dGlvbj43Mi8xPC90aWZmOlhSZXNvbHV0aW9uPgogIDx0aWZmOllS
ZXNvbHV0aW9uPjcyLzE8L3RpZmY6WVJlc29sdXRpb24+CiAgPHRpZmY6UmVzb2x1dGlvblVuaXQ+
MjwvdGlmZjpSZXNvbHV0aW9uVW5pdD4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3Jp
cHRpb24gcmRmOmFib3V0PSd1dWlkOjVlZTcxMjViLTlhZWUtMTFkOS1iNWVjLWIwMDFlOWU4YWVj
YicKICB4bWxuczp4YXA9J2h0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8nPgogIDx4YXA6Q3Jl
YXRlRGF0ZT4yMDA1LTAzLTIwVDE3OjA2OjUxLTA4OjAwPC94YXA6Q3JlYXRlRGF0ZT4KICA8eGFw
Ok1vZGlmeURhdGU+MjAwNS0wMy0yMFQxNzowODoxOS0wODowMDwveGFwOk1vZGlmeURhdGU+CiAg
PHhhcDpNZXRhZGF0YURhdGU+MjAwNS0wMy0yMFQxNzowODoxOS0wODowMDwveGFwOk1ldGFkYXRh
RGF0ZT4KICA8eGFwOkNyZWF0b3JUb29sPkFkb2JlIFBob3Rvc2hvcCBDUyBNYWNpbnRvc2g8L3hh
cDpDcmVhdG9yVG9vbD4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRm
OmFib3V0PSd1dWlkOjVlZTcxMjViLTlhZWUtMTFkOS1iNWVjLWIwMDFlOWU4YWVjYicKICB4bWxu
czp4YXBNTT0naHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyc+CiAgPHhhcE1NOkRvY3Vt
ZW50SUQ+YWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjVlZTcxMjVhLTlhZWUtMTFkOS1iNWVjLWIwMDFl
OWU4YWVjYjwveGFwTU06RG9jdW1lbnRJRD4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVz
Y3JpcHRpb24gcmRmOmFib3V0PSd1dWlkOjVlZTcxMjViLTlhZWUtMTFkOS1iNWVjLWIwMDFlOWU4
YWVjYicKICB4bWxuczpkYz0naHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8nPgogIDxk
Yzpmb3JtYXQ+aW1hZ2UvanBlZzwvZGM6Zm9ybWF0PgogPC9yZGY6RGVzY3JpcHRpb24+Cgo8L3Jk
ZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAKPD94cGFja2V0IGVuZD0ndyc/Pv/uAA5BZG9iZQBkQAAAAAH/2wCEAAICAgIC
AgICAgIDAgICAwQDAgIDBAUEBAQEBAUGBQUFBQUFBgYHBwgHBwYJCQoKCQkMDAwMDAwMDAwMDAwM
DAwBAwMDBQQFCQYGCQ0KCQoNDw4ODg4PDwwMDAwMDw8MDAwMDAwPDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAwMDP/AABEIAGoAlgMBEQACEQEDEQH/3QAEABP/xAGiAAAABwEBAQEBAAAAAAAAAAAE
BQMCBgEABwgJCgsBAAICAwEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAgEDAwIEAgYHAwQCBgJz
AQIDEQQABSESMUFRBhNhInGBFDKRoQcVsUIjwVLR4TMWYvAkcoLxJUM0U5KismNzwjVEJ5OjszYX
VGR0w9LiCCaDCQoYGYSURUaktFbTVSga8uPzxNTk9GV1hZWltcXV5fVmdoaWprbG1ub2N0dXZ3eH
l6e3x9fn9zhIWGh4iJiouMjY6PgpOUlZaXmJmam5ydnp+So6SlpqeoqaqrrK2ur6EQACAgECAwUF
BAUGBAgDA20BAAIRAwQhEjFBBVETYSIGcYGRMqGx8BTB0eEjQhVSYnLxMyQ0Q4IWklMlomOywgdz
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
rsVdirsVdirsVdir/9k=
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://www.google.com/images/poweredby_transparent/poweredby_999999.gif

R0lGODlhOAAUAPf/AE5kl9VMONO4No2OjvtROHWTdYSNnmyWbZdjXPtBKJeXl0x63P/ZQ0NmtFtr
lHR7jP9NNbGYPpOXn0uE/4B+fTdw7DrcQ214k4qKilxmhHJsa7xUR1eM/+NZRIWEhYxjXpJVTZKS
kmNldI6JiZqVlDdr3np+fTrhQqaSj3lycUJ9/3p1dXdmZH5+f3x8g1RmlG+ccFZkhoOBf5eYmnt5
eVxrj3R1e0VrwY+OjoeHitlqWzNz/3l1cj1oy42Mi4uLjJiYmImHhpOTk5mZmYaEg5SUlDrbQTvo
RFdokldhfo5fWjVt5oB4Zl5+wo1nYWdwhP/YNnei3mSOZpaVldTAXX2bzOxvV9Y/KUh22VajW1Hf
WS9x/V2BzXx7f6GXc6hzbWd6pT559G2GvFh/WJaWlpOUhF6P+H98e8hwXoCCg4GEhGGW/Ttr0GqU
6+w9JNFaSlJ4ymFogOnkWoyIh//WInBwdIJpZYlXUYt9VW92i/vSM0pmql6D0VJsqYmYs/E7IZBa
Udm6OImOj3NbW9m0KLF3cJZKSoSIicerM11vmYqYtIeBbrKgU5KJamyHw3mf1e5iT9LEZPRxXfs3
G6BERPfLHG6Ap8RrYHyTv2jPbaCNUEBt0LCYQfN0Yf9XQE1wwURuy+FfTepSQO9dSKxoYaV2cGhu
Z3V4djp3/zt4/4WHlERx0Ul00PdgS8VURW1yd3R5eY+PkGFnepNuaG5tcXSYcJSVl1x5upCYqYmG
iVCH/zxnyf/iPW2c/H6AgJySXnuEmvvNIlF81ezIOoGHgJOUlPHJMsSpQ3pubdKzQDxs2fRIMDFv
9JmZmpuYmNJVQzHUON1UQXag4Hal7ll8yI2djYt+fZGQkaidV2l1aGpvgGVlbaRQR2tvaf/UK3Bz
cLM5N5OUk3RycHV2dHie7YppZY5YU4J5Xy1s85CQkmKV+WaV/3RwbUVjqk9pql6G23+h2zveQ5SG
U5KEXVduolhvpZGUm5V7eI2bt/06IYOEioeHjDlozD9rzQAAAJmZmSH5BAEAAP8ALAAAAAA4ABQA
AAj/AP8JHEiwoMGDCBMqXMiwocOGuBxR42JJyEOF1TJpkXKRIDwsSOK8WBImkYKOBsMdOGIKZbNp
fXj4KDIlSIN2GFAaLHDi20F/QP39E0rw0QJ2ZAh6oGFRJ8Fa8cYNdEZQaFCCP9QBwJEQhQ5XHQLM
GRgpWaBhjQZi4kOuzSpVtSyc+uf12SgEAq0OJQhsXZKuklgcUuMmQa5/cji52KeJwbx/0upRqJEq
gxAYFmCR6MRCUDkIdhSC0RUjIZpoaQRa82SoDC8NQP4BMVYpxxoRsSvw+4fZRClRLb5sAAE74YUJ
DWILnKEInx8DVgIMEAikFThsUHgMPObNBocMAm/d/7hsxMSlZR8Q0PixMFaFHS4GGkj0jsOTDvk8
DIRE6ReDcwMxQscKPaCjjz2s4AZDeaQQsMJDeahQwjUDAWGJCq/MAoESAilAwCA+6EHIQAJEkAMO
McDRSxw5wXBCCyNAcMVJDtWwAzMXpDODPU1UUMc/3EziRCGhmOPLP4sEw4kXVCBCS1L/PKBLcv9k
Ac0YxSiRwB8bvHGPcgrZAAAbu/TziQPbUPCPAsgAokQKHtBIAR7yMNFFCP9UsQA9e6DSAxnEdJMN
eyncQRwGYCokBBEUyBAEDkUkylAUwojz6BM7aCPQEEM45Sl1ZgAA5iayfGrqQDds8YAtEojhDg2n
nhmKwwslKAOKA0zFeqoCRJwhgw806iqsUwEBADs=
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/jpg/fnv-email.jpg

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
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/png/rsc_at_swtch.com.png

iVBORw0KGgoAAAANSUhEUgAAAIEAAAAOCAYAAAAIRn9dAAAACXBIWXMAACTpAAAk6QFQJOf4AAAK
T2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AU
kSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXX
Pues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgAB
eNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAt
AGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3
AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dX
Lh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+
5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk
5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd
0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA
4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzA
BhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/ph
CJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5
h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+
Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQ
AkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+Io
UspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdp
r+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZ
D5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61Mb
U2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY
/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllir
SKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79u
p+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6Vh
lWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1
mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lO
k06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7Ry
FDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3I
veRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+B
Z7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/
0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5q
PNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIs
OpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5
hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQ
rAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9
rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1d
T1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aX
Dm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7
vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3S
PVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKa
RptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO
32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21
e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfV
P1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i
/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8
IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
YAAAOpgAABdvkl/FRgAAAuJJREFUeNrsWO1t4zAMZW8DreAVvIJvBHUEr6CO4BVyIzgjuCM4I6gj
uCP4/lDAuwfKph1ciqAVYASRJZofj4+UXuTrRisiUZ8rzDf6/yrPMaKIdCISRORVfoZ7TPq0lfe9
iFyewI4kIqs+409YfSOIyOx0WKNOfuToN4C5xWhPDYJfX8AAn07a/NDf7oEAHb5jZj4SBEmz+5Uc
P2omLUCvpRRcT2Tm2TGqPt96DJqpUYOwQmb0GqRV6XwihwXYs4pI1j1WH4B0n1VuCfSs+zsCCVO2
pUsL3y/0nGhuAbllLgEQ8WmdtmE5iPq+rGucDLTnu1btxDXJ8MsIesywtqWEW61SO8PLWYOfVbli
ZASFFgBB0LUIjIn2CGQ6Zt5KBk8qC4FyMRxe0yWBDdy8ZbK5o3UjBd9rWwsAG0D2SqCvAWBPfmcE
bSTGTAT0RHtnYjpOtn+YwEJINJyTQOBoODiSIYFkN0Zgghpwoe/0B3QRYJdAAOQ5lm2BwGNbawAP
9dgrQXvysyEbAxl3GtTCTMFIjFQDQaygdak0TouzM0aEtoRkVKwnQ4/oYhnYVShwMgLCIPDYVgPB
bDj/qO8sPyH9Y8mugWDeA4GnMfwUkd8icjMcXGqNp6F6B/q5afff0sVR+V7QIL0d0KWMP7quB2e9
6VwHwHh3BNdr29nLsj35Wz3FzbHmVGNoMUGtQUlA60tFmc5AdQf/Z6id2LjkHT0sXSxbBqDb0nw1
FRZhJvDadpYJPPKbimz8brqXCTwgiMYc1qkMinI97Q2qzndk154u7GDLSUPlEsoqBx7b7ikHHvm1
Ji6Rvv8dBJkyJEM2ReN4tXWD1leOQWzgVAHBli4cVG4GrTkhpigM1zttOwICPjV45Deqc6aA8zHx
LhCEiiIBFL3QMXIwgjNvnUEr5accRwe4pxg2SoFHF3T4YFDosEHPiyFzy7Zk+K0x5riDnw76rqEz
ft7RY6nENRp3IuPfAQB2IrAZpC9HzgAAAABJRU5ErkJggg==
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/png/pakin_at_lanl.gov.png

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
QmCC
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/png/ntldr_at_diskcryptor.net.png

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
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/png/richard_in_reading_at_yahoo.co.uk.png

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
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/png/peter.derivaz_at_gmail.com.png

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
------=_NextPart_000_9021_01614C9B.74ECCE6B
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.isthe.com/chongo/png/valid-html401.png

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
rkJggg==
------=_NextPart_000_9021_01614C9B.74ECCE6B--
