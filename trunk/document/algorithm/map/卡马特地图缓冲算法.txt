下面我详细介绍一个卡马克地图缓冲算法原理。我们需要一张地图换冲图， 为了实现平滑滚动的效果缓冲图的大小应该是手机屏幕宽高 ，这样内存中就会常驻 一张 手机屏幕大小的缓冲图。 如果人物向下方行走则表示地图向上移动，这时候屏幕 将被切割出来了2部分， 上半部分为缓冲图向上移动后的缓冲内容，下半部分则就是我们需要更新地图的部分，将更新后的下半部分与地图缓冲的上半部分结合起来绘制在屏幕中则完成了一次地图更新，这样可以大大提升游戏绘制地图的效率。如果不使用这种方式来更新地图 则地图每移动一次 都须要双for循环重新一个tile一个tile的绘制一遍效率会很低下。


如图所示  地图向上移动后更新绿色的地图部分 与 将上次缓冲的红色部分结合起来就是新的游戏地图，其它方向原理完全一样。
http://blog.csdn.net/xys289187120/article/details/6649274