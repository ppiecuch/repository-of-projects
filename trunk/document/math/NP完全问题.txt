NP就是Non-deterministic Polynomial的问题，也即是多项式复杂程度的非确定性问题。

有些计算问题是确定性的，比如加减  乘除之类，你只要按照公式推导，按部就班一步步来，就可以得到结果。
但是，有些问题是无法按部就班直接地计算出来。比如，找大质数的问题。有没有一个公式，你一套公式，就可以一步步推算出来，下一个质数应该是多少呢？
这样的公式是没有的。再比如，大的合数分解质因数的问题，有没有一个公式，把合数代进去，就直接可以算出，它的因子各自是多少？也没有这样的公式。

这种问题的答案，是无法直接计算得到的，只能通过间接的“猜算”来得到结果。这就是非确定性问题。而这些问题的通常有个算法，它不能直接告诉你答案是什么，
但可以告诉你，某个可能的结果是正确的答案还是错误的。这个可以告诉你“猜算”的答案正确与否的算法，假如可以在多项式时间内算出来，
就叫做多项式非确定性问题。而如果这个问题的所有可能答案，都是可以在多项式时间  多流水线调度实际上是一个NP完全问题内进行正确与否的验算的话，
就叫完全多项式非确定问题。

完全多项式非确定性问题可以用穷举法得到答案，一个个检验下去，最终便能得到结果。但是这样算法的复杂程度，是指数关系，
因此计算的时间随问题的复杂程度成指数的增长，很快便变得不可计算了。

人们发现，所有的完全多项式非确定性问题，都可以转换为一类叫做满足性问题的逻辑运算问题。既然这类问题的所有可能答案，都可以在多项式时间内计算，
人们於是就猜想，是否这类问题，存在一个确定性算法，可以在指数时间内，直接算出或是搜寻出正确的答案呢？这就是著名的NP=P？的猜想。

解决这个猜想，无非两种可能，一种是找到一个这样的算法，只要针对某个特定NP完全问题找到一个算法，所有这类问题都可以迎刃而解了，
因为他们可以转化为同一个问题。另外的一种可能，就是这样的算法是不存在的。那么就要从数学理论上证明它为什么不存在。  


http://baike.baidu.com/view/272414.htm