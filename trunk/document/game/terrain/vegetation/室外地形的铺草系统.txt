茂密的草地一直是3D游戏难以表现的地貌特征，其原因不外乎渲染草地需要大量的多边形和很高的像素填充率。但游戏界一直没有放弃对渲染草地的渴望，大概两年前，一些游戏的宣传文字中渐渐把茂密的草地作为自己的特色来宣传。《奇迹》这款固定视角游戏中随风摇曳的茂密草地给很多人留下了深刻印象。然而时至今日，草地渲染依然不是一件轻松的事情，象魔兽世界这样的大作也只是把草作为一种点缀，稀稀拉拉地放在地形上。

　　终于我也抵不住草地的诱惑，在地形编辑器中加入了铺草系统。系统实现的效果比较令人满意，总结起来有下面几个特点：
　　1.美术不需要提供草的模型，只要提供左右对称的草的贴图，系统自动生成十字交叉的面片。
　　2.通过VertexShader控制每棵草的上面四个顶点按一定规律做摆动，模拟微风吹动的效果。
　　3.从每棵草所在位置的地面上取得地面光照亮度信息作为这棵草的基本亮度，将上面四个顶点随机调亮一个幅度，将下面四个顶点随机调暗一个幅度，模拟草的光照不均匀的效果。
　　4.绘制通过视锥剪裁和以前提到的PVS信息剔除不可见Patch，将可见Patch上的草按种类排序更新到一个动态顶点Buffer。每种草通过一个DrawIndexedPrimitive调用全部绘制，总调用次数不会超过草的种类。
　　5.采用特殊的记录方式，一棵草在存盘文件中只占四个字节
　　6.铺草系统全面融合到现有的Undo/Redo架构中去

　　通过视锥剪裁和PVS剔除，加上很少的DIP调用，铺草系统达到了很好的绘制效率，今后的地形设计应该可以更加自由的表现草地效果，实现更丰富的地貌特征，带来更有趣的游戏体验。

长见识啦~ 
　回复　引用　查看　   


#2楼 2006-08-21 16:39 LOGOLS[未注册用户] 
说说存盘4个字节是怎么做到的？ 
　回复　引用　   


#3楼[楼主] 2006-08-21 18:02 cproom       
一个Patch是16*16的网格，为了保证草的定位有足够的精度将之二分，变成32*32（这里四分为64*64或者更高也是可以的），分别用一个字节记录每棵草的种类和最靠近的格子节点的x、ｙ坐标（整数值），一共是3个字节，为了四字节对齐增加一个空字节。打开场景时读取每棵草对应的格子节点坐标x和ｙ，由于存盘时只保留了按格子计算的整数坐标，为了让草看起来不是按格子那么整齐的排列，在水平坐标x,y上加一个随机数偏移量，偏移量的绝对值大小在零到半个格子宽度之间，这样草会随机均匀分布在地形上了。虽然每次读取场景草的位置都是随机的，但随机范围仅在半个格子之内，所以总体布局并没有什么大的变化，如果采用四分网格或者八分网格，这个随机量会更小。 
　回复　引用　查看　   


#4楼 2006-08-22 00:12 LOGOLS[未注册用户] 
呵呵.了解了. 
我当时想到的是一个position至少要8个字节(xy),没想到你用了格子进行线性压缩. 
　回复　引用　   


#5楼 2006-11-22 22:00 lurenjia[未注册用户] 
你好 
我想知道你做的场景中如何划分地形的湖泊，丘陵，草地的呢， 
应为我想针对各种地形做出特效 

　回复　引用　   


#6楼 2007-01-27 02:15 enjoy3d[未注册用户] 
----将可见Patch上的草按种类排序更新到一个动态顶点Buffer。每种草通过一个DrawIndexedPrimitive调用全部绘制，总调用次数不会超过草的种类。 

草渲染不需要按由远到近排序了再渲染吗? 

　回复　引用　   


#7楼[楼主] 2007-01-29 10:39 cproom       
草是用alpha test的方法绘制，不需要按到摄像机距离排序，如果要得到更好的效果是需要按距离排序的，不过这将消耗很多cpu时间，大量减少可以绘制的草的数量 
　回复　引用　查看　   


#8楼 2007-01-30 01:36 enjoy3d[未注册用户] 
我的想法是,近处用Alpha blend,远处用alpha test. 
另外将不同种类的的草的贴图合成一张大贴图,只是在不同种类的草在生成顶点时生成不同贴图坐标,这样所有草都只需要Draw一次就可以了,这样速度应该快些吧.不过这样就复杂多了... 
　回复　引用　   


#9楼 2007-09-21 14:50 liulong[未注册用户] 
动态顶点Buffer?你每一帧都重建顶点buffer？ 
　回复　引用　   


#10楼 2008-05-29 15:57 silenke[未注册用户] 
如果要进行可视剪裁的话，也只有每帧重建一次buffer了吧……？ 
http://www.cnblogs.com/cproom/archive/2006/08/18/480797.html