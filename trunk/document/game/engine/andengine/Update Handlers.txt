Hey guys. After looking at a post on the forum, it inspired me to quickly create this tutorial on Update Handlers.

So, what is an Update Handler? It is something which you can create, and register within your Engine or Scene so that it is run on every update that AndEngine does! These can be quite powerful, allowing you to run certain tasks every update without having to override the onManagedUpdate() function within a custom class.

So, how do we create these Update Handlers? Check out the code below:


Syntax: [ Download ] [ Hide ]
Syntax: [ Download ] [ Show ]
Using java Syntax Highlighting
this.scene.registerUpdateHandler(new IUpdateHandler() {
@Override
public void onUpdate(float pSecondsElapsed) {
        // TODO Auto-generated method stub
        //Your code to run here!
}
Parsed in 0.031 seconds, using GeSHi 1.0.8.4


So, as you can see you can create and register a new Update Handler within your Scene very easily, only using a few lines of code. Within the onUpdate() method, you will place your code that you want to run on every update.

There are endless uses for this sort of functionality. You can really start to customize your applications and games here!

Well, that's the end of this short tutorial. I hope it helps some people out.















Hi!

I agree that UpdateHandlers can be quite powerful, but it is more intelligent to use them as few as possible,as much as is necessary!

The problem is that the code will run EVERY f***ing frame. Also when there is no need to run your code. This can(!) make your game very slow.

In my opinion Listeners are the smarter tool, to make a performant game. I think that is the reason why Nicolas uses many listeners and no ("classic") main loop in AndEngine.

By the way, I am using also an UpdateHandler in my actual AndEngine project .

Greets,
Wiese82


http://www.andengine.org/forums/tutorials/update-handlers-using-their-power-t475.html