O3D使用可编程图形管线模型来代替固定功能管线。
可编程管线使用着色器语言(基于微软的HLSH和Nvidia的Cg)允许你通过vertex shaders和pixel shaders直接对GPU进行编程。
在可编程GPU出现之前，图形程序员被局限于固定功能管线，有关变换、灯光、纹理坐标和其它环境效果方面的算法被预先置于OpenGL和Direct3D这样的软件中，
由这些软件来控制图形硬件。在基于固定功能管线的系统中，对灯光、材质和纹理进行全局设置，然后图形信息被传入到这个管线中。
与此相反，使用可编程图形管线，开发人员可以完全控制在vertex shader 和pixel shader中所使用的算法。另外，光栅化和帧缓冲区操作也可以使用O3D API进行配置。

O3D可编程管线在顶点着色和像素着色的算法方面提供了很强的灵活性，下图显示了这个管线的主要组件：





vertex shader：由你所编写、借用或修改的算法所组成，这些算法计算每个顶点属性的值，与计算齐次空间中每个顶点的位置一样。

rasterizer：有一套可配置的状态集，这些状态集可以在O3D的State对象中进行设置，它用于内插顶点属性值，与计算诸如视口裁切和背面剔除相关的操作一样。

pixel shader：从rasterizer中接收输入，并输出图元中每个像素的颜色，你可以编写、借用或修改算法来修改这些像素的颜色。

Frame buffer operations：是一套可以O3D的State对象中进行设置的可配置状态集，这些操作被用来进行深度测试、模板测试和融合测试等。
