
SVN merge 三种方式
转载



1、Merge a range of revisions

2、Reintegrate a branch

3、Merge two different trees

――――――――――――――――――――――――――――――――――――――――――――――――――――――

以下是转载自chunanyong的一篇关于svn分支合并类型的文章，出处：http://chunanyong.iteye.com/blog/697255


合并的工作是把主干或者分支上合并范围内的所有改动列出，并对比当前工作副本的内容，由合并者手工修改冲突，然后提交到服务器的相应目录里。如果当前工作副本是主干，则合并的范围是分支上的改动，如果工作副本是分支的，则合并范围是主干上的改动，并且一定要注意，合并的起始位置URL一定要和当前的工作副本的URL是相同的。

 

一、合并一个范围的版本

    此类型应用最为广泛，主要是把分支中的修改合并到主干上来。在主干上点击右键选择合并，然后选择合并类型：合并一个范围的版本。

合并的源URL填写的是要合并的分支的URL，待合并的版本范围如果为空，则指的是合并分支上所有的版本，即自从分支创建以来到分支当前最新版本的所有演变。如果只是选择其中一个版本，或者几个版本，那么就表示只是将制定的n个版本的变化合并到主干上。如果只是选择其中一个版本，那么表示只是选择那个版本的修改，之前或之后的修改将不被采纳。

 

二、复兴合并

    复兴合并可以理解为是第一种合并类型的一种特例，在复兴合并中，主干可以理解为是自从开创分支之后没有任何修改，而分支是经过修改的，而且合并中分支是没有版本选择的。经过复兴合并，分支中所有的修改都会合并到主干中，合并的结果将使得分支和主干一模一样，从而可以删除分支。

 

三、合并两个不同的树

    此类型与前两种类型不同，第一种类型可以选择分支合并的版本，主干不能选择版本；第二种类型是主干和分支都不能选择合并的版本；而这种类型则是无论是主干还是分支都可以选择合并的版本，即可以选择过去的一个主干版本与分支的某个版本进行合并。合并的时候以选择的分支版本为主，如果选择的主干版本与分支版本有不同的地方，合并时主干部分将被放弃。

起始URL：选择主干目录的URL（应当和当前工作副本的URL一致，这个是所谓的合并点）

结束URL：选择要合并的分支的URL。

起始和结束的版本：一般起始版本应当找到最后一次同步时的版本，如果从没有同步过（第一次合并），则选择创建分支时的版本，结束版本一般是最新版本，如果你不想将某些内容合并进主干的话，也可以选择一个合并点。

 

实例：

主干A在95版本的时候创建分支B，此时两棵树都是95版本

1、我在分支B上增加文件test.txt，提交。此时版本库升级到了96版本。

2、我在A上选择合并类型1，合并分支最新版本，结果是把test.txt加入A

3、我在A上选择合并类型2，合并分支最新版本，结果同上；

4、我在A上选择合并类型3，合并分支最新版本，结果同上；

5、我在A上增加文件test2.txt，提交，此时版本库升级到了97版本；

6、我在A上选择合并类型1，合并分支最新版本，结果是把test.txt加入A；

7、我在A上选择合并类型2，合并分支最新版本，结果是把test.txt加入A；

8、我在A上选择合并类型3，主干选择当前97版本，合并分支最新版本，结果是把test.txt加入A，把test2.txt从A删除。

9、我在A上选择合并类型3，主干97以前的版本，合并分支最新版本，结果是把test.txt加入A，而A中保留着test2.txt。

 

将分支合并到主干上，首先需要在主干的工作副本下进行，合并的范围是从主干的上次合并的版本开始到分支上最新的版本结束，如果是第一次合并，则从主干创建分支的版本开始，所以每次合并要做好说明，在日志中体现，不然忘记了下次再合并就有点麻烦。其实，应当尽量避免一个分支合并多次，分支的作用一般为了解决bug，一旦bug对应结束了，分支的使命就结束了，以后再出现其他的问题，应当重新建立分支，这样就不会出现多次合并的问题了。


http://mark-ztw.iteye.com/blog/988392