全局变量(外部变量)的说明之前再冠以static 就构成了静态的全局变量。全局变量本身就是静态存储方式， 静态全局变量当然也是静态存储方式。 这两者在存储方式上并无不同。这两者的区别虽在于非静态全局变量的作用域是整个源程序， 当一个源程序由多个源文件组成时，非静态的全局变量在各个源文件中都是有效的。 而静态全局变量则限制了其作用域， 即只在定义该变量的源文件内有效， 在同一源程序的其它源文件中不能使用它。由于静态全局变量的作用域局限于一个源文件内，只能为该源文件内的函数公用， 因此可以避免在其它源文件中引起错误。
　　从以上分析可以看出， 把局部变量改变为静态变量后是改变了它的存储方式即改变了它的生存期。把全局变量改变为静态变量后是改变了它的作用域， 限制了它的使用范围。
　　static函数与普通函数作用域不同。仅在本文件。只在当前源文件中使用的函数应该说明为内部函数(static)，内部函数应该在当前源文件中说明和定义。对于可在当前源文件以外使用的函数，应该在一个头文件中说明，要使用这些函数的源文件要包含这个头文件
　　static全局变量与普通的全局变量有什么区别：static全局变量只初使化一次，防止在其他文件单元中被引用;
　　static局部变量和普通局部变量有什么区别：static局部变量只被初始化一次，下一次依据上一次结果值；
　　static函数与普通函数有什么区别：static函数在内存中只有一份，普通函数在每个被调用中维持一份拷贝
　　程序的局部变量存在于（堆栈）中，全局变量存在于（静态区 ）中，动态申请数据存在于（ 堆）中。
extern全局变量、static全局变量和static局部变量的生存期都是“永久”，区别只是可见域不同。extern全局变量可见区域是工程，static全局变量可见区域是文件，而static局部变量的可见区域是块。   
  从代码维护角度来看，对extern变量的修改可能会影响所有代码，对static全局变量的修改可能影响一个文件中的代码，而对static变量的修改可能影响一个块的代码；因此在选择变量类型时，优先级是static局部>static全局>extern全局。但它们有着共同的缺点：使用了这些类型变量的函数将是不可重入的，不是线程安全的。在C/C++标准库中有很多函数都使用了static局部变量，目前的实现中都为它们提供了两套代码，单线程版本使用static变量而多线程版本使用“线程全局变量”，比如rand,strtok等。
一个进程可用内存空间为4G，可分在存放静态数据，代码，系统内存，堆，栈等。.活动记录一般存放调用参数、返回地址等内容。堆和栈最大的区别在于堆是由低地址向高地址分配内存，而栈是由高向低。全局和静态数据存放在全局数据区，其余的在栈中，用malloc 或 new 分配的内存位于堆中。一般来说栈在低地址，堆位于高地址 


