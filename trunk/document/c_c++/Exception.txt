[异常]
MSVCRT.lib(MSVCR100.dll) : error LNK2005: _strchr 已经在 libcmt.lib(strchr.obj) 中定义
[解决]
//1>MSVCRT.lib(MSVCR100.dll) : error LNK2005: _strchr 已经在 libcmt.lib(strchr.obj) 中定义
//1>MSVCRT.lib(MSVCR100.dll) : error LNK2005: _fread 已经在 libcmt.lib(fread.obj) 中定义
//1>MSVCRT.lib(MSVCR100.dll) : error LNK2005: _feof 已经在 libcmt.lib(feoferr.obj) 中定义 
       我试了一下，确实如此。经分析，估计这是库冲突的问题，开始我采用忽略特定库办法，把MSVCRTD.lib忽略了，结果出现了另外错误：
1> uafxcwd.lib(appcore.obj) : error LNK2001: 无法解析的外部符号 ___wargv
1>uafxcwd.lib(appcore.obj) : error LNK2001: 无法解析的外部符号 ___argc 
我发现这种解决办法有陷入恶性循环的势头。我分析了一下，估计是LUA工程和调用lua库的工程采用不同的运行时库的不同造成的，也就是解决这种问题的最好办法是：保证底层库和上层调用程序所用的运行时库的一致，就是两个工程的下图的选项设置必须一致，如下图：
项目->属性->C/C++/运行时库不一样
http://blog.csdn.net/clever101/article/details/5741869 



[异常]
error LNK2019: 无法解析的外部符号 ___glutInitWithExit@12，该符号在函数 _glutInit_ATEXIT_HACK@8 中被引用
[分析]
glut.h的注释竟然就写着如下内容：   
12.   Note that the __glut*WithExit routines should NEVER be called directly.   
13.   To avoid the atexit workaround, #define GLUT_DISABLE_ATEXIT_HACK.    
[解决]
在#include <GL/glut.h>前面加上了一句： 
 #define GLUT_DISABLE_ATEXIT_HACK


[异常]
无法打开包括文件:“Cg/Cg.h”: No such file or directory
[解决]
下载并安装 NVIDIA的Cg Toolkit。( ) 安装好后，在openGL程序中就可以添加cg.h和cgGL.h头文件了。
要在openGl程序中使用Cg，这两个头文件必不可少。
cg.lib cgGL.lib


[异常]
无法打开包括文件:“GL/glut.h”: No such file or directory
[解决]
把glut.h复制到x:\Program Files\Microsoft\Visual Studio 9.0\VC\include\GL文件夹中,如果没有GL这个文件夹则可以自己新建一个。
把解压得到的glut.lib和glut32.lib放到静态函数库所在文件夹（即与include并排的lib文件夹下）。
把解压得到的glut.dll和glut32.dll放到操作系统目录下面的system32文件夹内。
(项目里就没有必要加入这些文件了)

[异常]
invalid use of incomplete type ‘struct 
[解决]
加入
#include <zipint.h>
#include <zip.h>

[异常]
不能将“this”指针从“const HashMapKeyInterface”转换为“HashMapKeyInterface &
[解决]
将compareKey()定义为const类型

[异常]fatal error C1083: 无法打开包括文件:“gl\glaux.h”: No such file or directory
[解决]
They were removed because they were deprecated with the release of the Windows Vista SDK.

For now I suggest you use glut and completely get rid of any dependency on glaux.


[Exception]不能将“this”指针从“const Cuboid”转换为“Cuboid &”
[解决]将getWidth()定义为const类型

[ERROR]没有找到MSVCR90D.dll
[解决]中文版:项目-->项目属性-->配置属性-->清单工具-->使用FAT32解决方法-->是
然后clean下,然后Rebuild即可正常运行

[Exception]error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
[解决]
可能一些调用用了一些类,这些类没有声明(在Copy时常见)

[Warning]warning: no newline at the end of file
[解决]
修复这个警告，在文件结尾回车一下就行了。可以很少会有人去仔细探究，为什么gcc会给出这么一个警告？
原因其实也很简单，因为标准规定如此。C99第5.1.1.2节这样写道：

Each instance of a backslash character (\) immediately followed by a new-line character is deleted, splicing physical source lines to form logical source lines.Only the last backslash on any physical source lineshall be eligible for being part of such a splice. A source file that is not empty shall end in a new-line character, which shall not be immediately preceded by a backslash character before any such splicing takes place.

C99 Rationale中进一步指出：

A backslash immediately before a newline has long been used to continue string literals, as well as preprocessing command lines. In the interest of easing machine generation of C, and of transporting code to machines with restrictive physical line lengths, the C89 Committee generalized this mechanism to permit any token to be continued by interposing a backslash/newline sequence.

这么规定的初衷有两个：
为了每一行都要以换行结束。 
因为行尾的\表示连接下一行，如果一个文件最后一行(main函数的右边大括号)行尾有\，那么，紧跟它也被包含进来的下一个源文件的第一行就会被连接！而如果一个文件以一个空行结束就会避免这种情况的发生。
例子：
view plaincopy to clipboardprint?
#include <stdio.h>   
int main()   
{   
    printf("%d", \   
    sizeof(int));   
    return 0;   
}  
#include <stdio.h>
int main()
{
	printf("%d", \
	sizeof(int));
	return 0;
} 
上例中的第四个物理行和第五个物理行被反斜杠(\)连接成一个逻辑行（等价于printf("%d", sizeof(int))）;
如果在第七行main函数的右大括号后面加上反斜杠的话，那么它就会和下一个文件的第一行连接，所以这里}之后要输入一个换行符，故要求每一行都要用换行结束。
注：有些编译器会自动在文件结束位置插入换行符。（譬如vi编辑器）


异常:fatal error RC1015: cannot open include file 'resource.h'.
解决:

异常:error C2039: “ReadHuge”: 不是“CFile”的成员 
解决:这是CFile的函数，不过ReadHuge（）函数已被Read（）函数代替。
还有就是WriteHuge（）函数已被Write（）函数代替。




异常:CString 没有找到接受 const GLubyte * 类型的右操作数的运算符
解决:
将oglinfo += ::glGetString( GL_VENDOR );
改为
oglinfo +=  (char *)glGetString( GL_VENDOR );

异常:VS2008LINK : fatal error LNK1000: Internal error during IncrBuildImage
解决:
VS2008 LNK1000链接错误    


最近在VS2008上做项目，不是很习惯，就编译速度上VS2008就要慢很多，这是公认的，而且还在链接的时候老出现
LINK : fatal error LNK1000: Internal error during IncrBuildImage这个错误，但是在编译链接一次就没有
问题了，据说这是链接器的问题。上网查了下资料，出现这个问题的人倒是挺多的，有两种方法可以解决：

第一种：下载补丁，链接地址为
https://connect.microsoft.com/VisualStudio/Downloads/DownloadDetails.aspx?DownloadID=11399，
我下载下来了装不上，说我没装VS2008（我想可能是版本不对或者其他问题，我的系统是win7旗舰版，VS2008是中文版的）。

第二种：修改链接选项，方法：项目->属性->链接器->常规   下面的“启用增量链接”，将
“是(/INCREMENTAL)”改为“否(/INCREMENTAL:NO)”，然后确定就可以了。
 
http://hi.baidu.com/jialifuniya/blog/item/12a49dcf9d73c330f9dc6138.html